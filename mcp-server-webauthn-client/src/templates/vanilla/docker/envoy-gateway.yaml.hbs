# Envoy Gateway Configuration for Zero-Trust WebAuthn Architecture
# Auto-generated by @vmenon25/mcp-server-webauthn-client
#
# This configuration provides:
# - JWT authentication for protected routes (/api/*)
# - Public routes for WebAuthn operations (no JWT required)
# - CORS support for web clients
# - Load balancing to backend services

static_resources:
  listeners:
    - name: main_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        # Public routes (no JWT required)
                        - match:
                            prefix: "/register"
                          route:
                            cluster: webauthn_server
                        - match:
                            prefix: "/authenticate"
                          route:
                            cluster: webauthn_server
                        - match:
                            prefix: "/public-key"
                          route:
                            cluster: webauthn_server
                        - match:
                            prefix: "/health"
                          route:
                            cluster: webauthn_server
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":path"
                                string_match:
                                  exact: "/"
                          route:
                            cluster: webauthn_server

                        # Protected routes (JWT required)
                        - match:
                            prefix: "/api"
                          route:
                            cluster: example_service

                http_filters:
                  # JWT Authentication filter
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        webauthn_provider:
                          issuer: "mpo-webauthn"
                          remote_jwks:
                            http_uri:
                              uri: http://webauthn-server:8080/public-key
                              cluster: webauthn_server
                              timeout: 5s
                            cache_duration:
                              seconds: 300  # Cache public key for 5 minutes
                          forward: true
                      rules:
                        # Require JWT for /api/* routes
                        - match:
                            prefix: "/api"
                          requires:
                            provider_name: webauthn_provider

                  # CORS filter
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors

                  # Router filter (must be last)
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: webauthn_server
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: webauthn_server
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: webauthn-server
                      port_value: 8080

    - name: example_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: example_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: example-service
                      port_value: 9000

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
