name: Runs webauthn server tests and publishes Docker images and OpenAPI client libraries for e2e tests

on:
  pull_request:
    branches:
      - main
    paths:
      - 'webauthn-server/**'
      - 'webauthn-test-credentials-service/**'
      - 'webauthn-test-lib/**'
      - 'settings.gradle.kts'
      - 'build.gradle.kts'
      - 'gradle.properties'
      - 'gradle/**'
      - '.github/workflows/webauthn-server-tests-publish-docker-client-libs.yml'

env:
  BASE_VERSION: "1.0"
  ANDROID_API_VERSION: "29"
  JAVA_VERSION: "21"
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: hitoshura25/webauthn-server
  DOCKER_TEST_CREDENTIALS_IMAGE_NAME: hitoshura25/webauthn-test-credentials-service

jobs:
  run-tests-publish-docker-client-libs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate published library version number
        id: generate-library-version
        env:
          BASE_VERSION: ${{ env.BASE_VERSION }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_PR_NUMBER: ${{ github.event.number }}
        run: |
          echo "ðŸŽ¯ Using unified version manager"
          echo "Event: $GITHUB_EVENT_NAME, PR: $GITHUB_PR_NUMBER"
          ./scripts/version-manager.sh generate

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      # Branch-specific Gradle caching
      - name: Setup branch-specific Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle/configuration-cache
            android-test-client/.gradle/configuration-cache
          key: gradle-${{ runner.os }}-${{ github.ref_name }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ github.ref_name }}-
            gradle-${{ runner.os }}-main-
            gradle-${{ runner.os }}-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          # Disable built-in cache since we're managing it manually
          cache-disabled: true

      - name: Run code quality checks, tests, coverage, and build JARs
        shell: bash
        run: ./gradlew detekt :webauthn-server:koverXmlReport :webauthn-server:shadowJar :webauthn-test-credentials-service:koverXmlReport :webauthn-test-credentials-service:shadowJar --build-cache --parallel --configuration-cache

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: webauthn-server-reports
          path: |
            webauthn-server/build/reports/
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          slug: hitoshura25/mpo-api-authn-server
          files: ./webauthn-server/build/reports/kover/report.xml
          flags: unit
          name: codecov-unit
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr

      - name: Build and push
        id: docker-push
        uses: docker/build-push-action@v6
        with:
          context: ./webauthn-server
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME}}
          subject-digest: ${{ steps.docker-push.outputs.digest }}
          push-to-registry: true

      - name: Docker Test Credentials meta
        id: docker-test-credentials-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_TEST_CREDENTIALS_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr

      - name: Build and push
        id: docker-test-credentials-push
        uses: docker/build-push-action@v6
        with:
          context: ./webauthn-test-credentials-service
          push: true
          tags: ${{ steps.docker-test-credentials-meta.outputs.tags }}
          labels: ${{ steps.docker-test-credentials-meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_TEST_CREDENTIALS_IMAGE_NAME}}
          subject-digest: ${{ steps.docker-test-credentials-push.outputs.digest }}
          push-to-registry: true
