# E2E Tests Orchestrator - Cross-Platform Integration
#
# This workflow orchestrates comprehensive end-to-end tests using built Docker images
# to ensure full system integration works correctly across all platforms.
#
# ARCHITECTURE:
# - Orchestrates parallel execution of platform-specific E2E workflows
# - Web E2E: Delegates to web-e2e-tests.yml (Playwright testing)
# - Android E2E: Delegates to android-e2e-tests.yml (emulator testing)
# - Results aggregation: Collects and reports results from both platforms
#
# TRIGGER CONDITIONS:
# - Called by main orchestrator workflow (main-ci-cd.yml)
# - Only runs when Docker images have been successfully built
# - Uses the exact images that were built for the PR
#
# TEST COVERAGE:
# - Cross-platform WebAuthn functionality (Android + Web)
# - Full API contract validation
# - Integration between all services
# - Real Docker image validation
#
# BENEFITS:
# - True parallel execution of platform tests
# - Independent platform team ownership
# - Selective test execution capabilities
# - Improved maintainability and specialization

name: E2E Tests - Cross-Platform Orchestrator

on:
  workflow_call:
    inputs:
      webauthn_server_image:
        description: 'WebAuthn server Docker image tag'
        required: true
        type: string
      test_credentials_image:
        description: 'Test credentials service Docker image tag'
        required: true
        type: string

env:
  ANDROID_API_VERSION: "29"
  JAVA_VERSION: "21"
  DOCKER_REGISTRY: ghcr.io
  # Use workflow inputs directly
  PR_NUMBER: ${{ github.event.pull_request.number }}
  WEBAUTHN_SERVER_IMAGE: ${{ inputs.webauthn_server_image }}
  TEST_CREDENTIALS_IMAGE: ${{ inputs.test_credentials_image }}

jobs:
  # Job 1: Setup configuration for callable workflows (convert env vars to job outputs)
  setup-config:
    runs-on: ubuntu-latest
    outputs:
      java-version: ${{ steps.config.outputs.java-version }}
      android-api-version: ${{ steps.config.outputs.android-api-version }}
    steps:
      - name: Setup configuration outputs
        id: config
        run: |
          echo "java-version=${{ env.JAVA_VERSION }}" >> $GITHUB_OUTPUT
          echo "android-api-version=${{ env.ANDROID_API_VERSION }}" >> $GITHUB_OUTPUT

  # Job 2: Validate Docker images are available
  validate-images:
    runs-on: ubuntu-latest
    outputs:
      webauthn-server-ready: ${{ steps.check-webauthn.outputs.available }}
      test-credentials-ready: ${{ steps.check-test-credentials.outputs.available }}
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check WebAuthn Server image availability
        id: check-webauthn
        run: |
          echo "🔍 Checking WebAuthn Server image: ${{ env.WEBAUTHN_SERVER_IMAGE }}"
          if docker manifest inspect "${{ env.WEBAUTHN_SERVER_IMAGE }}" > /dev/null 2>&1; then
            echo "✅ WebAuthn Server image is available"
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "❌ WebAuthn Server image not found"
            echo "available=false" >> $GITHUB_OUTPUT
          fi

      - name: Check Test Credentials Service image availability
        id: check-test-credentials
        run: |
          echo "🔍 Checking Test Credentials Service image: ${{ env.TEST_CREDENTIALS_IMAGE }}"
          if docker manifest inspect "${{ env.TEST_CREDENTIALS_IMAGE }}" > /dev/null 2>&1; then
            echo "✅ Test Credentials Service image is available"
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Test Credentials Service image not found"
            echo "available=false" >> $GITHUB_OUTPUT
          fi

  # Phase 4 Integration: Replace legacy file copying with client-publish workflow call
  # VERSION PATTERN: pr-{PR_NUMBER}.{RUN_NUMBER} for staging packages
  # REGISTRY: GitHub Packages (staging registry for E2E testing)
  # SCOPE: @vmenon25/*-staging packages for isolated testing
  publish-client-libraries:
    uses: ./.github/workflows/client-publish.yml
    needs: [ setup-config, validate-images ]
    if: needs.validate-images.outputs.webauthn-server-ready == 'true' && needs.validate-images.outputs.test-credentials-ready == 'true'
    permissions:
      contents: read
      packages: write  # Required for publishing to GitHub Packages
      id-token: write  # Required for npm publishing
    with:
      publish-type: "staging"
      client-version: "pr-${{ github.event.pull_request.number }}.${{ github.run_number }}"
      pr-number: ${{ github.event.pull_request.number }}

  # Job 3: Call Web E2E tests workflow
  call-web-e2e-tests:
    uses: ./.github/workflows/web-e2e-tests.yml
    needs: [ setup-config, validate-images, publish-client-libraries ]
    if: |
      needs.validate-images.outputs.webauthn-server-ready == 'true' &&
      needs.validate-images.outputs.test-credentials-ready == 'true' &&
      needs.publish-client-libraries.result == 'success'
    secrets: inherit
    with:
      webauthn-server-image: ${{ inputs.webauthn_server_image }}
      test-credentials-image: ${{ inputs.test_credentials_image }}
      pr-number: ${{ env.PR_NUMBER }}
      java-version: ${{ needs.setup-config.outputs.java-version }}
      typescript-package-name: ${{ needs.publish-client-libraries.outputs.typescript-package-name }}

  # Job 4: Call Android E2E tests workflow
  call-android-e2e-tests:
    uses: ./.github/workflows/android-e2e-tests.yml
    needs: [ setup-config, validate-images, publish-client-libraries ]
    if: |
      needs.validate-images.outputs.webauthn-server-ready == 'true' &&
      needs.validate-images.outputs.test-credentials-ready == 'true' &&
      needs.publish-client-libraries.result == 'success'
    secrets: inherit
    with:
      webauthn-server-image: ${{ inputs.webauthn_server_image }}
      test-credentials-image: ${{ inputs.test_credentials_image }}
      pr-number: ${{ env.PR_NUMBER }}
      java-version: ${{ needs.setup-config.outputs.java-version }}
      android-api-version: ${{ needs.setup-config.outputs.android-api-version }}
      android-package-name: ${{ needs.publish-client-libraries.outputs.android-package-name }}

  # Job 5: Report E2E test results back to PR
  report-results:
    runs-on: ubuntu-latest
    needs: [ validate-images, call-web-e2e-tests, call-android-e2e-tests ]
    if: always() && github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment on PR with E2E test results
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
          VALIDATION_RESULT: ${{ needs.validate-images.result }}
          WEB_E2E_RESULT: ${{ needs.call-web-e2e-tests.result }}
          ANDROID_E2E_RESULT: ${{ needs.call-android-e2e-tests.result }}
          WEB_TESTS_PASSED: ${{ needs.call-web-e2e-tests.outputs.tests-passed }}
          ANDROID_TESTS_PASSED: ${{ needs.call-android-e2e-tests.outputs.tests-passed }}
          WEB_ARTIFACT_NAME: ${{ needs.call-web-e2e-tests.outputs.artifact-name }}
          ANDROID_ARTIFACT_NAME: ${{ needs.call-android-e2e-tests.outputs.artifact-name }}
          WEBAUTHN_SERVER_IMAGE: ${{ env.WEBAUTHN_SERVER_IMAGE }}
          TEST_CREDENTIALS_IMAGE: ${{ env.TEST_CREDENTIALS_IMAGE }}
        run: |
          chmod +x scripts/ci/create-e2e-results-comment.cjs
          node scripts/ci/create-e2e-results-comment.cjs
