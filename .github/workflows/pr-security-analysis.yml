# AI-Powered PR Security Analysis
#
# This workflow performs intelligent security analysis on pull requests using AI
# to detect WebAuthn vulnerabilities, security anti-patterns, and potential attack vectors.
# 
# ARCHITECTURE:
# 1. Security-Sensitive Change Detection: Identifies PR changes to authentication flows
# 2. AI Code Analysis: Uses specialized WebAuthn Security Analysis Agent patterns
# 3. Vulnerability Pattern Matching: Cross-references with known vulnerability database
# 4. Intelligent Test Recommendations: Suggests specific security tests
# 5. PR Security Scoring: Provides risk assessment and mitigation recommendations
#
# INTEGRATION POINTS:
# - Uses WebAuthn Security Analysis Agent from .claude/agents/
# - References vulnerability-tracking.json for known patterns
# - Correlates with existing VulnerabilityProtectionTest.kt coverage
# - Integrates with existing vulnerability monitoring system
#
# TRIGGERS:
# - Pull request opened/updated with changes to security-sensitive files
# - Focuses on authentication flows, credential handling, and WebAuthn components
#
# SECURITY FOCUS AREAS:
# - PoisonSeed attack patterns
# - Username enumeration vulnerabilities (CVE-2024-39912)
# - Cross-origin authentication abuse
# - Credential tampering detection
# - Information leakage in error responses
# - Challenge reuse and replay attacks

name: AI-Powered PR Security Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      # Security-sensitive file patterns
      - 'webauthn-server/src/main/kotlin/**/*Authentication*'
      - 'webauthn-server/src/main/kotlin/**/*WebAuthn*'
      - 'webauthn-server/src/main/kotlin/**/*Security*'
      - 'webauthn-server/src/main/kotlin/**/*Credential*'
      - 'webauthn-server/src/main/kotlin/**/auth/**'
      - 'webauthn-server/src/main/kotlin/**/security/**'
      - 'webauthn-server/src/test/kotlin/**/*Security*'
      - 'webauthn-server/src/test/kotlin/**/*Vulnerability*'
      - 'build.gradle.kts'
      - '*/build.gradle.kts'
      - 'docker-compose.yml'
      - '**/*Dockerfile*'
      - '.github/workflows/**'

env:
  # AI Analysis Configuration
  SECURITY_ANALYSIS_MODEL: "claude-sonnet-4"
  VULNERABILITY_DB_PATH: "./vulnerability-tracking.json"
  WEBAUTHN_SECURITY_AGENT_PATH: "./.claude/agents/webauthn-security-analysis.md"
  
  # Security Analysis Thresholds
  HIGH_RISK_SCORE_THRESHOLD: 7.0
  MEDIUM_RISK_SCORE_THRESHOLD: 4.0
  BLOCK_MERGE_ON_CRITICAL: true

permissions:
  contents: read
  pull-requests: write
  security-events: write
  issues: write

jobs:
  # Job 1: Detect Security-Sensitive Changes
  detect-security-changes:
    name: Detect security-sensitive changes
    runs-on: ubuntu-latest
    outputs:
      has-auth-changes: ${{ steps.analyze-changes.outputs.has-auth-changes }}
      has-security-changes: ${{ steps.analyze-changes.outputs.has-security-changes }}
      has-dependency-changes: ${{ steps.analyze-changes.outputs.has-dependency-changes }}
      has-infrastructure-changes: ${{ steps.analyze-changes.outputs.has-infrastructure-changes }}
      security-risk-level: ${{ steps.analyze-changes.outputs.security-risk-level }}
      changed-files-json: ${{ steps.analyze-changes.outputs.changed-files-json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files_yaml: |
            auth_flows:
              - 'webauthn-server/src/main/kotlin/**/*Authentication*'
              - 'webauthn-server/src/main/kotlin/**/*WebAuthn*' 
              - 'webauthn-server/src/main/kotlin/**/auth/**'
            security_components:
              - 'webauthn-server/src/main/kotlin/**/*Security*'
              - 'webauthn-server/src/main/kotlin/**/*Credential*'
              - 'webauthn-server/src/main/kotlin/**/security/**'
            security_tests:
              - 'webauthn-server/src/test/kotlin/**/*Security*'
              - 'webauthn-server/src/test/kotlin/**/*Vulnerability*'
            dependencies:
              - 'build.gradle.kts'
              - '*/build.gradle.kts'
            infrastructure:
              - 'docker-compose.yml'
              - '**/*Dockerfile*'
              - '.github/workflows/**'

      - name: Analyze security impact of changes
        id: analyze-changes
        env:
          AUTH_FLOWS_FILES: ${{ steps.changed-files.outputs.auth_flows_all_changed_files }}
          SECURITY_COMPONENTS_FILES: ${{ steps.changed-files.outputs.security_components_all_changed_files }}
          SECURITY_TESTS_FILES: ${{ steps.changed-files.outputs.security_tests_all_changed_files }}
          DEPENDENCIES_FILES: ${{ steps.changed-files.outputs.dependencies_all_changed_files }}
          INFRASTRUCTURE_FILES: ${{ steps.changed-files.outputs.infrastructure_all_changed_files }}
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          chmod +x scripts/security/analyze-changes.sh
          scripts/security/analyze-changes.sh

  # Job 2: AI-Powered Security Code Analysis
  ai-security-analysis:
    name: AI security code analysis
    runs-on: ubuntu-latest
    needs: detect-security-changes
    if: needs.detect-security-changes.outputs.security-risk-level != 'MINIMAL'
    outputs:
      security-score: ${{ steps.ai-analysis.outputs.security-score }}
      vulnerabilities-found: ${{ steps.ai-analysis.outputs.vulnerabilities-found }}
      recommendations: ${{ steps.ai-analysis.outputs.recommendations }}
      analysis-report: ${{ steps.ai-analysis.outputs.analysis-report }}
      requires-security-review: ${{ steps.ai-analysis.outputs.requires-security-review }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js for AI analysis
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AI analysis dependencies
        run: |
          npm install
          
          # Install additional dependencies for AI analysis
          npm install --save-dev \
            @anthropic-ai/sdk \
            typescript \
            ts-node \
            @types/node

      - name: Load WebAuthn Security Agent and Vulnerability Database
        id: load-security-context
        run: |
          echo "📚 Loading security analysis context..."
          
          # Load WebAuthn Security Analysis Agent
          if [ -f "${{ env.WEBAUTHN_SECURITY_AGENT_PATH }}" ]; then
            echo "✅ WebAuthn Security Agent loaded"
            AGENT_CONTENT=$(cat "${{ env.WEBAUTHN_SECURITY_AGENT_PATH }}")
            echo "agent-loaded=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ WebAuthn Security Agent not found"
            echo "agent-loaded=false" >> $GITHUB_OUTPUT
          fi
          
          # Load vulnerability tracking database
          if [ -f "${{ env.VULNERABILITY_DB_PATH }}" ]; then
            echo "✅ Vulnerability database loaded"
            VULN_COUNT=$(jq '.vulnerabilities | length' "${{ env.VULNERABILITY_DB_PATH }}")
            echo "📊 Known vulnerabilities: $VULN_COUNT"
            echo "vuln-db-loaded=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Vulnerability database not found"
            echo "vuln-db-loaded=false" >> $GITHUB_OUTPUT
          fi

      - name: AI Security Analysis
        id: ai-analysis
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_BODY: ${{ github.event.pull_request.body }}
          CHANGED_FILES: ${{ needs.detect-security-changes.outputs.changed-files-json }}
          RISK_LEVEL: ${{ needs.detect-security-changes.outputs.security-risk-level }}
        run: |
          chmod +x scripts/security/analyze-pr.sh
          scripts/security/analyze-pr.sh "$CHANGED_FILES" "$PR_TITLE" "$PR_BODY" "$RISK_LEVEL"

      - name: Upload security analysis results
        uses: actions/upload-artifact@v4
        with:
          name: security-analysis-results
          path: security-analysis-results.json

  # Job 3: Security Test Recommendation
  security-test-recommendations:
    name: Generate security test recommendations
    runs-on: ubuntu-latest
    needs: [detect-security-changes, ai-security-analysis]
    if: needs.ai-security-analysis.outputs.vulnerabilities-found > 0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download security analysis results
        uses: actions/download-artifact@v4
        with:
          name: security-analysis-results

      - name: Generate security test implementations
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          chmod +x scripts/security/generate-tests.sh
          scripts/security/generate-tests.sh

      - name: Upload security test implementations
        uses: actions/upload-artifact@v4
        with:
          name: security-test-implementations
          path: security-test-implementations.json

  # Job 4: Create PR Security Review Comment
  create-security-comment:
    name: Create PR security review comment
    runs-on: ubuntu-latest
    needs: [detect-security-changes, ai-security-analysis, security-test-recommendations]
    if: always() && needs.detect-security-changes.outputs.security-risk-level != 'MINIMAL'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download analysis artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: security-*
          merge-multiple: true

      - name: Create comprehensive security comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECURITY_SCORE: ${{ needs.ai-security-analysis.outputs.security-score }}
          VULNERABILITIES_COUNT: ${{ needs.ai-security-analysis.outputs.vulnerabilities-found }}
          REQUIRES_REVIEW: ${{ needs.ai-security-analysis.outputs.requires-security-review }}
          RISK_LEVEL: ${{ needs.detect-security-changes.outputs.security-risk-level }}
          PR_NUMBER: ${{ github.event.number }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY_NAME: ${{ github.event.repository.name }}
        run: |
          chmod +x scripts/security/create-security-comment.cjs
          node scripts/security/create-security-comment.cjs

  # Job 5: Block merge if critical security issues found
  security-gate:
    name: Security gate check
    runs-on: ubuntu-latest
    needs: ai-security-analysis
    if: needs.ai-security-analysis.outputs.security-score >= 8.0
    env:
      BLOCK_MERGE_ON_CRITICAL: 'true'  # Move env to job level
    steps:
      - name: Block merge for critical security issues
        if: env.BLOCK_MERGE_ON_CRITICAL == 'true'  # Now check at step level
        run: |
          echo "🚨 CRITICAL SECURITY ISSUES DETECTED"
          echo "Security Score: ${{ needs.ai-security-analysis.outputs.security-score }}/10"
          echo "Vulnerabilities: ${{ needs.ai-security-analysis.outputs.vulnerabilities-found }}"
          echo ""
          echo "❌ This PR cannot be merged until security issues are resolved"
          echo "📋 Review the security analysis comment for details"
          exit 1

  # Job 6: Add security labels
  add-security-labels:
    name: Add security labels to PR
    runs-on: ubuntu-latest
    needs: [detect-security-changes, ai-security-analysis]
    if: always() && needs.detect-security-changes.outputs.security-risk-level != 'MINIMAL'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add security labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECURITY_SCORE: ${{ needs.ai-security-analysis.outputs.security-score }}
          RISK_LEVEL: ${{ needs.detect-security-changes.outputs.security-risk-level }}
          REQUIRES_SECURITY_REVIEW: ${{ needs.ai-security-analysis.outputs.requires-security-review }}
          HAS_AUTH_CHANGES: ${{ needs.detect-security-changes.outputs.has-auth-changes }}
          HAS_DEPENDENCY_CHANGES: ${{ needs.detect-security-changes.outputs.has-dependency-changes }}
          PR_NUMBER: ${{ github.event.number }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY_NAME: ${{ github.event.repository.name }}
        run: |
          chmod +x scripts/security/add-security-labels.cjs
          node scripts/security/add-security-labels.cjs