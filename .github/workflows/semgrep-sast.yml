name: Semgrep SAST Security Analysis

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_call:
    outputs:
      findings-found:
        description: 'Whether SAST findings were detected'
        value: ${{ jobs.semgrep.outputs.findings-found }}

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  semgrep:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    outputs:
      findings-found: ${{ steps.analyze.outputs.findings-found }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for comprehensive analysis

      - name: Run Semgrep analysis
        id: analyze
        run: |
          echo "🔒 Running Semgrep SAST analysis..."
          
          # Install semgrep
          python -m pip install semgrep
          
          # Run Semgrep with combined output formats for both Security tab and unified reporting
          # Using registry rules + custom WebAuthn rules
          semgrep ci \
            --config=auto \
            --config=.semgrep/webauthn-rules.yml \
            --sarif-output=semgrep.sarif \
            --json-output=semgrep-results.json \
            --no-suppress-errors || true
          
          # Alternative approach with explicit rule sets (commented for reference)
          #semgrep --config=p/security-audit --config=p/kotlin --config=p/typescript \
          #  --config=.semgrep/webauthn-rules.yml \
          #  --sarif-output=semgrep.sarif --json-output=semgrep-results.json . || true

          # Legacy approach (commented for reference)
          #semgrep ci --sarif-output=semgrep.sarif --json-output=semgrep-results.json

          echo "✅ Semgrep analysis completed"
          
          # Check for findings in JSON output
          if [[ -f "semgrep-results.json" ]]; then
            FINDINGS_COUNT=$(jq -r '.results | length' semgrep-results.json 2>/dev/null || echo "0")
            
            if [[ ${FINDINGS_COUNT} -gt 0 ]]; then
              echo "⚠️ Found ${FINDINGS_COUNT} SAST findings"
              echo "findings-found=true" >> $GITHUB_OUTPUT
            else
              echo "✅ No SAST findings detected!"
              echo "findings-found=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "⚠️ No JSON results file generated"
            echo "findings-found=false" >> $GITHUB_OUTPUT
          fi
        env:
          SEMGREP_TIMEOUT: 300

      # Note: Individual PR comments removed - findings now included in unified security dashboard

      - name: Upload SARIF to GitHub Security tab
        if: always() && hashFiles('semgrep.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: "Semgrep SAST"
        continue-on-error: true

      - name: Upload results as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-results-${{ github.event_name }}-${{ github.run_number }}
          path: |
            semgrep-results.json
            semgrep.sarif
          retention-days: 30
        continue-on-error: true