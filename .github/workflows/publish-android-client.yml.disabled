name: Generate and Publish Android Client

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish even if no changes detected'
        required: false
        default: false
        type: boolean

env:
  BASE_VERSION: "1.0.0"

jobs:
  detect-changes:
    name: Detect API Changes
    runs-on: ubuntu-latest
    outputs:
      api-changed: ${{ steps.changes.outputs.api }}
      should-publish: ${{ steps.decision.outputs.should-publish }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes in OpenAPI spec or generation config
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            api:
              - 'webauthn-server/src/main/resources/openapi/**'
              - 'webauthn-server/build.gradle.kts'
              - '.github/workflows/publish-android-client.yml'
              - 'android-test-client/**'

      - name: Decide whether to publish
        id: decision
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.force_publish }}" == "true" ]]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "üîÑ Publishing forced via workflow_dispatch"
          elif [[ "${{ steps.changes.outputs.api }}" == "true" ]]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "üìù API changes detected, will publish"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "‚è≠Ô∏è No API changes detected, skipping publish"
          fi

  generate-version:
    name: Generate Version Number
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-publish == 'true'
    outputs:
      version: ${{ steps.version.outputs.version }}
      is-prerelease: ${{ steps.version.outputs.is-prerelease }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version number
        id: version
        run: |
          BASE_VERSION="${{ env.BASE_VERSION }}"
          
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            # Main branch: use semantic version
            VERSION="$BASE_VERSION"
            IS_PRERELEASE="false"
            echo "üì¶ Main branch release: $VERSION"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # PR: use PR-aware version
            PR_NUMBER="${{ github.event.number }}"
            RUN_NUMBER="${{ github.run_number }}"
            VERSION="${BASE_VERSION}-pr-${PR_NUMBER}.${RUN_NUMBER}"
            IS_PRERELEASE="true"
            echo "üîÄ PR release: $VERSION"
          else
            # Feature branch: use branch-aware version  
            BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
            RUN_NUMBER="${{ github.run_number }}"
            VERSION="${BASE_VERSION}-${BRANCH_NAME}.${RUN_NUMBER}"
            IS_PRERELEASE="true"
            echo "üåø Branch release: $VERSION"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "is-prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION (prerelease: $IS_PRERELEASE)"

  build-and-publish:
    name: Build and Publish Android Client
    runs-on: ubuntu-latest
    needs: [ detect-changes, generate-version ]
    if: needs.detect-changes.outputs.should-publish == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Generate and copy Android client
        run: |
          VERSION="${{ needs.generate-version.outputs.version }}"
          echo "üìù Generating Android client with version: $VERSION"
          
          # Generate the client from main project
          ./gradlew :webauthn-server:copyGeneratedClientToLibrary --info
          
          echo "‚úÖ Android client generated and copied to library module"

      - name: Build and publish Android client library
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLIENT_VERSION: ${{ needs.generate-version.outputs.version }}
        run: |
          echo "üî® Building and publishing Android client library..."
          cd android-test-client
          
          # Build and publish the library module
          ./gradlew client-library:assembleRelease client-library:publish --info
          
          echo "‚úÖ Android client published successfully"

      - name: Create GitHub Release
        if: needs.generate-version.outputs.is-prerelease == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "android-client-v${{ needs.generate-version.outputs.version }}"
          name: "Android Client v${{ needs.generate-version.outputs.version }}"
          body: |
            ## Android Client Library v${{ needs.generate-version.outputs.version }}
            
            Generated Android client library for MPO WebAuthn API.
            
            ### Installation
            
            Add to your `build.gradle`:
            
            ```gradle
            repositories {
                maven {
                    url = uri("https://maven.pkg.github.com/${{ github.repository }}")
                    credentials {
                        username = "YOUR_GITHUB_USERNAME"
                        password = "YOUR_GITHUB_TOKEN"
                    }
                }
            }
            
            dependencies {
                implementation 'com.vmenon.mpo.api.authn:mpo-webauthn-android-client:${{ needs.generate-version.outputs.version }}'
            }
            ```
            
            ### Changes
            - Generated from OpenAPI specification
            - Supports WebAuthn registration and authentication
            - Compatible with Android API 26+
            
            ### Documentation
            - [API Documentation](https://github.com/${{ github.repository }}/blob/main/CLIENT_GENERATION.md)
            - [Android Integration Guide](https://github.com/${{ github.repository }}/blob/main/android-test-client/README.md)
          draft: false
          prerelease: false

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ needs.generate-version.outputs.version }}';
            const repository = '${{ github.repository }}';
            
            const comment = `## üì¶ Android Client Published
            
            A new version of the Android client has been published for this PR:
            
            **Version:** \`${version}\`
            **Package:** \`com.vmenon.mpo.api.authn:mpo-webauthn-android-client:${version}\`
            
            ### üöÄ Usage
            
            Add to your \`build.gradle\`:
            
            \`\`\`gradle
            repositories {
                maven {
                    url = uri("https://maven.pkg.github.com/${repository}")
                    credentials {
                        username = "YOUR_GITHUB_USERNAME"
                        password = "YOUR_GITHUB_TOKEN"
                    }
                }
            }
            
            dependencies {
                implementation 'com.vmenon.mpo.api.authn:mpo-webauthn-android-client:${version}'
            }
            \`\`\`
            
            ### üìã Changes
            This version includes the API changes from this PR. Test it and provide feedback!
            
            ### üîó Links
            - [View Package](https://github.com/${repository}/packages)
            - [Integration Guide](https://github.com/${repository}/blob/main/android-test-client/README.md)
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  test-android-client:
    name: Test Android Client Integration
    runs-on: ubuntu-latest
    needs: [ detect-changes, generate-version, build-and-publish ]
    if: needs.detect-changes.outputs.should-publish == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Build Android test client with generated library
        env:
          CLIENT_VERSION: ${{ needs.generate-version.outputs.version }}
        run: |
          echo "üî® Building Android test client with generated library..."
          cd android-test-client
          
          # Build the entire project including the library
          ./gradlew build --info
          
          echo "‚úÖ Android test client built successfully"

  summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: [ detect-changes, generate-version, build-and-publish, test-android-client ]
    if: always()
    steps:
      - name: Print summary
        run: |
          echo "## üìã Workflow Summary"
          echo "- **API Changes Detected:** ${{ needs.detect-changes.outputs.api-changed }}"
          echo "- **Should Publish:** ${{ needs.detect-changes.outputs.should-publish }}"
          
          if [[ "${{ needs.detect-changes.outputs.should-publish }}" == "true" ]]; then
            echo "- **Generated Version:** ${{ needs.generate-version.outputs.version }}"
            echo "- **Is Prerelease:** ${{ needs.generate-version.outputs.is-prerelease }}"
            echo "- **Event Type:** ${{ github.event_name }}"
            echo "- **Build Status:** ${{ needs.build-and-publish.result }}"
            echo "- **Test Status:** ${{ needs.test-android-client.result }}"
            echo ""
            if [[ "${{ needs.build-and-publish.result }}" == "success" && "${{ needs.test-android-client.result }}" == "success" ]]; then
              echo "‚úÖ Android client published and tested successfully!"
            else
              echo "‚ùå Some steps failed - check logs above"
            fi
          else
            echo ""
            echo "‚è≠Ô∏è No publishing needed - no API changes detected"
          fi