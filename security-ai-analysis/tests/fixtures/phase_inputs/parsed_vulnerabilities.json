[
  {
    "tool": "trivy",
    "id": "CVE-2024-12798",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12798\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12798](https://avd.aquasec.com/nvd/cve-2024-12798)",
    "short_description": "logback-core: arbitrary code execution via JaninoEventEvaluator",
    "full_description": "ACE vulnerability in JaninoEventEvaluator  by QOS.CH logback-core\n      upto including version 0.1 to 1.3.14 and\u00a01.4.0 to 1.5.12 in Java applications allows\n      attacker to execute arbitrary code by compromising an existing\n      logback configuration file or by injecting an environment variable\n      before program execution.\n\n\n\n\n\nMalicious logback configuration files can allow the attacker to execute \narbitrary code using the JaninoEventEvaluator extension.\n\n\n\nA successful attack requires the user to have write access to a \nconfiguration file. Alternatively, the attacker could inject a malicious \nenvironment variable pointing to a malicious configuration file. In both \ncases, the attack requires existing privilege.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12801",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12801\nSeverity: LOW\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12801](https://avd.aquasec.com/nvd/cve-2024-12801)",
    "short_description": "logback-core: SaxEventRecorder vulnerable to Server-Side Request Forgery (SSRF) attacks",
    "full_description": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 0.1 to 1.3.14 and 1.4.0 to 1.5.12\u00a0 on the Java platform, allows an attacker to \nforge requests by compromising logback configuration files in XML.\n\n\n\nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2023-2976",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "com.google.guava:guava",
    "installed_version": "31.1-jre",
    "fixed_version": "32.0.0-android",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: com.google.guava:guava\nInstalled Version: 31.1-jre\nVulnerability CVE-2023-2976\nSeverity: MEDIUM\nFixed Version: 32.0.0-android\nLink: [CVE-2023-2976](https://avd.aquasec.com/nvd/cve-2023-2976)",
    "short_description": "guava: insecure temporary directory creation",
    "full_description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android to fix security vulnerability",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "The currently installed version 31.1-jre of com.google.guava:guava is vulnerable. Upgrading to version 32.0.0-android will resolve the issue.",
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2023-2976",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2023-2976",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2020-8908",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "3.3",
    "level": "note",
    "package_name": "com.google.guava:guava",
    "installed_version": "31.1-jre",
    "fixed_version": "32.0.0-android",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: com.google.guava:guava\nInstalled Version: 31.1-jre\nVulnerability CVE-2020-8908\nSeverity: LOW\nFixed Version: 32.0.0-android\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)",
    "short_description": "guava: local information disclosure via temporary directory created with unsafe permissions",
    "full_description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android to fix security vulnerability",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "The currently installed version 31.1-jre of com.google.guava:guava is vulnerable. Upgrading to version 32.0.0-android will resolve the issue.",
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2020-8908",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2020-8908",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47554",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "commons-io:commons-io",
    "installed_version": "2.11.0",
    "fixed_version": "2.14.0",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: commons-io:commons-io\nInstalled Version: 2.11.0\nVulnerability CVE-2024-47554\nSeverity: HIGH\nFixed Version: 2.14.0\nLink: [CVE-2024-47554](https://avd.aquasec.com/nvd/cve-2024-47554)",
    "short_description": "apache-commons-io: Possible denial of service attack on untrusted input to XmlStreamReader",
    "full_description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade commons-io:commons-io from 2.11.0 to 2.14.0 to fix security vulnerability",
      "fixed_code": "implementation(\"commons-io:commons-io:2.14.0\")",
      "explanation": "The currently installed version 2.11.0 of commons-io:commons-io is vulnerable. Upgrading to version 2.14.0 will resolve the issue.",
      "package": "commons-io:commons-io",
      "from_version": "2.11.0",
      "to_version": "2.14.0",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47554",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47554",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58057",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-codec",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.125.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-58057\nSeverity: MEDIUM\nFixed Version: 4.1.125.Final\nLink: [CVE-2025-58057](https://avd.aquasec.com/nvd/cve-2025-58057)",
    "short_description": "netty-codec: netty-codec-compression: Netty's BrotliDecoder is vulnerable to DoS via zip bomb style attack",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In netty-codec-compression versions 4.1.124.Final and below, and netty-codec versions 4.2.4.Final and below, when supplied with specially crafted input, BrotliDecoder and certain other decompression decoders will allocate a large number of reachable byte buffers, which can lead to denial of service. BrotliDecoder.decompress has no limit in how often it calls pull, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is fixed in versions 4.1.125.Final of netty-codec and 4.2.5.Final of netty-codec-compression.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.101.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-29025",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.3",
    "level": "warning",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.108.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2024-29025\nSeverity: MEDIUM\nFixed Version: 4.1.108.Final\nLink: [CVE-2024-29025](https://avd.aquasec.com/nvd/cve-2024-29025)",
    "short_description": "netty-codec-http: Allocation of Resources Without Limits or Throttling",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.108.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.108.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58056",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-58056\nSeverity: LOW\nFixed Version: 4.1.125.Final, 4.2.5.Final\nLink: [CVE-2025-58056](https://avd.aquasec.com/nvd/cve-2025-58056)",
    "short_description": "netty-codec-http: Netty is vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "full_description": "Netty is an asynchronous event-driven network application framework for development of maintainable high performance protocol servers and clients. In versions 4.1.124.Final, and 4.2.0.Alpha3 through 4.2.4.Final, Netty incorrectly accepts standalone newline characters (LF) as a chunk-size line terminator, regardless of a preceding carriage return (CR), instead of requiring CRLF per HTTP/1.1 standards. When combined with reverse proxies that parse LF differently (treating it as part of the chunk extension), attackers can craft requests that the proxy sees as one request but Netty processes as two, enabling request smuggling attacks. This is fixed in versions 4.1.125.Final and 4.2.5.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.2.5.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.2.5.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-55163",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-codec-http2",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http2\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-55163\nSeverity: HIGH\nFixed Version: 4.2.4.Final, 4.1.124.Final\nLink: [CVE-2025-55163](https://avd.aquasec.com/nvd/cve-2025-55163)",
    "short_description": "netty: netty-codec-http2: Netty MadeYouReset HTTP/2 DDoS Vulnerability",
    "full_description": "Netty is an asynchronous, event-driven network application framework. Prior to versions 4.1.124.Final and 4.2.4.Final, Netty is vulnerable to MadeYouReset DDoS. This is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service. This issue has been patched in versions 4.1.124.Final and 4.2.4.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.101.Final to 4.2.4.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http2 is vulnerable. Upgrading to version 4.2.4.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.101.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.1.124.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.1.124.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47535",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.115.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2024-47535\nSeverity: MEDIUM\nFixed Version: 4.1.115.Final\nLink: [CVE-2024-47535](https://avd.aquasec.com/nvd/cve-2024-47535)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.115.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.115.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-25193",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-25193\nSeverity: MEDIUM\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-25193](https://avd.aquasec.com/nvd/cve-2025-25193)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability in versions up to and including 4.1.118.Final. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crash. A similar issue was previously reported as CVE-2024-47535. This issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit. Commit d1fbda62d3a47835d3fb35db8bd42ecc205a5386 contains an updated fix.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-24970",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-handler",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-handler\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-24970\nSeverity: HIGH\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-24970](https://avd.aquasec.com/nvd/cve-2025-24970)",
    "short_description": "io.netty:netty-handler: SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability starting in version 4.1.91.Final and prior to version 4.1.118.Final. When a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash. Version 4.1.118.Final contains a patch. As workaround its possible to either disable the usage of the native SSLEngine or change the code manually.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.101.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-handler is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-handler",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-48924",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "6.5",
    "level": "warning",
    "package_name": "org.apache.commons:commons-lang3",
    "installed_version": "3.12.0",
    "fixed_version": "3.18.0",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: org.apache.commons:commons-lang3\nInstalled Version: 3.12.0\nVulnerability CVE-2025-48924\nSeverity: MEDIUM\nFixed Version: 3.18.0\nLink: [CVE-2025-48924](https://avd.aquasec.com/nvd/cve-2025-48924)",
    "short_description": "commons-lang/commons-lang: org.apache.commons/commons-lang3: Uncontrolled Recursion vulnerability in Apache Commons Lang",
    "full_description": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with\u00a0commons-lang:commons-lang\u00a02.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before\u00a03.18.0.\n\nThe methods ClassUtils.getClass(...) can throw\u00a0StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a \nStackOverflowError could\u00a0cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-lang3 from 3.12.0 to 3.18.0 to fix security vulnerability",
      "fixed_code": "implementation(\"org.apache.commons:commons-lang3:3.18.0\")",
      "explanation": "The currently installed version 3.12.0 of org.apache.commons:commons-lang3 is vulnerable. Upgrading to version 3.18.0 will resolve the issue.",
      "package": "org.apache.commons:commons-lang3",
      "from_version": "3.12.0",
      "to_version": "3.18.0",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-48924",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-48924",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12798",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12798\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12798](https://avd.aquasec.com/nvd/cve-2024-12798)",
    "short_description": "logback-core: arbitrary code execution via JaninoEventEvaluator",
    "full_description": "ACE vulnerability in JaninoEventEvaluator  by QOS.CH logback-core\n      upto including version 0.1 to 1.3.14 and\u00a01.4.0 to 1.5.12 in Java applications allows\n      attacker to execute arbitrary code by compromising an existing\n      logback configuration file or by injecting an environment variable\n      before program execution.\n\n\n\n\n\nMalicious logback configuration files can allow the attacker to execute \narbitrary code using the JaninoEventEvaluator extension.\n\n\n\nA successful attack requires the user to have write access to a \nconfiguration file. Alternatively, the attacker could inject a malicious \nenvironment variable pointing to a malicious configuration file. In both \ncases, the attack requires existing privilege.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12801",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12801\nSeverity: LOW\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12801](https://avd.aquasec.com/nvd/cve-2024-12801)",
    "short_description": "logback-core: SaxEventRecorder vulnerable to Server-Side Request Forgery (SSRF) attacks",
    "full_description": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 0.1 to 1.3.14 and 1.4.0 to 1.5.12\u00a0 on the Java platform, allows an attacker to \nforge requests by compromising logback configuration files in XML.\n\n\n\nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58057",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-codec",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.125.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-58057\nSeverity: MEDIUM\nFixed Version: 4.1.125.Final\nLink: [CVE-2025-58057](https://avd.aquasec.com/nvd/cve-2025-58057)",
    "short_description": "netty-codec: netty-codec-compression: Netty's BrotliDecoder is vulnerable to DoS via zip bomb style attack",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In netty-codec-compression versions 4.1.124.Final and below, and netty-codec versions 4.2.4.Final and below, when supplied with specially crafted input, BrotliDecoder and certain other decompression decoders will allocate a large number of reachable byte buffers, which can lead to denial of service. BrotliDecoder.decompress has no limit in how often it calls pull, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is fixed in versions 4.1.125.Final of netty-codec and 4.2.5.Final of netty-codec-compression.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.106.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-29025",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.3",
    "level": "warning",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.108.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2024-29025\nSeverity: MEDIUM\nFixed Version: 4.1.108.Final\nLink: [CVE-2024-29025](https://avd.aquasec.com/nvd/cve-2024-29025)",
    "short_description": "netty-codec-http: Allocation of Resources Without Limits or Throttling",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.108.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.108.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58056",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-58056\nSeverity: LOW\nFixed Version: 4.1.125.Final, 4.2.5.Final\nLink: [CVE-2025-58056](https://avd.aquasec.com/nvd/cve-2025-58056)",
    "short_description": "netty-codec-http: Netty is vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "full_description": "Netty is an asynchronous event-driven network application framework for development of maintainable high performance protocol servers and clients. In versions 4.1.124.Final, and 4.2.0.Alpha3 through 4.2.4.Final, Netty incorrectly accepts standalone newline characters (LF) as a chunk-size line terminator, regardless of a preceding carriage return (CR), instead of requiring CRLF per HTTP/1.1 standards. When combined with reverse proxies that parse LF differently (treating it as part of the chunk extension), attackers can craft requests that the proxy sees as one request but Netty processes as two, enabling request smuggling attacks. This is fixed in versions 4.1.125.Final and 4.2.5.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.2.5.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.2.5.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-55163",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-codec-http2",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http2\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-55163\nSeverity: HIGH\nFixed Version: 4.2.4.Final, 4.1.124.Final\nLink: [CVE-2025-55163](https://avd.aquasec.com/nvd/cve-2025-55163)",
    "short_description": "netty: netty-codec-http2: Netty MadeYouReset HTTP/2 DDoS Vulnerability",
    "full_description": "Netty is an asynchronous, event-driven network application framework. Prior to versions 4.1.124.Final and 4.2.4.Final, Netty is vulnerable to MadeYouReset DDoS. This is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service. This issue has been patched in versions 4.1.124.Final and 4.2.4.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.106.Final to 4.2.4.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http2 is vulnerable. Upgrading to version 4.2.4.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.106.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.1.124.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.1.124.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47535",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.115.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2024-47535\nSeverity: MEDIUM\nFixed Version: 4.1.115.Final\nLink: [CVE-2024-47535](https://avd.aquasec.com/nvd/cve-2024-47535)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.115.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.115.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-25193",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-25193\nSeverity: MEDIUM\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-25193](https://avd.aquasec.com/nvd/cve-2025-25193)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability in versions up to and including 4.1.118.Final. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crash. A similar issue was previously reported as CVE-2024-47535. This issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit. Commit d1fbda62d3a47835d3fb35db8bd42ecc205a5386 contains an updated fix.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-24970",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-handler",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-handler\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-24970\nSeverity: HIGH\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-24970](https://avd.aquasec.com/nvd/cve-2025-24970)",
    "short_description": "io.netty:netty-handler: SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability starting in version 4.1.91.Final and prior to version 4.1.118.Final. When a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash. Version 4.1.118.Final contains a patch. As workaround its possible to either disable the usage of the native SSLEngine or change the code manually.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.106.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-handler is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-handler",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12798",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12798\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12798](https://avd.aquasec.com/nvd/cve-2024-12798)",
    "short_description": "logback-core: arbitrary code execution via JaninoEventEvaluator",
    "full_description": "ACE vulnerability in JaninoEventEvaluator  by QOS.CH logback-core\n      upto including version 0.1 to 1.3.14 and\u00a01.4.0 to 1.5.12 in Java applications allows\n      attacker to execute arbitrary code by compromising an existing\n      logback configuration file or by injecting an environment variable\n      before program execution.\n\n\n\n\n\nMalicious logback configuration files can allow the attacker to execute \narbitrary code using the JaninoEventEvaluator extension.\n\n\n\nA successful attack requires the user to have write access to a \nconfiguration file. Alternatively, the attacker could inject a malicious \nenvironment variable pointing to a malicious configuration file. In both \ncases, the attack requires existing privilege.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12801",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12801\nSeverity: LOW\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12801](https://avd.aquasec.com/nvd/cve-2024-12801)",
    "short_description": "logback-core: SaxEventRecorder vulnerable to Server-Side Request Forgery (SSRF) attacks",
    "full_description": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 0.1 to 1.3.14 and 1.4.0 to 1.5.12\u00a0 on the Java platform, allows an attacker to \nforge requests by compromising logback configuration files in XML.\n\n\n\nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2023-2976",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "com.google.guava:guava",
    "installed_version": "31.1-jre",
    "fixed_version": "32.0.0-android",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: com.google.guava:guava\nInstalled Version: 31.1-jre\nVulnerability CVE-2023-2976\nSeverity: MEDIUM\nFixed Version: 32.0.0-android\nLink: [CVE-2023-2976](https://avd.aquasec.com/nvd/cve-2023-2976)",
    "short_description": "guava: insecure temporary directory creation",
    "full_description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android to fix security vulnerability",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "The currently installed version 31.1-jre of com.google.guava:guava is vulnerable. Upgrading to version 32.0.0-android will resolve the issue.",
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2023-2976",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2023-2976",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2020-8908",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "3.3",
    "level": "note",
    "package_name": "com.google.guava:guava",
    "installed_version": "31.1-jre",
    "fixed_version": "32.0.0-android",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: com.google.guava:guava\nInstalled Version: 31.1-jre\nVulnerability CVE-2020-8908\nSeverity: LOW\nFixed Version: 32.0.0-android\nLink: [CVE-2020-8908](https://avd.aquasec.com/nvd/cve-2020-8908)",
    "short_description": "guava: local information disclosure via temporary directory created with unsafe permissions",
    "full_description": "A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.\n\n",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android to fix security vulnerability",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "The currently installed version 31.1-jre of com.google.guava:guava is vulnerable. Upgrading to version 32.0.0-android will resolve the issue.",
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2020-8908",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2020-8908",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47554",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "commons-io:commons-io",
    "installed_version": "2.11.0",
    "fixed_version": "2.14.0",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: commons-io:commons-io\nInstalled Version: 2.11.0\nVulnerability CVE-2024-47554\nSeverity: HIGH\nFixed Version: 2.14.0\nLink: [CVE-2024-47554](https://avd.aquasec.com/nvd/cve-2024-47554)",
    "short_description": "apache-commons-io: Possible denial of service attack on untrusted input to XmlStreamReader",
    "full_description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe org.apache.commons.io.input.XmlStreamReader class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade commons-io:commons-io from 2.11.0 to 2.14.0 to fix security vulnerability",
      "fixed_code": "implementation(\"commons-io:commons-io:2.14.0\")",
      "explanation": "The currently installed version 2.11.0 of commons-io:commons-io is vulnerable. Upgrading to version 2.14.0 will resolve the issue.",
      "package": "commons-io:commons-io",
      "from_version": "2.11.0",
      "to_version": "2.14.0",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47554",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47554",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58057",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-codec",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.125.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-58057\nSeverity: MEDIUM\nFixed Version: 4.1.125.Final\nLink: [CVE-2025-58057](https://avd.aquasec.com/nvd/cve-2025-58057)",
    "short_description": "netty-codec: netty-codec-compression: Netty's BrotliDecoder is vulnerable to DoS via zip bomb style attack",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In netty-codec-compression versions 4.1.124.Final and below, and netty-codec versions 4.2.4.Final and below, when supplied with specially crafted input, BrotliDecoder and certain other decompression decoders will allocate a large number of reachable byte buffers, which can lead to denial of service. BrotliDecoder.decompress has no limit in how often it calls pull, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is fixed in versions 4.1.125.Final of netty-codec and 4.2.5.Final of netty-codec-compression.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.101.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-29025",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.3",
    "level": "warning",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.108.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2024-29025\nSeverity: MEDIUM\nFixed Version: 4.1.108.Final\nLink: [CVE-2024-29025](https://avd.aquasec.com/nvd/cve-2024-29025)",
    "short_description": "netty-codec-http: Allocation of Resources Without Limits or Throttling",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.108.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.108.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58056",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-58056\nSeverity: LOW\nFixed Version: 4.1.125.Final, 4.2.5.Final\nLink: [CVE-2025-58056](https://avd.aquasec.com/nvd/cve-2025-58056)",
    "short_description": "netty-codec-http: Netty is vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "full_description": "Netty is an asynchronous event-driven network application framework for development of maintainable high performance protocol servers and clients. In versions 4.1.124.Final, and 4.2.0.Alpha3 through 4.2.4.Final, Netty incorrectly accepts standalone newline characters (LF) as a chunk-size line terminator, regardless of a preceding carriage return (CR), instead of requiring CRLF per HTTP/1.1 standards. When combined with reverse proxies that parse LF differently (treating it as part of the chunk extension), attackers can craft requests that the proxy sees as one request but Netty processes as two, enabling request smuggling attacks. This is fixed in versions 4.1.125.Final and 4.2.5.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.2.5.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.2.5.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-55163",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-codec-http2",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http2\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-55163\nSeverity: HIGH\nFixed Version: 4.2.4.Final, 4.1.124.Final\nLink: [CVE-2025-55163](https://avd.aquasec.com/nvd/cve-2025-55163)",
    "short_description": "netty: netty-codec-http2: Netty MadeYouReset HTTP/2 DDoS Vulnerability",
    "full_description": "Netty is an asynchronous, event-driven network application framework. Prior to versions 4.1.124.Final and 4.2.4.Final, Netty is vulnerable to MadeYouReset DDoS. This is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service. This issue has been patched in versions 4.1.124.Final and 4.2.4.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.101.Final to 4.2.4.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-codec-http2 is vulnerable. Upgrading to version 4.2.4.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.101.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.1.124.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.1.124.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47535",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.115.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2024-47535\nSeverity: MEDIUM\nFixed Version: 4.1.115.Final\nLink: [CVE-2024-47535](https://avd.aquasec.com/nvd/cve-2024-47535)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.115.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.115.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-25193",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-25193\nSeverity: MEDIUM\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-25193](https://avd.aquasec.com/nvd/cve-2025-25193)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability in versions up to and including 4.1.118.Final. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crash. A similar issue was previously reported as CVE-2024-47535. This issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit. Commit d1fbda62d3a47835d3fb35db8bd42ecc205a5386 contains an updated fix.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-24970",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-handler",
    "installed_version": "4.1.101.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-handler\nInstalled Version: 4.1.101.Final\nVulnerability CVE-2025-24970\nSeverity: HIGH\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-24970](https://avd.aquasec.com/nvd/cve-2025-24970)",
    "short_description": "io.netty:netty-handler: SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability starting in version 4.1.91.Final and prior to version 4.1.118.Final. When a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash. Version 4.1.118.Final contains a patch. As workaround its possible to either disable the usage of the native SSLEngine or change the code manually.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.101.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.101.Final of io.netty:netty-handler is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-handler",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-48924",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "6.5",
    "level": "warning",
    "package_name": "org.apache.commons:commons-lang3",
    "installed_version": "3.12.0",
    "fixed_version": "3.18.0",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: org.apache.commons:commons-lang3\nInstalled Version: 3.12.0\nVulnerability CVE-2025-48924\nSeverity: MEDIUM\nFixed Version: 3.18.0\nLink: [CVE-2025-48924](https://avd.aquasec.com/nvd/cve-2025-48924)",
    "short_description": "commons-lang/commons-lang: org.apache.commons/commons-lang3: Uncontrolled Recursion vulnerability in Apache Commons Lang",
    "full_description": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with\u00a0commons-lang:commons-lang\u00a02.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before\u00a03.18.0.\n\nThe methods ClassUtils.getClass(...) can throw\u00a0StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a \nStackOverflowError could\u00a0cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-lang3 from 3.12.0 to 3.18.0 to fix security vulnerability",
      "fixed_code": "implementation(\"org.apache.commons:commons-lang3:3.18.0\")",
      "explanation": "The currently installed version 3.12.0 of org.apache.commons:commons-lang3 is vulnerable. Upgrading to version 3.18.0 will resolve the issue.",
      "package": "org.apache.commons:commons-lang3",
      "from_version": "3.12.0",
      "to_version": "3.18.0",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-48924",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-48924",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12798",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12798\nSeverity: MEDIUM\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12798](https://avd.aquasec.com/nvd/cve-2024-12798)",
    "short_description": "logback-core: arbitrary code execution via JaninoEventEvaluator",
    "full_description": "ACE vulnerability in JaninoEventEvaluator  by QOS.CH logback-core\n      upto including version 0.1 to 1.3.14 and\u00a01.4.0 to 1.5.12 in Java applications allows\n      attacker to execute arbitrary code by compromising an existing\n      logback configuration file or by injecting an environment variable\n      before program execution.\n\n\n\n\n\nMalicious logback configuration files can allow the attacker to execute \narbitrary code using the JaninoEventEvaluator extension.\n\n\n\nA successful attack requires the user to have write access to a \nconfiguration file. Alternatively, the attacker could inject a malicious \nenvironment variable pointing to a malicious configuration file. In both \ncases, the attack requires existing privilege.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12798",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-12801",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "ch.qos.logback:logback-core",
    "installed_version": "1.4.14",
    "fixed_version": "1.5.13, 1.3.15",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: ch.qos.logback:logback-core\nInstalled Version: 1.4.14\nVulnerability CVE-2024-12801\nSeverity: LOW\nFixed Version: 1.5.13, 1.3.15\nLink: [CVE-2024-12801](https://avd.aquasec.com/nvd/cve-2024-12801)",
    "short_description": "logback-core: SaxEventRecorder vulnerable to Server-Side Request Forgery (SSRF) attacks",
    "full_description": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 0.1 to 1.3.14 and 1.4.0 to 1.5.12\u00a0 on the Java platform, allows an attacker to \nforge requests by compromising logback configuration files in XML.\n\n\n\nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13 to fix security vulnerability",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "The currently installed version 1.4.14 of ch.qos.logback:logback-core is vulnerable. Upgrading to version 1.5.13 will resolve the issue.",
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 1.3.15 if on a different release branch",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "For projects on a different release branch, upgrade to 1.3.15 which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-12801",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58057",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-codec",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.125.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-58057\nSeverity: MEDIUM\nFixed Version: 4.1.125.Final\nLink: [CVE-2025-58057](https://avd.aquasec.com/nvd/cve-2025-58057)",
    "short_description": "netty-codec: netty-codec-compression: Netty's BrotliDecoder is vulnerable to DoS via zip bomb style attack",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In netty-codec-compression versions 4.1.124.Final and below, and netty-codec versions 4.2.4.Final and below, when supplied with specially crafted input, BrotliDecoder and certain other decompression decoders will allocate a large number of reachable byte buffers, which can lead to denial of service. BrotliDecoder.decompress has no limit in how often it calls pull, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is fixed in versions 4.1.125.Final of netty-codec and 4.2.5.Final of netty-codec-compression.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.106.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58057",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-29025",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.3",
    "level": "warning",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.108.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2024-29025\nSeverity: MEDIUM\nFixed Version: 4.1.108.Final\nLink: [CVE-2024-29025](https://avd.aquasec.com/nvd/cve-2024-29025)",
    "short_description": "netty-codec-http: Allocation of Resources Without Limits or Throttling",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.108.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.108.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-29025",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-58056",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "LOW",
    "security_severity": "2.0",
    "level": "note",
    "package_name": "io.netty:netty-codec-http",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-58056\nSeverity: LOW\nFixed Version: 4.1.125.Final, 4.2.5.Final\nLink: [CVE-2025-58056](https://avd.aquasec.com/nvd/cve-2025-58056)",
    "short_description": "netty-codec-http: Netty is vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "full_description": "Netty is an asynchronous event-driven network application framework for development of maintainable high performance protocol servers and clients. In versions 4.1.124.Final, and 4.2.0.Alpha3 through 4.2.4.Final, Netty incorrectly accepts standalone newline characters (LF) as a chunk-size line terminator, regardless of a preceding carriage return (CR), instead of requiring CRLF per HTTP/1.1 standards. When combined with reverse proxies that parse LF differently (treating it as part of the chunk extension), attackers can craft requests that the proxy sees as one request but Netty processes as two, enabling request smuggling attacks. This is fixed in versions 4.1.125.Final and 4.2.5.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.125.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http is vulnerable. Upgrading to version 4.1.125.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.125.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.2.5.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.2.5.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-58056",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "LOW"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-55163",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-codec-http2",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-codec-http2\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-55163\nSeverity: HIGH\nFixed Version: 4.2.4.Final, 4.1.124.Final\nLink: [CVE-2025-55163](https://avd.aquasec.com/nvd/cve-2025-55163)",
    "short_description": "netty: netty-codec-http2: Netty MadeYouReset HTTP/2 DDoS Vulnerability",
    "full_description": "Netty is an asynchronous, event-driven network application framework. Prior to versions 4.1.124.Final and 4.2.4.Final, Netty is vulnerable to MadeYouReset DDoS. This is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service. This issue has been patched in versions 4.1.124.Final and 4.2.4.Final.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.106.Final to 4.2.4.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-codec-http2 is vulnerable. Upgrading to version 4.2.4.Final will resolve the issue.",
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.106.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "maven",
      "alternatives": [
        {
          "description": "Upgrade to 4.1.124.Final if on a different release branch",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "For projects on a different release branch, upgrade to 4.1.124.Final which also includes the security fix."
        }
      ]
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-55163",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2024-47535",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.115.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2024-47535\nSeverity: MEDIUM\nFixed Version: 4.1.115.Final\nLink: [CVE-2024-47535](https://avd.aquasec.com/nvd/cve-2024-47535)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crashes. This vulnerability is fixed in 4.1.115.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.115.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.115.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2024-47535",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-25193",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "MEDIUM",
    "security_severity": "5.5",
    "level": "warning",
    "package_name": "io.netty:netty-common",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-common\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-25193\nSeverity: MEDIUM\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-25193](https://avd.aquasec.com/nvd/cve-2025-25193)",
    "short_description": "netty: Denial of Service attack on windows app using Netty",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability in versions up to and including 4.1.118.Final. An unsafe reading of environment file could potentially cause a denial of service in Netty. When loaded on an Windows application, Netty attempts to load a file that does not exist. If an attacker creates such a large file, the Netty application crash. A similar issue was previously reported as CVE-2024-47535. This issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit. Commit d1fbda62d3a47835d3fb35db8bd42ecc205a5386 contains an updated fix.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-common is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-25193",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "MEDIUM"
    ]
  },
  {
    "tool": "trivy",
    "id": "CVE-2025-24970",
    "rule_name": "LanguageSpecificPackageVulnerability",
    "severity": "HIGH",
    "security_severity": "7.5",
    "level": "error",
    "package_name": "io.netty:netty-handler",
    "installed_version": "4.1.106.Final",
    "fixed_version": "4.1.118.Final",
    "package_ecosystem": "maven",
    "file_path": "app/app.jar",
    "path": "app/app.jar",
    "artifact": "app/app.jar",
    "start": {
      "line": 1
    },
    "message": "Package: io.netty:netty-handler\nInstalled Version: 4.1.106.Final\nVulnerability CVE-2025-24970\nSeverity: HIGH\nFixed Version: 4.1.118.Final\nLink: [CVE-2025-24970](https://avd.aquasec.com/nvd/cve-2025-24970)",
    "short_description": "io.netty:netty-handler: SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "full_description": "Netty, an asynchronous, event-driven network application framework, has a vulnerability starting in version 4.1.91.Final and prior to version 4.1.118.Final. When a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash. Version 4.1.118.Final contains a patch. As workaround its possible to either disable the usage of the native SSLEngine or change the code manually.",
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.106.Final to 4.1.118.Final to fix security vulnerability",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "The currently installed version 4.1.106.Final of io.netty:netty-handler is vulnerable. Upgrading to version 4.1.118.Final will resolve the issue.",
      "package": "io.netty:netty-handler",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "maven",
      "alternatives": []
    },
    "help_uri": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "cve_link": "https://avd.aquasec.com/nvd/cve-2025-24970",
    "tool_name": "Trivy",
    "tool_version": "0.65.0",
    "security_category": "dependency_security",
    "category_confidence": 1.0,
    "fix_complexity": "low",
    "tags": [
      "vulnerability",
      "security",
      "HIGH"
    ]
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/android-e2e-tests.yml",
    "path": ".github/workflows/android-e2e-tests.yml",
    "start": {
      "line": 166
    },
    "end": {
      "line": 167
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/android-e2e-tests.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 166,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "            echo \"available=false\" >> $GITHUB_OUTPUT",
        "          fi",
        "",
        "  # Main Android E2E testing job",
        "  run-android-tests:",
        "    runs-on: ubuntu-latest",
        "    needs: [setup-config, validate-android-images]",
        "    if: needs.validate-android-images.outputs.webauthn-server-ready == 'true' && needs.validate-android-images.outputs.test-credentials-ready == 'true'",
        "    outputs:",
        "      tests-passed: ${{ steps.android-test-execution.outputs.tests-passed }}"
      ],
      "after_lines": [
        "      contents: read",
        "      packages: write  # Required for publishing staging packages (includes read)",
        "    steps:",
        "      - name: Checkout code",
        "        uses: actions/checkout@v4",
        "",
        "      - name: Set up JDK",
        "        uses: actions/setup-java@v4",
        "        with:",
        "          java-version: ${{ inputs.java-version }}"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/docker-security-scan.yml",
    "path": ".github/workflows/docker-security-scan.yml",
    "start": {
      "line": 88
    },
    "end": {
      "line": 89
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/docker-security-scan.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 88,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "env:",
        "  DOCKER_REGISTRY: ${{ inputs.registry-url }}",
        "  WEBAUTHN_SERVER_IMAGE: ${{ inputs.webauthn-server-image }}",
        "  TEST_CREDENTIALS_IMAGE: ${{ inputs.test-credentials-image }}",
        "",
        "jobs:",
        "  # Single job: Comprehensive security scanning of registry images",
        "  scan-docker-images:",
        "    runs-on: ubuntu-latest",
        "    if: inputs.skip-scan != true"
      ],
      "after_lines": [
        "      contents: read          # Read repository code",
        "      security-events: write  # Upload SARIF results to GitHub Security",
        "      pull-requests: write    # Comment on PRs with scan results",
        "      issues: write          # Update issues with security findings",
        "    outputs:",
        "      scan-passed: ${{ steps.security-scan.outputs.scan-passed }}",
        "      critical-vulnerabilities: ${{ steps.security-scan.outputs.critical-vulnerabilities }}",
        "      scan-results: ${{ steps.security-scan.outputs.scan-results }}",
        "      sarif-uploaded: ${{ steps.upload-sarif.outcome == 'success' }}",
        "    steps:"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/e2e-tests.yml",
    "path": ".github/workflows/e2e-tests.yml",
    "start": {
      "line": 707
    },
    "end": {
      "line": 708
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/e2e-tests.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 707,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "    runs-on: ubuntu-latest",
        "    needs: [ setup-config, validate-images, analyze-e2e-requirements ]",
        "    if: |",
        "      needs.validate-images.outputs.webauthn-server-ready == 'true' &&",
        "      needs.validate-images.outputs.test-credentials-ready == 'true' &&",
        "      (",
        "        needs.analyze-e2e-requirements.outputs.run-dast-scan == 'true' ||",
        "        inputs.force-full-pipeline == 'true' ||",
        "        inputs.force-docker-build == 'true'",
        "      )"
      ],
      "after_lines": [
        "      issues: write          # Update issues with security findings",
        "    steps:",
        "      - name: Checkout repository",
        "        uses: actions/checkout@v4",
        "        with:",
        "          fetch-depth: 0",
        "",
        "      - name: Log in to the Container registry",
        "        uses: docker/login-action@v3",
        "        with:"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/publish-android.yml",
    "path": ".github/workflows/publish-android.yml",
    "start": {
      "line": 28
    },
    "end": {
      "line": 29
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/publish-android.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 28,
      "vulnerability_column": null,
      "vulnerable_code": "#   - Minimal permissions: contents:read, packages:write",
      "before_lines": [
        "#",
        "# OUTPUTS:",
        "#   published: Whether package was successfully published (not skipped)",
        "#   skipped: Whether publishing was skipped (version exists)",
        "#   package-name: Full Maven coordinates (for backward compatibility)",
        "#   package-full-name: Complete Maven coordinates with version",
        "#",
        "# SECURITY:",
        "#   - GitHub Packages: Uses GITHUB_TOKEN (automatic)",
        "#   - Maven Central: Uses Central Portal with automatic release (vanniktech plugin)"
      ],
      "after_lines": [
        "#",
        "# GRADLE CONFIGURATION CACHE:",
        "#   - STAGING (GitHub Packages): Configuration cache ENABLED for all tasks",
        "#   - PRODUCTION (Maven Central): Configuration cache DISABLED for publish task only",
        "#   - Reason: vanniktech plugin incompatible with config cache for Maven Central",
        "#   - See: https://github.com/gradle/gradle/issues/22779",
        "",
        "name: Android Client Publishing",
        "",
        "on:"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/build-and-test.yml",
    "path": ".github/workflows/build-and-test.yml",
    "start": {
      "line": 1
    },
    "end": {
      "line": 1
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/build-and-test.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 1,
      "vulnerability_column": null,
      "vulnerable_code": "# Smart PR Testing Workflow with Conditional Execution and Callable Workflow Architecture",
      "before_lines": [],
      "after_lines": [
        "#",
        "# This workflow implements intelligent change detection and conditional execution",
        "# to optimize CI/CD performance for pull requests. It uses callable workflows",
        "# for better maintainability and reusability.",
        "#",
        "# WORKFLOW DECISION MATRIX:",
        "# | Change Type           | Unit Tests | Docker Build | E2E Tests |",
        "# |-----------------------|-----------:|-------------:|----------:|",
        "# | UI Force Full         |     \u2705 Run |      \u2705 Build |   \u2705 Run |",
        "# | UI Force Docker       |    \u274c Skip |      \u2705 Build |   \u2705 Run |"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/unit-tests.yml",
    "path": ".github/workflows/unit-tests.yml",
    "start": {
      "line": 68
    },
    "end": {
      "line": 69
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/unit-tests.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 68,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "        description: 'Overall test execution status (success, failure, skipped)'",
        "        value: ${{ jobs.run-unit-tests.result }}",
        "",
        "env:",
        "  JAVA_VERSION: ${{ inputs.java-version }}",
        "",
        "jobs:",
        "  run-unit-tests:",
        "    runs-on: ubuntu-latest",
        "    if: inputs.changes-detected == true || inputs.force-execution == true"
      ],
      "after_lines": [
        "      contents: read",
        "    outputs:",
        "      coverage-uploaded: ${{ steps.codecov-upload.outcome == 'success' }}",
        "    steps:",
        "      - name: Checkout code",
        "        uses: actions/checkout@v4",
        "",
        "      - name: Set up JDK",
        "        uses: actions/setup-java@v4",
        "        with:"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/client-publish.yml",
    "path": ".github/workflows/client-publish.yml",
    "start": {
      "line": 264
    },
    "end": {
      "line": 265
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/client-publish.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 264,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "          echo \"  Android package: ${ANDROID_GROUP_ID}:${ANDROID_ARTIFACT_BASE_ID}\"",
        "          echo \"  Android repository: ${ANDROID_REPO_URL}\"",
        "          echo \"  Android suffix: '${ANDROID_SUFFIX}'\"",
        "          echo \"  Android credentials: Hardcoded in publish-android.yml (github.actor + GITHUB_TOKEN for staging, Central Portal secrets for production)\"",
        "",
        "  # Job 3: TypeScript client generation and publishing (parallel)",
        "  publish-typescript:",
        "    uses: ./.github/workflows/publish-typescript.yml",
        "    needs: [ validate-inputs, setup-config ]",
        "    if: needs.validate-inputs.outputs.validated == 'true'"
      ],
      "after_lines": [
        "      contents: write   # Required for creating GitHub releases (production only)",
        "      packages: write    # Required for GitHub Packages publishing",
        "      id-token: write   # Required for npm provenance in production",
        "    with:",
        "      publish-type: ${{ inputs.publish-type }}",
        "      client-version: ${{ inputs.client-version }}",
        "      npm-scope: ${{ needs.setup-config.outputs.npm-scope }}",
        "      npm-package-name: ${{ needs.setup-config.outputs.npm-package-name }}",
        "      npm-registry-url: ${{ needs.setup-config.outputs.npm-registry-url }}",
        "      npm-credential-env: ${{ needs.setup-config.outputs.npm-credential-env }}"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/detect-changes.yml",
    "path": ".github/workflows/detect-changes.yml",
    "start": {
      "line": 1
    },
    "end": {
      "line": 1
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/detect-changes.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 1,
      "vulnerability_column": null,
      "vulnerable_code": "# Centralized Change Detection - Callable Workflow",
      "before_lines": [],
      "after_lines": [
        "#",
        "# Extracted from build-and-test.yml to eliminate duplication and provide",
        "# consistent change detection across all workflows using proven dorny/paths-filter patterns.",
        "#",
        "# USAGE:",
        "#   Uses dorny/paths-filter@v3 for reliable, maintained change detection",
        "#   Supports both PR context (against base branch) and push context (against previous commit)",
        "#",
        "# COMPONENT BOUNDARIES:",
        "#   - webauthn-server: webauthn-server/, webauthn-test-lib/ (shared dependency)"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/publish-typescript.yml",
    "path": ".github/workflows/publish-typescript.yml",
    "start": {
      "line": 28
    },
    "end": {
      "line": 29
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/publish-typescript.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 28,
      "vulnerability_column": null,
      "vulnerable_code": "#   - Minimal permissions: contents:read, packages:write, id-token:write",
      "before_lines": [
        "#",
        "# OUTPUTS:",
        "#   published: Whether package was successfully published (not skipped)",
        "#   skipped: Whether publishing was skipped (version exists)",
        "#   package-name: Full npm package name (for backward compatibility)",
        "#   package-full-name: Complete package name with version",
        "#",
        "# SECURITY:",
        "#   - GitHub Packages: Uses GITHUB_TOKEN (automatic)",
        "#   - npm production: Uses NPM_PUBLISH_TOKEN (secret)"
      ],
      "after_lines": [
        "",
        "name: TypeScript Client Publishing",
        "",
        "on:",
        "  workflow_call:",
        "    inputs:",
        "      publish-type:",
        "        description: 'Publishing type (staging/production)'",
        "        required: true",
        "        type: string"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "checkov",
    "id": "CKV2_GHA_1",
    "rule_name": "Ensure top-level permissions are not set to write-all",
    "message": "Ensure top-level permissions are not set to write-all",
    "severity": "HIGH",
    "level": "error",
    "file_path": ".github/workflows/web-e2e-tests.yml",
    "path": ".github/workflows/web-e2e-tests.yml",
    "start": {
      "line": 166
    },
    "end": {
      "line": 167
    },
    "short_description": "Ensure top-level permissions are not set to write-all",
    "full_description": "Ensure top-level permissions are not set to write-all",
    "help_text": "Ensure top-level permissions are not set to write-all\nResource: on(Android E2E Tests - Emulator)",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/.github/workflows/web-e2e-tests.yml",
      "language": "yaml",
      "file_extension": ".yml",
      "vulnerability_line": 166,
      "vulnerability_column": null,
      "vulnerable_code": "    permissions:",
      "before_lines": [
        "            echo \"available=false\" >> $GITHUB_OUTPUT",
        "          fi",
        "",
        "  # Main web E2E testing job",
        "  run-web-tests:",
        "    runs-on: ubuntu-latest",
        "    needs: [ setup-config, validate-web-images ]",
        "    if: needs.validate-web-images.outputs.webauthn-server-ready == 'true' && needs.validate-web-images.outputs.test-credentials-ready == 'true'",
        "    outputs:",
        "      tests-passed: ${{ steps.test-execution.outputs.tests-passed }}"
      ],
      "after_lines": [
        "      contents: read",
        "      packages: write",
        "    steps:",
        "      - name: Checkout code",
        "        uses: actions/checkout@v4",
        "",
        "      - name: Log in to the Container registry",
        "        uses: docker/login-action@v3",
        "        with:",
        "          registry: ${{ needs.setup-config.outputs.docker-registry }}"
      ],
      "function_name": null,
      "function_context": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.8,
      "description": "Replace write-all with granular permissions",
      "fixed_code": "permissions:\n  contents: read      # For checking out code\n  pull-requests: write # For commenting on PRs\n  issues: write       # For creating/updating issues\n  # Remove: permissions: write-all",
      "explanation": "Using write-all grants excessive permissions. Specify only the permissions each job needs.",
      "alternatives": []
    },
    "tool_name": "Checkov",
    "tool_version": "3.2.470",
    "security_category": "configuration_security",
    "category_confidence": 0.9,
    "config_type": "github_actions",
    "fix_complexity": "low"
  },
  {
    "tool": "semgrep",
    "id": "java.android.security.exported_activity.exported_activity",
    "file_path": "android-test-client/app/src/main/AndroidManifest.xml",
    "path": "android-test-client/app/src/main/AndroidManifest.xml",
    "start": {
      "line": 21,
      "col": 9,
      "offset": 866
    },
    "end": {
      "line": 26,
      "col": 69,
      "offset": 1110
    },
    "message": "The application exports an activity. Any application on the device can launch the exported activity which may compromise the integrity of your application or its data.  Ensure that any exported activities do not have privileged access to your application's control plane.",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/android-test-client/app/src/main/AndroidManifest.xml",
      "language": "xml",
      "file_extension": ".xml",
      "vulnerability_line": 21,
      "vulnerability_column": 9,
      "vulnerable_code": "        <activity",
      "before_lines": [
        "        android:dataExtractionRules=\"@xml/data_extraction_rules\"",
        "        android:fullBackupContent=\"@xml/backup_rules\"",
        "        android:icon=\"@mipmap/ic_launcher\"",
        "        android:label=\"@string/app_name\"",
        "        android:roundIcon=\"@mipmap/ic_launcher_round\"",
        "        android:supportsRtl=\"true\"",
        "        android:theme=\"@style/Theme.WebAuthnTestClient\"",
        "        android:usesCleartextTraffic=\"true\"",
        "        tools:targetApi=\"31\">",
        ""
      ],
      "after_lines": [
        "            android:name=\".MainActivity\"",
        "            android:exported=\"true\"",
        "            android:theme=\"@style/Theme.WebAuthnTestClient\">",
        "            <intent-filter>",
        "                <action android:name=\"android.intent.action.MAIN\" />",
        "                <category android:name=\"android.intent.category.LAUNCHER\" />",
        "            </intent-filter>",
        "        </activity>",
        "    </application>",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n        <activity",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Implement proper error handling without information disclosure",
          "fixed_code": "// TODO: Implement secure error handling\n        <activity",
          "explanation": "Replace error messages that could leak sensitive information with generic messages."
        },
        {
          "description": "Apply defensive programming security measures",
          "fixed_code": "// TODO: Implement defensive programming fix\n        <activity",
          "explanation": "Implement security fixes using defensive programming approach."
        }
      ]
    },
    "cwe": [
      "CWE-926: Improper Export of Android Application Components"
    ],
    "owasp": [
      "A5:2021 Security Misconfiguration"
    ],
    "confidence": "MEDIUM",
    "likelihood": "MEDIUM",
    "impact": "MEDIUM",
    "technology": [
      "Android"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/926.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
    "path": "android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
    "start": {
      "line": 212,
      "col": 9,
      "offset": 8507
    },
    "end": {
      "line": 230,
      "col": 10,
      "offset": 9458
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 212,
      "vulnerability_column": 9,
      "vulnerable_code": "        return mapOf(",
      "before_lines": [
        "            0xc8.toByte(), 0x7f, 0x09.toByte(), 0x99.toByte(), 0x8a.toByte(), 0xb0.toByte(), 0x03, 0x06,",
        "            0x47, 0x4f, 0x8a.toByte(), 0x3c, 0x58, 0x2e, 0x8c.toByte(), 0x35,",
        "            0x8e.toByte(), 0x7f, 0x6d, 0x90.toByte(), 0x4e, 0x9c.toByte(), 0x5a, 0xd7.toByte(),",
        "            0x9c.toByte(), 0xe7.toByte(), 0x8a.toByte(), 0x15, 0x4e, 0x6b, 0x79, 0xc1.toByte(),",
        "            // Flags (1 byte) - UP=1, UV=1",
        "            0x05,",
        "            // Counter (4 bytes)",
        "            0x00, 0x00, 0x00, 0x01",
        "        )",
        ""
      ],
      "after_lines": [
        "            \"id\" to Base64.encodeToString(",
        "                \"test-credential-id\".toByteArray(),",
        "                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING",
        "            ),",
        "            \"type\" to \"public-key\",",
        "            \"clientExtensionResults\" to mapOf<String, Any>(),",
        "            \"rawId\" to Base64.encodeToString(",
        "                \"test-credential-id\".toByteArray(),",
        "                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING",
        "            ),"
      ],
      "function_name": "createMockCredential",
      "function_context": "    private fun createMockCredential(): Any {\n        // Using a minimal valid CBOR attestation object from WebAuthn test vectors\n        val attestationObjectBytes = byteArrayOf(\n            // CBOR map with 3 entries: fmt, attStmt, authData\n            0xa3.toByte(),\n            // \"fmt\" key (3 bytes)\n            0x63, 0x66, 0x6d, 0x74,\n            // \"none\" value (4 bytes) \n            0x64, 0x6e, 0x6f, 0x6e, 0x65,\n            // \"attStmt\" key (7 bytes)\n            0x67, 0x61, 0x74, 0x74, 0x53, 0x74, 0x6d, 0x74,\n            // empty map value (1 byte)\n            0xa0.toByte(),\n            // \"authData\" key (8 bytes)\n            0x68, 0x61, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61,\n            // authData value (37 bytes minimum)\n            0x58, 0x25, // byte string of length 37\n            // RP ID hash (32 bytes) - SHA256 of \"localhost\"\n            0xc8.toByte(), 0x7f, 0x09.toByte(), 0x99.toByte(), 0x8a.toByte(), 0xb0.toByte(), 0x03, 0x06,\n            0x47, 0x4f, 0x8a.toByte(), 0x3c, 0x58, 0x2e, 0x8c.toByte(), 0x35,\n            0x8e.toByte(), 0x7f, 0x6d, 0x90.toByte(), 0x4e, 0x9c.toByte(), 0x5a, 0xd7.toByte(),\n            0x9c.toByte(), 0xe7.toByte(), 0x8a.toByte(), 0x15, 0x4e, 0x6b, 0x79, 0xc1.toByte(),\n            // Flags (1 byte) - UP=1, UV=1\n            0x05,\n            // Counter (4 bytes)\n            0x00, 0x00, 0x00, 0x01\n        )\n        \n        return mapOf(\n            \"id\" to Base64.encodeToString(\n                \"test-credential-id\".toByteArray(),\n                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n            ),\n            \"type\" to \"public-key\",\n            \"clientExtensionResults\" to mapOf<String, Any>(),\n            \"rawId\" to Base64.encodeToString(\n                \"test-credential-id\".toByteArray(),\n                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n            ),\n            \"response\" to mapOf(\n                \"attestationObject\" to Base64.encodeToString(attestationObjectBytes, Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING),\n                \"clientDataJSON\" to Base64.encodeToString(\n                    \"\"\"{\"type\":\"webauthn.create\",\"challenge\":\"Y2hhbGxlbmdl\",\"origin\":\"https://localhost\"}\"\"\".toByteArray(),\n                    Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n                )\n            )\n        )\n    }",
      "function_start_line": 184,
      "function_end_line": 231,
      "class_name": "WebAuthnViewModel",
      "class_context": "class WebAuthnViewModel : ViewModel() {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return mapOf(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return mapOf(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return mapOf(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return mapOf(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return mapOf(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
    "path": "android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
    "start": {
      "line": 257,
      "col": 9,
      "offset": 11199
    },
    "end": {
      "line": 282,
      "col": 10,
      "offset": 12389
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/android-test-client/app/src/main/java/com/vmenon/mpo/authn/testclient/WebAuthnViewModel.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 257,
      "vulnerability_column": 9,
      "vulnerable_code": "        return mapOf(",
      "before_lines": [
        "        // Simple signature - in reality this would be computed, but for testing we use a fixed value",
        "        val signatureBytes = byteArrayOf(",
        "            0x30, 0x44, 0x02, 0x20, 0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(),",
        "            0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(), 0x12, 0x34, 0x56, 0x78,",
        "            0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(), 0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(),",
        "            0x02, 0x20, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10,",
        "            0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(),",
        "            0x76, 0x54, 0x32, 0x10, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10",
        "        )",
        ""
      ],
      "after_lines": [
        "            \"id\" to Base64.encodeToString(",
        "                \"test-credential-id\".toByteArray(),",
        "                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING",
        "            ),",
        "            \"type\" to \"public-key\",",
        "            \"clientExtensionResults\" to mapOf<String, Any>(),",
        "            \"rawId\" to Base64.encodeToString(",
        "                \"test-credential-id\".toByteArray(),",
        "                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING",
        "            ),"
      ],
      "function_name": "createMockAssertion",
      "function_context": "    private fun createMockAssertion(): Any {\n        // Valid authenticatorData for assertion (37 bytes minimum)\n        val authenticatorDataBytes = byteArrayOf(\n            // RP ID hash (32 bytes) - SHA256 of \"localhost\"\n            0xc8.toByte(), 0x7f, 0x09.toByte(), 0x99.toByte(), 0x8a.toByte(), 0xb0.toByte(), 0x03, 0x06,\n            0x47, 0x4f, 0x8a.toByte(), 0x3c, 0x58, 0x2e, 0x8c.toByte(), 0x35,\n            0x8e.toByte(), 0x7f, 0x6d, 0x90.toByte(), 0x4e, 0x9c.toByte(), 0x5a, 0xd7.toByte(),\n            0x9c.toByte(), 0xe7.toByte(), 0x8a.toByte(), 0x15, 0x4e, 0x6b, 0x79, 0xc1.toByte(),\n            // Flags (1 byte) - UP=1, UV=1\n            0x05,\n            // Counter (4 bytes) - incremented from registration\n            0x00, 0x00, 0x00, 0x02\n        )\n        \n        // Simple signature - in reality this would be computed, but for testing we use a fixed value\n        val signatureBytes = byteArrayOf(\n            0x30, 0x44, 0x02, 0x20, 0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(),\n            0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(), 0x12, 0x34, 0x56, 0x78,\n            0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(), 0x12, 0x34, 0x56, 0x78, 0x9a.toByte(), 0xbc.toByte(), 0xde.toByte(), 0xf0.toByte(),\n            0x02, 0x20, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10,\n            0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(),\n            0x76, 0x54, 0x32, 0x10, 0xfe.toByte(), 0xdc.toByte(), 0xba.toByte(), 0x98.toByte(), 0x76, 0x54, 0x32, 0x10\n        )\n        \n        return mapOf(\n            \"id\" to Base64.encodeToString(\n                \"test-credential-id\".toByteArray(),\n                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n            ),\n            \"type\" to \"public-key\",\n            \"clientExtensionResults\" to mapOf<String, Any>(),\n            \"rawId\" to Base64.encodeToString(\n                \"test-credential-id\".toByteArray(),\n                Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n            ),\n            \"response\" to mapOf(\n                \"authenticatorData\" to Base64.encodeToString(\n                    authenticatorDataBytes,\n                    Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n                ),\n                \"clientDataJSON\" to Base64.encodeToString(\n                    \"\"\"{\"type\":\"webauthn.get\",\"challenge\":\"Y2hhbGxlbmdl\",\"origin\":\"https://localhost\"}\"\"\".toByteArray(),\n                    Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n                ),\n                \"signature\" to Base64.encodeToString(\n                    signatureBytes,\n                    Base64.URL_SAFE or Base64.NO_WRAP or Base64.NO_PADDING\n                )\n            )\n        )\n    }",
      "function_start_line": 233,
      "function_end_line": 283,
      "class_name": "WebAuthnViewModel",
      "class_context": "class WebAuthnViewModel : ViewModel() {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return mapOf(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return mapOf(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return mapOf(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return mapOf(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return mapOf(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
    "file_path": "scripts/ci/unified-security-comment.cjs",
    "path": "scripts/ci/unified-security-comment.cjs",
    "start": {
      "line": 172,
      "col": 29,
      "offset": 5393
    },
    "end": {
      "line": 172,
      "col": 67,
      "offset": 5431
    },
    "message": "Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/scripts/ci/unified-security-comment.cjs",
      "language": "javascript",
      "file_extension": ".cjs",
      "vulnerability_line": 172,
      "vulnerability_column": 29,
      "vulnerable_code": "              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);",
      "before_lines": [
        "            console.log(`\ud83d\udd0d Parsing ${toolName} JSON file: ${foundFile}`);",
        "            try {",
        "              const jsonContent = JSON.parse(fs.readFileSync(foundFile, 'utf8'));",
        "              if (toolName === 'osvScanner') {",
        "                this.parseOsvScannerJson(jsonContent, toolName);",
        "              }",
        "              this.summary.toolStatus[toolName] = '\u2705 Completed';",
        "              found = true;",
        "              break;",
        "            } catch (parseError) {"
      ],
      "after_lines": [
        "              this.summary.toolStatus[toolName] = '\u274c Error';",
        "            }",
        "          }",
        "        } catch (searchError) {",
        "          // Continue with next pattern",
        "        }",
        "      }",
        "",
        "      if (!found) {",
        "        console.log(`\u26a0\ufe0f No JSON file found for ${toolName} (searched patterns: ${searchPatterns.join(', ')})`);"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "UnifiedSecurityReporter",
      "class_context": "class UnifiedSecurityReporter {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Sanitize output to prevent XSS attacks",
          "fixed_code": "escapeHtml(              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);)",
          "explanation": "Use proper encoding and sanitization for web output."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n              console.error(`\u274c Failed to parse ${toolName} JSON:`, parseError.message);",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": [
      "CWE-134: Use of Externally-Controlled Format String"
    ],
    "owasp": [
      "A01:2021 - Broken Access Control"
    ],
    "confidence": "LOW",
    "likelihood": "MEDIUM",
    "impact": "LOW",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/134.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
    "file_path": "scripts/ci/unified-security-comment.cjs",
    "path": "scripts/ci/unified-security-comment.cjs",
    "start": {
      "line": 307,
      "col": 27,
      "offset": 11085
    },
    "end": {
      "line": 307,
      "col": 69,
      "offset": 11127
    },
    "message": "Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/scripts/ci/unified-security-comment.cjs",
      "language": "javascript",
      "file_extension": ".cjs",
      "vulnerability_line": 307,
      "vulnerability_column": 27,
      "vulnerable_code": "              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));",
      "before_lines": [
        "        }",
        "",
        "        if (!found) {",
        "          console.log(`\u26a0\ufe0f No SARIF file found for ${toolName} (searched patterns: ${searchPatterns.join(', ')})`);",
        "",
        "          // Enhanced debugging: show what files exist for this tool pattern",
        "          try {",
        "            const debugCmd = `find security-artifacts -type f -name \"*${toolName.toLowerCase()}*\" 2>/dev/null || find security-artifacts -type f -name \"*${searchPatterns[0].split('.')[0]}*\" 2>/dev/null`;",
        "            const debugFiles = execSync(debugCmd, { encoding: 'utf8', stdio: 'pipe' }).trim();",
        "            if (debugFiles) {"
      ],
      "after_lines": [
        "            }",
        "          } catch (e) {",
        "            // Debug command failed, continue",
        "          }",
        "",
        "          this.summary.toolStatus[toolName] = '\u26a0\ufe0f Missing';",
        "        }",
        "      }",
        "    }",
        "  }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "UnifiedSecurityReporter",
      "class_context": "class UnifiedSecurityReporter {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Sanitize output to prevent XSS attacks",
          "fixed_code": "escapeHtml(              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));)",
          "explanation": "Use proper encoding and sanitization for web output."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n              console.log(`\ud83d\udd0d Found related files for ${toolName}:`, debugFiles.split('\\n').join(', '));",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": [
      "CWE-134: Use of Externally-Controlled Format String"
    ],
    "owasp": [
      "A01:2021 - Broken Access Control"
    ],
    "confidence": "LOW",
    "likelihood": "MEDIUM",
    "impact": "LOW",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/134.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
    "file_path": "scripts/ci/unified-security-comment.cjs",
    "path": "scripts/ci/unified-security-comment.cjs",
    "start": {
      "line": 465,
      "col": 23,
      "offset": 16840
    },
    "end": {
      "line": 465,
      "col": 69,
      "offset": 16886
    },
    "message": "Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/scripts/ci/unified-security-comment.cjs",
      "language": "javascript",
      "file_extension": ".cjs",
      "vulnerability_line": 465,
      "vulnerability_column": 23,
      "vulnerable_code": "        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);",
      "before_lines": [
        "",
        "                allFindings.push(finding);",
        "              }",
        "            }",
        "          }",
        "        }",
        "",
        "        console.log(`  \ud83d\udcca ${reportFile}: processed, ${allFindings.length} total findings so far`);",
        "",
        "      } catch (error) {"
      ],
      "after_lines": [
        "      }",
        "    }",
        "",
        "    // Group findings by severity for summary",
        "    const severityCounts = {",
        "      high: allFindings.filter(f => f.severity === 'high').length,",
        "      medium: allFindings.filter(f => f.severity === 'medium').length,",
        "      low: allFindings.filter(f => f.severity === 'low').length,",
        "      informational: allFindings.filter(f => f.severity === 'informational').length",
        "    };"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "UnifiedSecurityReporter",
      "class_context": "class UnifiedSecurityReporter {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Sanitize output to prevent XSS attacks",
          "fixed_code": "escapeHtml(        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);)",
          "explanation": "Use proper encoding and sanitization for web output."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        console.error(`\u274c Failed to parse ZAP report ${reportFile}:`, error.message);",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": [
      "CWE-134: Use of Externally-Controlled Format String"
    ],
    "owasp": [
      "A01:2021 - Broken Access Control"
    ],
    "confidence": "LOW",
    "likelihood": "MEDIUM",
    "impact": "LOW",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/134.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.detect-child-process.detect-child-process",
    "file_path": "scripts/ci/unified-security-comment.cjs",
    "path": "scripts/ci/unified-security-comment.cjs",
    "start": {
      "line": 792,
      "col": 18,
      "offset": 31765
    },
    "end": {
      "line": 792,
      "col": 159,
      "offset": 31906
    },
    "message": "Detected calls to child_process from a function argument `comment`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/scripts/ci/unified-security-comment.cjs",
      "language": "javascript",
      "file_extension": ".cjs",
      "vulnerability_line": 792,
      "vulnerability_column": 18,
      "vulnerable_code": "        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
      "before_lines": [
        "      let existingCommentId;",
        "      try {",
        "        existingCommentId = execSync(existingCommentCmd, { encoding: 'utf8', stdio: 'pipe' }).trim();",
        "      } catch (error) {",
        "        // No existing comment found",
        "      }",
        "",
        "      if (existingCommentId) {",
        "        // Update existing comment",
        "        console.log(`\ud83d\udd04 Updating existing security comment ID: ${existingCommentId}`);"
      ],
      "after_lines": [
        "      } else {",
        "        // Create new comment",
        "        console.log('\ud83c\udd95 Creating new unified security comment');",
        "        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
        "      }",
        "",
        "      console.log('\u2705 Unified security comment successfully posted!');",
        "",
        "    } catch (error) {",
        "      console.error('\u274c Failed to post unified comment:', error.message);"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "UnifiedSecurityReporter",
      "class_context": "class UnifiedSecurityReporter {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": [
      "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
    ],
    "owasp": [
      "A01:2017 - Injection",
      "A03:2021 - Injection"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "HIGH",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html#do-not-use-dangerous-functions"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.detect-child-process.detect-child-process",
    "file_path": "scripts/ci/unified-security-comment.cjs",
    "path": "scripts/ci/unified-security-comment.cjs",
    "start": {
      "line": 796,
      "col": 18,
      "offset": 32060
    },
    "end": {
      "line": 796,
      "col": 111,
      "offset": 32153
    },
    "message": "Detected calls to child_process from a function argument `comment`. This could lead to a command injection if the input is user controllable. Try to avoid calls to child_process, and if it is needed ensure user input is correctly sanitized or sandboxed. ",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/scripts/ci/unified-security-comment.cjs",
      "language": "javascript",
      "file_extension": ".cjs",
      "vulnerability_line": 796,
      "vulnerability_column": 18,
      "vulnerable_code": "        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
      "before_lines": [
        "        // No existing comment found",
        "      }",
        "",
        "      if (existingCommentId) {",
        "        // Update existing comment",
        "        console.log(`\ud83d\udd04 Updating existing security comment ID: ${existingCommentId}`);",
        "        execSync(`gh api repos/${this.github.repository}/issues/comments/${existingCommentId} -X PATCH -f body='${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
        "      } else {",
        "        // Create new comment",
        "        console.log('\ud83c\udd95 Creating new unified security comment');"
      ],
      "after_lines": [
        "      }",
        "",
        "      console.log('\u2705 Unified security comment successfully posted!');",
        "",
        "    } catch (error) {",
        "      console.error('\u274c Failed to post unified comment:', error.message);",
        "      throw error;",
        "    }",
        "  }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "UnifiedSecurityReporter",
      "class_context": "class UnifiedSecurityReporter {",
      "class_start_line": 22,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        execSync(`gh pr comment ${this.github.prNumber} --body '${comment.replace(/'/g, \"'\\\\''\")}' > /dev/null`, { stdio: 'pipe' });",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": [
      "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
    ],
    "owasp": [
      "A01:2017 - Injection",
      "A03:2021 - Injection"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "HIGH",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cheatsheetseries.owasp.org/cheatsheets/Nodejs_Security_Cheat_Sheet.html#do-not-use-dangerous-functions"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "html.security.audit.missing-integrity.missing-integrity",
    "file_path": "web-test-client/public/index.html",
    "path": "web-test-client/public/index.html",
    "start": {
      "line": 165,
      "col": 1,
      "offset": 5111
    },
    "end": {
      "line": 165,
      "col": 102,
      "offset": 5212
    },
    "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/web-test-client/public/index.html",
      "language": "html",
      "file_extension": ".html",
      "vulnerability_line": 165,
      "vulnerability_column": 1,
      "vulnerable_code": "<script src=\"https://unpkg.com/@simplewebauthn/browser@10.0.0/dist/bundle/index.umd.min.js\"></script>",
      "before_lines": [
        "        <div class=\"form-group\">",
        "            <label for=\"authUsername\">Username (optional for usernameless flow):</label>",
        "            <input type=\"text\" id=\"authUsername\"",
        "                   placeholder=\"Enter username or leave blank for usernameless authentication\">",
        "        </div>",
        "        <button onclick=\"authenticatePasskey()\">\ud83d\udee1\ufe0f Authenticate with Passkey</button>",
        "        <div id=\"authenticationStatus\" class=\"status\"></div>",
        "    </div>",
        "</div>",
        ""
      ],
      "after_lines": [
        "<script src=\"umd/webauthn-client.umd.js\"></script>",
        "</body>",
        "</html>"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n<script src=\"https://unpkg.com/@simplewebauthn/browser@10.0.0/dist/bundle/index.umd.min.js\"></script>",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Properly encode outputs to prevent injection attacks",
          "fixed_code": "// TODO: Implement output encoding and sanitization\n<script src=\"https://unpkg.com/@simplewebauthn/browser@10.0.0/dist/bundle/index.umd.min.js\"></script>",
          "explanation": "Ensure all data sent to output contexts is properly encoded or escaped."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n<script src=\"https://unpkg.com/@simplewebauthn/browser@10.0.0/dist/bundle/index.umd.min.js\"></script>",
          "explanation": "Implement security fixes using framework security approach."
        }
      ]
    },
    "cwe": [
      "CWE-353: Missing Support for Integrity Check"
    ],
    "owasp": [
      "A08:2021 - Software and Data Integrity Failures"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "LOW",
    "technology": [
      "html"
    ],
    "references": [
      "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
    "file_path": "web-test-client/scripts/cleanup-port.js",
    "path": "web-test-client/scripts/cleanup-port.js",
    "start": {
      "line": 33,
      "col": 24,
      "offset": 992
    },
    "end": {
      "line": 33,
      "col": 62,
      "offset": 1030
    },
    "message": "Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/web-test-client/scripts/cleanup-port.js",
      "language": "javascript",
      "file_extension": ".js",
      "vulnerability_line": 33,
      "vulnerability_column": 24,
      "vulnerable_code": "          console.warn(`\u26a0\ufe0f Could not kill process ${pid}:`, error.message);",
      "before_lines": [
        "",
        "    if (pids.trim()) {",
        "      const pidList = pids.trim().split('\\n').filter(pid => pid);",
        "      console.log(`\ud83d\udd0d Found ${pidList.length} process(es) on port ${port}: ${pidList.join(', ')}`);",
        "",
        "      for (const pid of pidList) {",
        "        try {",
        "          process.kill(parseInt(pid), 'SIGTERM');",
        "          console.log(`\ud83d\udce1 Sent SIGTERM to process ${pid}`);",
        "        } catch (error) {"
      ],
      "after_lines": [
        "        }",
        "      }",
        "",
        "      // Wait a moment for graceful shutdown",
        "      await new Promise(resolve => setTimeout(resolve, 1000));",
        "",
        "      // Force kill any remaining processes",
        "      for (const pid of pidList) {",
        "        try {",
        "          process.kill(parseInt(pid), 'SIGKILL');"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Validate and sanitize all user inputs before processing",
      "fixed_code": "// TODO: Implement input validation and sanitization\n          console.warn(`\u26a0\ufe0f Could not kill process ${pid}:`, error.message);",
      "explanation": "Add comprehensive input validation to prevent malicious data from being processed.",
      "alternatives": [
        {
          "description": "Sanitize output to prevent XSS attacks",
          "fixed_code": "escapeHtml(          console.warn(`\u26a0\ufe0f Could not kill process ${pid}:`, error.message);)",
          "explanation": "Use proper encoding and sanitization for web output."
        },
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n          console.warn(`\u26a0\ufe0f Could not kill process ${pid}:`, error.message);",
          "explanation": "Implement security fixes using framework security approach."
        }
      ]
    },
    "cwe": [
      "CWE-134: Use of Externally-Controlled Format String"
    ],
    "owasp": [
      "A01:2021 - Broken Access Control"
    ],
    "confidence": "LOW",
    "likelihood": "MEDIUM",
    "impact": "LOW",
    "technology": [
      "javascript"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/134.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-server/build.gradle.kts",
    "path": "webauthn-server/build.gradle.kts",
    "start": {
      "line": 180,
      "col": 9,
      "offset": 6921
    },
    "end": {
      "line": 180,
      "col": 76,
      "offset": 6988
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/build.gradle.kts",
      "language": "kotlin",
      "file_extension": ".kts",
      "vulnerability_line": 180,
      "vulnerability_column": 9,
      "vulnerable_code": "        attributes[\"Main-Class\"] = \"com.vmenon.mpo.api.authn.ApplicationKt\"",
      "before_lines": [
        "    testImplementation(\"com.google.guava:guava\")",
        "}",
        "",
        "application {",
        "    mainClass.set(\"com.vmenon.mpo.api.authn.ApplicationKt\")",
        "}",
        "",
        "tasks.shadowJar {",
        "    archiveClassifier.set(\"all\")",
        "    manifest {"
      ],
      "after_lines": [
        "    }",
        "}",
        "",
        "tasks.build {",
        "    dependsOn(tasks.shadowJar)",
        "}",
        "",
        "tasks.withType<Test> {",
        "    useJUnitPlatform()",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        attributes[\"Main-Class\"] = \"com.vmenon.mpo.api.authn.ApplicationKt\"",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        attributes[\"Main-Class\"] = \"com.vmenon.mpo.api.authn.ApplicationKt\"",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        attributes[\"Main-Class\"] = \"com.vmenon.mpo.api.authn.ApplicationKt\"",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
    "start": {
      "line": 60,
      "col": 29,
      "offset": 2719
    },
    "end": {
      "line": 61,
      "col": 82,
      "offset": 2819
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 60,
      "vulnerability_column": 29,
      "vulnerable_code": "                            Resource.builder()",
      "before_lines": [
        "            // Control global OpenTelemetry registration via system property",
        "            val isGlobalOpenTelemetryEnabled = System.getProperty(\"otel.global.disabled\") != \"true\"",
        "",
        "            if (jaegerEndpoint.isPresent) {",
        "                val endpoint = jaegerEndpoint.get()",
        "                logger.info(\"Using Jaeger endpoint: $endpoint\")",
        "                val serviceName: String by inject(named(\"openTelemetryServiceName\"))",
        "                val resource =",
        "                    Resource.getDefault()",
        "                        .merge("
      ],
      "after_lines": [
        "                                .put(ServiceAttributes.SERVICE_NAME, serviceName)",
        "                                .put(ServiceAttributes.SERVICE_VERSION, \"1.0.0\")",
        "                                .build(),",
        "                        )",
        "",
        "                val jaegerExporter =",
        "                    OtlpGrpcSpanExporter.builder()",
        "                        .setEndpoint(endpoint)",
        "                        .build()",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                            Resource.builder()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                            Resource.builder()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                            Resource.builder()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
    "start": {
      "line": 60,
      "col": 29,
      "offset": 2719
    },
    "end": {
      "line": 62,
      "col": 81,
      "offset": 2900
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/di/MonitoringModule.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 60,
      "vulnerability_column": 29,
      "vulnerable_code": "                            Resource.builder()",
      "before_lines": [
        "            // Control global OpenTelemetry registration via system property",
        "            val isGlobalOpenTelemetryEnabled = System.getProperty(\"otel.global.disabled\") != \"true\"",
        "",
        "            if (jaegerEndpoint.isPresent) {",
        "                val endpoint = jaegerEndpoint.get()",
        "                logger.info(\"Using Jaeger endpoint: $endpoint\")",
        "                val serviceName: String by inject(named(\"openTelemetryServiceName\"))",
        "                val resource =",
        "                    Resource.getDefault()",
        "                        .merge("
      ],
      "after_lines": [
        "                                .put(ServiceAttributes.SERVICE_NAME, serviceName)",
        "                                .put(ServiceAttributes.SERVICE_VERSION, \"1.0.0\")",
        "                                .build(),",
        "                        )",
        "",
        "                val jaegerExporter =",
        "                    OtlpGrpcSpanExporter.builder()",
        "                        .setEndpoint(endpoint)",
        "                        .build()",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                            Resource.builder()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                            Resource.builder()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                            Resource.builder()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 23,
      "col": 9,
      "offset": 679
    },
    "end": {
      "line": 38,
      "col": 10,
      "offset": 1222
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 23,
      "vulnerability_column": 9,
      "vulnerable_code": "        return runCatching {",
      "before_lines": [
        ") {",
        "    suspend fun <T> traceOperation(",
        "        operation: String,",
        "        block: suspend () -> T,",
        "    ): T {",
        "        val span =",
        "            tracer.spanBuilder(operation)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        ""
      ],
      "after_lines": [
        "            span.setStatus(StatusCode.OK)",
        "            block()",
        "        }.fold(",
        "            onSuccess = { result ->",
        "                span.end()",
        "                result",
        "            },",
        "            onFailure = { exception ->",
        "                // OpenTelemetry tracing must catch all exceptions to record them before re-throwing",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return runCatching {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return runCatching {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return runCatching {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return runCatching {",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return runCatching {",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 25,
      "col": 13,
      "offset": 754
    },
    "end": {
      "line": 25,
      "col": 20,
      "offset": 761
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 25,
      "vulnerability_column": 13,
      "vulnerable_code": "            block()",
      "before_lines": [
        "        operation: String,",
        "        block: suspend () -> T,",
        "    ): T {",
        "        val span =",
        "            tracer.spanBuilder(operation)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        "",
        "        return runCatching {",
        "            span.setStatus(StatusCode.OK)"
      ],
      "after_lines": [
        "        }.fold(",
        "            onSuccess = { result ->",
        "                span.end()",
        "                result",
        "            },",
        "            onFailure = { exception ->",
        "                // OpenTelemetry tracing must catch all exceptions to record them before re-throwing",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)",
        "                span.end()"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            block()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            block()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            block()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            block()",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            block()",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 29,
      "col": 17,
      "offset": 857
    },
    "end": {
      "line": 29,
      "col": 23,
      "offset": 863
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 29,
      "vulnerability_column": 17,
      "vulnerable_code": "                result",
      "before_lines": [
        "            tracer.spanBuilder(operation)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        "",
        "        return runCatching {",
        "            span.setStatus(StatusCode.OK)",
        "            block()",
        "        }.fold(",
        "            onSuccess = { result ->",
        "                span.end()"
      ],
      "after_lines": [
        "            },",
        "            onFailure = { exception ->",
        "                // OpenTelemetry tracing must catch all exceptions to record them before re-throwing",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)",
        "                span.end()",
        "                throw exception",
        "            },",
        "        )",
        "    }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                result",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                result",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                result",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                result",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                result",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 42,
      "col": 9,
      "offset": 1297
    },
    "end": {
      "line": 44,
      "col": 10,
      "offset": 1416
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 42,
      "vulnerability_column": 9,
      "vulnerable_code": "        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
      "before_lines": [
        "                // OpenTelemetry tracing must catch all exceptions to record them before re-throwing",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)",
        "                span.end()",
        "                throw exception",
        "            },",
        "        )",
        "    }",
        "",
        "    suspend fun <T> writeValueAsString(value: T): String {"
      ],
      "after_lines": [
        "            objectMapper.writeValueAsString(value)",
        "        }",
        "    }",
        "",
        "    suspend fun <T> readValue(",
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {",
        "        return traceOperation(\"ObjectMapper.readValue\") {",
        "            objectMapper.readValue(content, valueType)"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 43,
      "col": 13,
      "offset": 1368
    },
    "end": {
      "line": 43,
      "col": 51,
      "offset": 1406
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 43,
      "vulnerability_column": 13,
      "vulnerable_code": "            objectMapper.writeValueAsString(value)",
      "before_lines": [
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)",
        "                span.end()",
        "                throw exception",
        "            },",
        "        )",
        "    }",
        "",
        "    suspend fun <T> writeValueAsString(value: T): String {",
        "        return traceOperation(\"ObjectMapper.writeValueAsString\") {"
      ],
      "after_lines": [
        "        }",
        "    }",
        "",
        "    suspend fun <T> readValue(",
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {",
        "        return traceOperation(\"ObjectMapper.readValue\") {",
        "            objectMapper.readValue(content, valueType)",
        "        }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            objectMapper.writeValueAsString(value)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            objectMapper.writeValueAsString(value)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            objectMapper.writeValueAsString(value)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            objectMapper.writeValueAsString(value)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            objectMapper.writeValueAsString(value)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 51,
      "col": 9,
      "offset": 1528
    },
    "end": {
      "line": 53,
      "col": 10,
      "offset": 1642
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 51,
      "vulnerability_column": 9,
      "vulnerable_code": "        return traceOperation(\"ObjectMapper.readValue\") {",
      "before_lines": [
        "    suspend fun <T> writeValueAsString(value: T): String {",
        "        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
        "            objectMapper.writeValueAsString(value)",
        "        }",
        "    }",
        "",
        "    suspend fun <T> readValue(",
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {"
      ],
      "after_lines": [
        "            objectMapper.readValue(content, valueType)",
        "        }",
        "    }",
        "",
        "    suspend fun readTree(content: String): JsonNode {",
        "        return traceOperation(\"ObjectMapper.readTree\") {",
        "            objectMapper.readTree(content)",
        "        }",
        "    }",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return traceOperation(\"ObjectMapper.readValue\") {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return traceOperation(\"ObjectMapper.readValue\") {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return traceOperation(\"ObjectMapper.readValue\") {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return traceOperation(\"ObjectMapper.readValue\") {",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return traceOperation(\"ObjectMapper.readValue\") {",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 52,
      "col": 13,
      "offset": 1590
    },
    "end": {
      "line": 52,
      "col": 55,
      "offset": 1632
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 52,
      "vulnerability_column": 13,
      "vulnerable_code": "            objectMapper.readValue(content, valueType)",
      "before_lines": [
        "        return traceOperation(\"ObjectMapper.writeValueAsString\") {",
        "            objectMapper.writeValueAsString(value)",
        "        }",
        "    }",
        "",
        "    suspend fun <T> readValue(",
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {",
        "        return traceOperation(\"ObjectMapper.readValue\") {"
      ],
      "after_lines": [
        "        }",
        "    }",
        "",
        "    suspend fun readTree(content: String): JsonNode {",
        "        return traceOperation(\"ObjectMapper.readTree\") {",
        "            objectMapper.readTree(content)",
        "        }",
        "    }",
        "",
        "    fun setex("
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            objectMapper.readValue(content, valueType)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            objectMapper.readValue(content, valueType)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            objectMapper.readValue(content, valueType)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            objectMapper.readValue(content, valueType)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            objectMapper.readValue(content, valueType)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 57,
      "col": 9,
      "offset": 1712
    },
    "end": {
      "line": 59,
      "col": 10,
      "offset": 1813
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 57,
      "vulnerability_column": 9,
      "vulnerable_code": "        return traceOperation(\"ObjectMapper.readTree\") {",
      "before_lines": [
        "    suspend fun <T> readValue(",
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {",
        "        return traceOperation(\"ObjectMapper.readValue\") {",
        "            objectMapper.readValue(content, valueType)",
        "        }",
        "    }",
        "",
        "    suspend fun readTree(content: String): JsonNode {"
      ],
      "after_lines": [
        "            objectMapper.readTree(content)",
        "        }",
        "    }",
        "",
        "    fun setex(",
        "        jedisPool: JedisPool,",
        "        key: String,",
        "        ttlSeconds: Long,",
        "        value: String,",
        "    ) {"
      ],
      "function_name": "readTree",
      "function_context": "    suspend fun readTree(content: String): JsonNode {\n        return traceOperation(\"ObjectMapper.readTree\") {\n            objectMapper.readTree(content)\n        }\n    }",
      "function_start_line": 56,
      "function_end_line": 60,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return traceOperation(\"ObjectMapper.readTree\") {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return traceOperation(\"ObjectMapper.readTree\") {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return traceOperation(\"ObjectMapper.readTree\") {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return traceOperation(\"ObjectMapper.readTree\") {",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return traceOperation(\"ObjectMapper.readTree\") {",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 58,
      "col": 13,
      "offset": 1773
    },
    "end": {
      "line": 58,
      "col": 43,
      "offset": 1803
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 58,
      "vulnerability_column": 13,
      "vulnerable_code": "            objectMapper.readTree(content)",
      "before_lines": [
        "        content: String,",
        "        valueType: Class<T>,",
        "    ): T {",
        "        return traceOperation(\"ObjectMapper.readValue\") {",
        "            objectMapper.readValue(content, valueType)",
        "        }",
        "    }",
        "",
        "    suspend fun readTree(content: String): JsonNode {",
        "        return traceOperation(\"ObjectMapper.readTree\") {"
      ],
      "after_lines": [
        "        }",
        "    }",
        "",
        "    fun setex(",
        "        jedisPool: JedisPool,",
        "        key: String,",
        "        ttlSeconds: Long,",
        "        value: String,",
        "    ) {",
        "        val span ="
      ],
      "function_name": "readTree",
      "function_context": "    suspend fun readTree(content: String): JsonNode {\n        return traceOperation(\"ObjectMapper.readTree\") {\n            objectMapper.readTree(content)\n        }\n    }",
      "function_start_line": 56,
      "function_end_line": 60,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            objectMapper.readTree(content)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            objectMapper.readTree(content)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            objectMapper.readTree(content)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            objectMapper.readTree(content)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            objectMapper.readTree(content)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 107,
      "col": 9,
      "offset": 3250
    },
    "end": {
      "line": 124,
      "col": 10,
      "offset": 3825
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 107,
      "vulnerability_column": 9,
      "vulnerable_code": "        return runCatching {",
      "before_lines": [
        "        key: String,",
        "    ): String? {",
        "        val span =",
        "            tracer.spanBuilder(\"redis.get\")",
        "                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")",
        "                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")",
        "                .setAttribute(\"redis.key\", key)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        ""
      ],
      "after_lines": [
        "            span.setStatus(StatusCode.OK)",
        "            jedisPool.resource.use { jedis ->",
        "                jedis.get(key)",
        "            }",
        "        }.fold(",
        "            onSuccess = { value ->",
        "                span.setAttribute(\"redis.found\", value != null)",
        "                span.end()",
        "                value",
        "            },"
      ],
      "function_name": "get",
      "function_context": "    fun get(\n        jedisPool: JedisPool,\n        key: String,\n    ): String? {\n        val span =\n            tracer.spanBuilder(\"redis.get\")\n                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")\n                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")\n                .setAttribute(\"redis.key\", key)\n                .setParent(Context.current())\n                .startSpan()\n\n        return runCatching {\n            span.setStatus(StatusCode.OK)\n            jedisPool.resource.use { jedis ->\n                jedis.get(key)\n            }\n        }.fold(\n            onSuccess = { value ->\n                span.setAttribute(\"redis.found\", value != null)\n                span.end()\n                value\n            },\n            onFailure = { exception ->\n                span.setStatus(StatusCode.ERROR, getMessage(exception))\n                span.recordException(exception)\n                span.end()\n                throw exception\n            },\n        )\n    }",
      "function_start_line": 95,
      "function_end_line": 125,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return runCatching {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return runCatching {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return runCatching {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return runCatching {",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return runCatching {",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 109,
      "col": 13,
      "offset": 3325
    },
    "end": {
      "line": 111,
      "col": 14,
      "offset": 3403
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 109,
      "vulnerability_column": 13,
      "vulnerable_code": "            jedisPool.resource.use { jedis ->",
      "before_lines": [
        "        val span =",
        "            tracer.spanBuilder(\"redis.get\")",
        "                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")",
        "                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")",
        "                .setAttribute(\"redis.key\", key)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        "",
        "        return runCatching {",
        "            span.setStatus(StatusCode.OK)"
      ],
      "after_lines": [
        "                jedis.get(key)",
        "            }",
        "        }.fold(",
        "            onSuccess = { value ->",
        "                span.setAttribute(\"redis.found\", value != null)",
        "                span.end()",
        "                value",
        "            },",
        "            onFailure = { exception ->",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))"
      ],
      "function_name": "get",
      "function_context": "    fun get(\n        jedisPool: JedisPool,\n        key: String,\n    ): String? {\n        val span =\n            tracer.spanBuilder(\"redis.get\")\n                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")\n                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")\n                .setAttribute(\"redis.key\", key)\n                .setParent(Context.current())\n                .startSpan()\n\n        return runCatching {\n            span.setStatus(StatusCode.OK)\n            jedisPool.resource.use { jedis ->\n                jedis.get(key)\n            }\n        }.fold(\n            onSuccess = { value ->\n                span.setAttribute(\"redis.found\", value != null)\n                span.end()\n                value\n            },\n            onFailure = { exception ->\n                span.setStatus(StatusCode.ERROR, getMessage(exception))\n                span.recordException(exception)\n                span.end()\n                throw exception\n            },\n        )\n    }",
      "function_start_line": 95,
      "function_end_line": 125,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            jedisPool.resource.use { jedis ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            jedisPool.resource.use { jedis ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            jedisPool.resource.use { jedis ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            jedisPool.resource.use { jedis ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            jedisPool.resource.use { jedis ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 110,
      "col": 17,
      "offset": 3375
    },
    "end": {
      "line": 110,
      "col": 31,
      "offset": 3389
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 110,
      "vulnerability_column": 17,
      "vulnerable_code": "                jedis.get(key)",
      "before_lines": [
        "            tracer.spanBuilder(\"redis.get\")",
        "                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")",
        "                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")",
        "                .setAttribute(\"redis.key\", key)",
        "                .setParent(Context.current())",
        "                .startSpan()",
        "",
        "        return runCatching {",
        "            span.setStatus(StatusCode.OK)",
        "            jedisPool.resource.use { jedis ->"
      ],
      "after_lines": [
        "            }",
        "        }.fold(",
        "            onSuccess = { value ->",
        "                span.setAttribute(\"redis.found\", value != null)",
        "                span.end()",
        "                value",
        "            },",
        "            onFailure = { exception ->",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)"
      ],
      "function_name": "get",
      "function_context": "    fun get(\n        jedisPool: JedisPool,\n        key: String,\n    ): String? {\n        val span =\n            tracer.spanBuilder(\"redis.get\")\n                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")\n                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")\n                .setAttribute(\"redis.key\", key)\n                .setParent(Context.current())\n                .startSpan()\n\n        return runCatching {\n            span.setStatus(StatusCode.OK)\n            jedisPool.resource.use { jedis ->\n                jedis.get(key)\n            }\n        }.fold(\n            onSuccess = { value ->\n                span.setAttribute(\"redis.found\", value != null)\n                span.end()\n                value\n            },\n            onFailure = { exception ->\n                span.setStatus(StatusCode.ERROR, getMessage(exception))\n                span.recordException(exception)\n                span.end()\n                throw exception\n            },\n        )\n    }",
      "function_start_line": 95,
      "function_end_line": 125,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                jedis.get(key)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                jedis.get(key)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                jedis.get(key)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                jedis.get(key)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                jedis.get(key)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
    "start": {
      "line": 116,
      "col": 17,
      "offset": 3562
    },
    "end": {
      "line": 116,
      "col": 22,
      "offset": 3567
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/monitoring/OpenTelemetryTracer.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 116,
      "vulnerability_column": 17,
      "vulnerable_code": "                value",
      "before_lines": [
        "",
        "        return runCatching {",
        "            span.setStatus(StatusCode.OK)",
        "            jedisPool.resource.use { jedis ->",
        "                jedis.get(key)",
        "            }",
        "        }.fold(",
        "            onSuccess = { value ->",
        "                span.setAttribute(\"redis.found\", value != null)",
        "                span.end()"
      ],
      "after_lines": [
        "            },",
        "            onFailure = { exception ->",
        "                span.setStatus(StatusCode.ERROR, getMessage(exception))",
        "                span.recordException(exception)",
        "                span.end()",
        "                throw exception",
        "            },",
        "        )",
        "    }",
        ""
      ],
      "function_name": "get",
      "function_context": "    fun get(\n        jedisPool: JedisPool,\n        key: String,\n    ): String? {\n        val span =\n            tracer.spanBuilder(\"redis.get\")\n                .setAttribute(DbAttributes.DB_SYSTEM_NAME, \"redis\")\n                .setAttribute(DbAttributes.DB_OPERATION_NAME, \"get\")\n                .setAttribute(\"redis.key\", key)\n                .setParent(Context.current())\n                .startSpan()\n\n        return runCatching {\n            span.setStatus(StatusCode.OK)\n            jedisPool.resource.use { jedis ->\n                jedis.get(key)\n            }\n        }.fold(\n            onSuccess = { value ->\n                span.setAttribute(\"redis.found\", value != null)\n                span.end()\n                value\n            },\n            onFailure = { exception ->\n                span.setStatus(StatusCode.ERROR, getMessage(exception))\n                span.recordException(exception)\n                span.end()\n                throw exception\n            },\n        )\n    }",
      "function_start_line": 95,
      "function_end_line": 125,
      "class_name": "OpenTelemetryTracer",
      "class_context": "class OpenTelemetryTracer(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                value",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                value",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                value",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                value",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                value",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
    "start": {
      "line": 25,
      "col": 17,
      "offset": 886
    },
    "end": {
      "line": 25,
      "col": 85,
      "offset": 954
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 25,
      "vulnerability_column": 17,
      "vulnerable_code": "                attributes.put(\"http.request.timestamp\", System.currentTimeMillis())",
      "before_lines": [
        "",
        "    install(KtorServerTelemetry) {",
        "        setOpenTelemetry(openTelemetry)",
        "        spanNameExtractor {",
        "            SpanNameExtractor<ApplicationRequest> { request ->",
        "                \"${request.httpMethod.value} ${request.uri}\"",
        "            }",
        "        }",
        "        attributesExtractor {",
        "            onStart {"
      ],
      "after_lines": [
        "            }",
        "            onEnd {",
        "                attributes.put(\"http.response.timestamp\", System.currentTimeMillis())",
        "            }",
        "        }",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                attributes.put(\"http.request.timestamp\", System.currentTimeMillis())",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                attributes.put(\"http.request.timestamp\", System.currentTimeMillis())",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                attributes.put(\"http.request.timestamp\", System.currentTimeMillis())",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
    "start": {
      "line": 28,
      "col": 17,
      "offset": 1005
    },
    "end": {
      "line": 28,
      "col": 86,
      "offset": 1074
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/plugins/OpenTelemetry.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 28,
      "vulnerability_column": 17,
      "vulnerable_code": "                attributes.put(\"http.response.timestamp\", System.currentTimeMillis())",
      "before_lines": [
        "        spanNameExtractor {",
        "            SpanNameExtractor<ApplicationRequest> { request ->",
        "                \"${request.httpMethod.value} ${request.uri}\"",
        "            }",
        "        }",
        "        attributesExtractor {",
        "            onStart {",
        "                attributes.put(\"http.request.timestamp\", System.currentTimeMillis())",
        "            }",
        "            onEnd {"
      ],
      "after_lines": [
        "            }",
        "        }",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                attributes.put(\"http.response.timestamp\", System.currentTimeMillis())",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                attributes.put(\"http.response.timestamp\", System.currentTimeMillis())",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                attributes.put(\"http.response.timestamp\", System.currentTimeMillis())",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "start": {
      "line": 104,
      "col": 9,
      "offset": 3829
    },
    "end": {
      "line": 104,
      "col": 20,
      "offset": 3840
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 104,
      "vulnerability_column": 9,
      "vulnerable_code": "        return true",
      "before_lines": [
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.validateAuthenticationRequest(",
        "    request: AuthenticationRequest,",
        "): Boolean {",
        "    if (request.username != null && request.username.isBlank()) {",
        "        call.respond(",
        "            HttpStatusCode.BadRequest,",
        "            mapOf(\"error\" to \"Username cannot be empty if provided\"),",
        "        )"
      ],
      "after_lines": [
        "    }",
        "    return false",
        "}",
        "",
        "private suspend fun createStartAssertionOptions(",
        "    request: AuthenticationRequest,",
        "    relyingParty: RelyingParty,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        ") = if (request.username != null) {",
        "    openTelemetryTracer.traceOperation(\"relyingParty.startAssertion.withUsername\") {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return true",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return true",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return true",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "start": {
      "line": 106,
      "col": 5,
      "offset": 3851
    },
    "end": {
      "line": 106,
      "col": 17,
      "offset": 3863
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 106,
      "vulnerability_column": 5,
      "vulnerable_code": "    return false",
      "before_lines": [
        "private suspend fun PipelineContext<Unit, ApplicationCall>.validateAuthenticationRequest(",
        "    request: AuthenticationRequest,",
        "): Boolean {",
        "    if (request.username != null && request.username.isBlank()) {",
        "        call.respond(",
        "            HttpStatusCode.BadRequest,",
        "            mapOf(\"error\" to \"Username cannot be empty if provided\"),",
        "        )",
        "        return true",
        "    }"
      ],
      "after_lines": [
        "}",
        "",
        "private suspend fun createStartAssertionOptions(",
        "    request: AuthenticationRequest,",
        "    relyingParty: RelyingParty,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        ") = if (request.username != null) {",
        "    openTelemetryTracer.traceOperation(\"relyingParty.startAssertion.withUsername\") {",
        "        relyingParty.startAssertion(",
        "            StartAssertionOptions.builder()"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return false",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return false",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return false",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "start": {
      "line": 137,
      "col": 13,
      "offset": 4857
    },
    "end": {
      "line": 137,
      "col": 57,
      "offset": 4901
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 137,
      "vulnerability_column": 13,
      "vulnerable_code": "            startAssertionOptions.toCredentialsGetJson()",
      "before_lines": [
        "    }",
        "}",
        "",
        "private suspend fun createAuthenticationResponse(",
        "    requestId: String,",
        "    startAssertionOptions: com.yubico.webauthn.AssertionRequest,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        "): AuthenticationResponse {",
        "    val credentialsJson =",
        "        openTelemetryTracer.traceOperation(\"toCredentialsGetJson\") {"
      ],
      "after_lines": [
        "        }",
        "    val credentialsObject = openTelemetryTracer.readTree(credentialsJson)",
        "",
        "    return AuthenticationResponse(",
        "        requestId = requestId,",
        "        publicKeyCredentialRequestOptions = credentialsObject,",
        "    )",
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.retrieveAssertionRequest("
      ],
      "function_name": "createAuthenticationResponse",
      "function_context": "private suspend fun createAuthenticationResponse(\n    requestId: String,\n    startAssertionOptions: com.yubico.webauthn.AssertionRequest,\n    openTelemetryTracer: OpenTelemetryTracer,\n): AuthenticationResponse {\n    val credentialsJson =\n        openTelemetryTracer.traceOperation(\"toCredentialsGetJson\") {\n            startAssertionOptions.toCredentialsGetJson()\n        }\n    val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n    return AuthenticationResponse(\n        requestId = requestId,\n        publicKeyCredentialRequestOptions = credentialsObject,\n    )\n}",
      "function_start_line": 130,
      "function_end_line": 145,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            startAssertionOptions.toCredentialsGetJson()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            startAssertionOptions.toCredentialsGetJson()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            startAssertionOptions.toCredentialsGetJson()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            startAssertionOptions.toCredentialsGetJson()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            startAssertionOptions.toCredentialsGetJson()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "start": {
      "line": 141,
      "col": 5,
      "offset": 4991
    },
    "end": {
      "line": 144,
      "col": 6,
      "offset": 5121
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 141,
      "vulnerability_column": 5,
      "vulnerable_code": "    return AuthenticationResponse(",
      "before_lines": [
        "    requestId: String,",
        "    startAssertionOptions: com.yubico.webauthn.AssertionRequest,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        "): AuthenticationResponse {",
        "    val credentialsJson =",
        "        openTelemetryTracer.traceOperation(\"toCredentialsGetJson\") {",
        "            startAssertionOptions.toCredentialsGetJson()",
        "        }",
        "    val credentialsObject = openTelemetryTracer.readTree(credentialsJson)",
        ""
      ],
      "after_lines": [
        "        requestId = requestId,",
        "        publicKeyCredentialRequestOptions = credentialsObject,",
        "    )",
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.retrieveAssertionRequest(",
        "    requestId: String,",
        "    assertionStorage: AssertionRequestStorage,",
        "): com.yubico.webauthn.AssertionRequest? {",
        "    val options = assertionStorage.retrieveAndRemoveAssertionRequest(requestId)"
      ],
      "function_name": "createAuthenticationResponse",
      "function_context": "private suspend fun createAuthenticationResponse(\n    requestId: String,\n    startAssertionOptions: com.yubico.webauthn.AssertionRequest,\n    openTelemetryTracer: OpenTelemetryTracer,\n): AuthenticationResponse {\n    val credentialsJson =\n        openTelemetryTracer.traceOperation(\"toCredentialsGetJson\") {\n            startAssertionOptions.toCredentialsGetJson()\n        }\n    val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n    return AuthenticationResponse(\n        requestId = requestId,\n        publicKeyCredentialRequestOptions = credentialsObject,\n    )\n}",
      "function_start_line": 130,
      "function_end_line": 145,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return AuthenticationResponse(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return AuthenticationResponse(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return AuthenticationResponse(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return AuthenticationResponse(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return AuthenticationResponse(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
    "start": {
      "line": 158,
      "col": 5,
      "offset": 5574
    },
    "end": {
      "line": 158,
      "col": 19,
      "offset": 5588
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/AuthenticationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 158,
      "vulnerability_column": 5,
      "vulnerable_code": "    return options",
      "before_lines": [
        "    requestId: String,",
        "    assertionStorage: AssertionRequestStorage,",
        "): com.yubico.webauthn.AssertionRequest? {",
        "    val options = assertionStorage.retrieveAndRemoveAssertionRequest(requestId)",
        "    if (options == null) {",
        "        call.respond(",
        "            HttpStatusCode.BadRequest,",
        "            mapOf(\"error\" to \"Invalid or expired request ID\"),",
        "        )",
        "    }"
      ],
      "after_lines": [
        "}",
        "",
        "private fun processAssertionFinish(",
        "    startAssertionOptions: com.yubico.webauthn.AssertionRequest,",
        "    request: AuthenticationCompleteRequest,",
        "    relyingParty: RelyingParty,",
        ") = relyingParty.finishAssertion(",
        "    FinishAssertionOptions.builder()",
        "        .request(startAssertionOptions)",
        "        .response(PublicKeyCredential.parseAssertionResponseJson(request.credential))"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return options",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return options",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return options",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "start": {
      "line": 99,
      "col": 5,
      "offset": 3282
    },
    "end": {
      "line": 104,
      "col": 6,
      "offset": 3442
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 99,
      "vulnerability_column": 5,
      "vulnerable_code": "    return if (errorMessage != null) {",
      "before_lines": [
        "private suspend fun PipelineContext<Unit, ApplicationCall>.validateRegistrationRequest(",
        "    request: RegistrationRequest,",
        "): Boolean {",
        "    val errorMessage =",
        "        when {",
        "            request.username.isBlank() -> \"Username is required\"",
        "            request.displayName.isBlank() -> \"Display name is required\"",
        "            else -> null",
        "        }",
        ""
      ],
      "after_lines": [
        "        call.respond(HttpStatusCode.BadRequest, mapOf(\"error\" to errorMessage))",
        "        true",
        "    } else {",
        "        false",
        "    }",
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.checkUserDoesNotExist(",
        "    username: String,",
        "    credentialStorage: CredentialStorage,"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return if (errorMessage != null) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return if (errorMessage != null) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return if (errorMessage != null) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "start": {
      "line": 115,
      "col": 13,
      "offset": 3775
    },
    "end": {
      "line": 115,
      "col": 51,
      "offset": 3813
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 115,
      "vulnerability_column": 13,
      "vulnerable_code": "            credentialStorage.userExists(username)",
      "before_lines": [
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.checkUserDoesNotExist(",
        "    username: String,",
        "    credentialStorage: CredentialStorage,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        "    logger: Logger,",
        "): Boolean {",
        "    val userAlreadyExists =",
        "        openTelemetryTracer.traceOperation(\"checkUserExists\") {"
      ],
      "after_lines": [
        "        }",
        "",
        "    return if (userAlreadyExists) {",
        "        logger.info(\"Registration attempt for existing user: $username\")",
        "        call.respond(",
        "            HttpStatusCode.Conflict,",
        "            mapOf(\"error\" to \"Username is already registered\"),",
        "        )",
        "        true",
        "    } else {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            credentialStorage.userExists(username)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            credentialStorage.userExists(username)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            credentialStorage.userExists(username)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "start": {
      "line": 118,
      "col": 5,
      "offset": 3829
    },
    "end": {
      "line": 127,
      "col": 6,
      "offset": 4112
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 118,
      "vulnerability_column": 5,
      "vulnerable_code": "    return if (userAlreadyExists) {",
      "before_lines": [
        "    username: String,",
        "    credentialStorage: CredentialStorage,",
        "    openTelemetryTracer: OpenTelemetryTracer,",
        "    logger: Logger,",
        "): Boolean {",
        "    val userAlreadyExists =",
        "        openTelemetryTracer.traceOperation(\"checkUserExists\") {",
        "            credentialStorage.userExists(username)",
        "        }",
        ""
      ],
      "after_lines": [
        "        logger.info(\"Registration attempt for existing user: $username\")",
        "        call.respond(",
        "            HttpStatusCode.Conflict,",
        "            mapOf(\"error\" to \"Username is already registered\"),",
        "        )",
        "        true",
        "    } else {",
        "        false",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return if (userAlreadyExists) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return if (userAlreadyExists) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return if (userAlreadyExists) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "start": {
      "line": 179,
      "col": 5,
      "offset": 5980
    },
    "end": {
      "line": 179,
      "col": 19,
      "offset": 5994
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 179,
      "vulnerability_column": 5,
      "vulnerable_code": "    return options",
      "before_lines": [
        "    requestId: String,",
        "    registrationStorage: RegistrationRequestStorage,",
        "): PublicKeyCredentialCreationOptions? {",
        "    val options = registrationStorage.retrieveAndRemoveRegistrationRequest(requestId)",
        "    if (options == null) {",
        "        call.respond(",
        "            HttpStatusCode.BadRequest,",
        "            mapOf(\"error\" to \"Invalid or expired request ID\"),",
        "        )",
        "    }"
      ],
      "after_lines": [
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.checkForRaceCondition(",
        "    username: String,",
        "    credentialStorage: CredentialStorage,",
        "    logger: Logger,",
        "): Boolean {",
        "    return if (credentialStorage.userExists(username)) {",
        "        logger.warn(\"Race condition detected: User $username was created during registration\")",
        "        call.respond("
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return options",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return options",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return options",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
    "start": {
      "line": 187,
      "col": 5,
      "offset": 6181
    },
    "end": {
      "line": 196,
      "col": 6,
      "offset": 6507
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationRoutes.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 187,
      "vulnerability_column": 5,
      "vulnerable_code": "    return if (credentialStorage.userExists(username)) {",
      "before_lines": [
        "        )",
        "    }",
        "    return options",
        "}",
        "",
        "private suspend fun PipelineContext<Unit, ApplicationCall>.checkForRaceCondition(",
        "    username: String,",
        "    credentialStorage: CredentialStorage,",
        "    logger: Logger,",
        "): Boolean {"
      ],
      "after_lines": [
        "        logger.warn(\"Race condition detected: User $username was created during registration\")",
        "        call.respond(",
        "            HttpStatusCode.Conflict,",
        "            mapOf(\"error\" to \"Username is already registered\"),",
        "        )",
        "        true",
        "    } else {",
        "        false",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return if (credentialStorage.userExists(username)) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return if (credentialStorage.userExists(username)) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return if (credentialStorage.userExists(username)) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "start": {
      "line": 38,
      "col": 17,
      "offset": 1571
    },
    "end": {
      "line": 42,
      "col": 29,
      "offset": 1756
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 38,
      "vulnerability_column": 17,
      "vulnerable_code": "                UserIdentity.builder()",
      "before_lines": [
        "        openTelemetryTracer: OpenTelemetryTracer,",
        "    ): RegistrationResponse {",
        "        val userHandle =",
        "            ByteArray.fromBase64Url(",
        "                Base64.getUrlEncoder().withoutPadding()",
        "                    .encodeToString(UUID.randomUUID().toString().toByteArray()),",
        "            )",
        "",
        "        val user =",
        "            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {"
      ],
      "after_lines": [
        "                    .name(request.username)",
        "                    .displayName(request.displayName)",
        "                    .id(userHandle)",
        "                    .build()",
        "            }",
        "",
        "        val startRegistrationOptions =",
        "            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {",
        "                relyingParty.startRegistration(",
        "                    StartRegistrationOptions.builder()"
      ],
      "function_name": "createRegistrationResponse",
      "function_context": "    suspend fun createRegistrationResponse(\n        request: RegistrationRequest,\n        requestId: String,\n        relyingParty: RelyingParty,\n        registrationStorage: RegistrationRequestStorage,\n        openTelemetryTracer: OpenTelemetryTracer,\n    ): RegistrationResponse {\n        val userHandle =\n            ByteArray.fromBase64Url(\n                Base64.getUrlEncoder().withoutPadding()\n                    .encodeToString(UUID.randomUUID().toString().toByteArray()),\n            )\n\n        val user =\n            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {\n                UserIdentity.builder()\n                    .name(request.username)\n                    .displayName(request.displayName)\n                    .id(userHandle)\n                    .build()\n            }\n\n        val startRegistrationOptions =\n            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {\n                relyingParty.startRegistration(\n                    StartRegistrationOptions.builder()\n                        .user(user)\n                        .build(),\n                )\n            }\n\n        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)\n\n        val credentialsJson =\n            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {\n                startRegistrationOptions.toCredentialsCreateJson()\n            }\n        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n        return RegistrationResponse(\n            requestId = requestId,\n            publicKeyCredentialCreationOptions = credentialsObject,\n        )\n    }",
      "function_start_line": 23,
      "function_end_line": 66,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                UserIdentity.builder()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                UserIdentity.builder()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                UserIdentity.builder()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                UserIdentity.builder()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                UserIdentity.builder()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "start": {
      "line": 47,
      "col": 17,
      "offset": 1910
    },
    "end": {
      "line": 51,
      "col": 18,
      "offset": 2084
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 47,
      "vulnerability_column": 17,
      "vulnerable_code": "                relyingParty.startRegistration(",
      "before_lines": [
        "            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {",
        "                UserIdentity.builder()",
        "                    .name(request.username)",
        "                    .displayName(request.displayName)",
        "                    .id(userHandle)",
        "                    .build()",
        "            }",
        "",
        "        val startRegistrationOptions =",
        "            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {"
      ],
      "after_lines": [
        "                    StartRegistrationOptions.builder()",
        "                        .user(user)",
        "                        .build(),",
        "                )",
        "            }",
        "",
        "        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)",
        "",
        "        val credentialsJson =",
        "            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {"
      ],
      "function_name": "createRegistrationResponse",
      "function_context": "    suspend fun createRegistrationResponse(\n        request: RegistrationRequest,\n        requestId: String,\n        relyingParty: RelyingParty,\n        registrationStorage: RegistrationRequestStorage,\n        openTelemetryTracer: OpenTelemetryTracer,\n    ): RegistrationResponse {\n        val userHandle =\n            ByteArray.fromBase64Url(\n                Base64.getUrlEncoder().withoutPadding()\n                    .encodeToString(UUID.randomUUID().toString().toByteArray()),\n            )\n\n        val user =\n            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {\n                UserIdentity.builder()\n                    .name(request.username)\n                    .displayName(request.displayName)\n                    .id(userHandle)\n                    .build()\n            }\n\n        val startRegistrationOptions =\n            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {\n                relyingParty.startRegistration(\n                    StartRegistrationOptions.builder()\n                        .user(user)\n                        .build(),\n                )\n            }\n\n        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)\n\n        val credentialsJson =\n            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {\n                startRegistrationOptions.toCredentialsCreateJson()\n            }\n        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n        return RegistrationResponse(\n            requestId = requestId,\n            publicKeyCredentialCreationOptions = credentialsObject,\n        )\n    }",
      "function_start_line": 23,
      "function_end_line": 66,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                relyingParty.startRegistration(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                relyingParty.startRegistration(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                relyingParty.startRegistration(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                relyingParty.startRegistration(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                relyingParty.startRegistration(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "start": {
      "line": 58,
      "col": 17,
      "offset": 2313
    },
    "end": {
      "line": 58,
      "col": 67,
      "offset": 2363
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 58,
      "vulnerability_column": 17,
      "vulnerable_code": "                startRegistrationOptions.toCredentialsCreateJson()",
      "before_lines": [
        "                    StartRegistrationOptions.builder()",
        "                        .user(user)",
        "                        .build(),",
        "                )",
        "            }",
        "",
        "        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)",
        "",
        "        val credentialsJson =",
        "            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {"
      ],
      "after_lines": [
        "            }",
        "        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)",
        "",
        "        return RegistrationResponse(",
        "            requestId = requestId,",
        "            publicKeyCredentialCreationOptions = credentialsObject,",
        "        )",
        "    }",
        "",
        "    fun processRegistrationFinish("
      ],
      "function_name": "createRegistrationResponse",
      "function_context": "    suspend fun createRegistrationResponse(\n        request: RegistrationRequest,\n        requestId: String,\n        relyingParty: RelyingParty,\n        registrationStorage: RegistrationRequestStorage,\n        openTelemetryTracer: OpenTelemetryTracer,\n    ): RegistrationResponse {\n        val userHandle =\n            ByteArray.fromBase64Url(\n                Base64.getUrlEncoder().withoutPadding()\n                    .encodeToString(UUID.randomUUID().toString().toByteArray()),\n            )\n\n        val user =\n            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {\n                UserIdentity.builder()\n                    .name(request.username)\n                    .displayName(request.displayName)\n                    .id(userHandle)\n                    .build()\n            }\n\n        val startRegistrationOptions =\n            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {\n                relyingParty.startRegistration(\n                    StartRegistrationOptions.builder()\n                        .user(user)\n                        .build(),\n                )\n            }\n\n        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)\n\n        val credentialsJson =\n            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {\n                startRegistrationOptions.toCredentialsCreateJson()\n            }\n        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n        return RegistrationResponse(\n            requestId = requestId,\n            publicKeyCredentialCreationOptions = credentialsObject,\n        )\n    }",
      "function_start_line": 23,
      "function_end_line": 66,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                startRegistrationOptions.toCredentialsCreateJson()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                startRegistrationOptions.toCredentialsCreateJson()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                startRegistrationOptions.toCredentialsCreateJson()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                startRegistrationOptions.toCredentialsCreateJson()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                startRegistrationOptions.toCredentialsCreateJson()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
    "start": {
      "line": 62,
      "col": 9,
      "offset": 2465
    },
    "end": {
      "line": 65,
      "col": 10,
      "offset": 2606
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/routes/RegistrationUtils.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 62,
      "vulnerability_column": 9,
      "vulnerable_code": "        return RegistrationResponse(",
      "before_lines": [
        "            }",
        "",
        "        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)",
        "",
        "        val credentialsJson =",
        "            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {",
        "                startRegistrationOptions.toCredentialsCreateJson()",
        "            }",
        "        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)",
        ""
      ],
      "after_lines": [
        "            requestId = requestId,",
        "            publicKeyCredentialCreationOptions = credentialsObject,",
        "        )",
        "    }",
        "",
        "    fun processRegistrationFinish(",
        "        startRegistrationOptions: PublicKeyCredentialCreationOptions,",
        "        request: RegistrationCompleteRequest,",
        "        relyingParty: RelyingParty,",
        "    ) = relyingParty.finishRegistration("
      ],
      "function_name": "createRegistrationResponse",
      "function_context": "    suspend fun createRegistrationResponse(\n        request: RegistrationRequest,\n        requestId: String,\n        relyingParty: RelyingParty,\n        registrationStorage: RegistrationRequestStorage,\n        openTelemetryTracer: OpenTelemetryTracer,\n    ): RegistrationResponse {\n        val userHandle =\n            ByteArray.fromBase64Url(\n                Base64.getUrlEncoder().withoutPadding()\n                    .encodeToString(UUID.randomUUID().toString().toByteArray()),\n            )\n\n        val user =\n            openTelemetryTracer.traceOperation(\"buildUserIdentity\") {\n                UserIdentity.builder()\n                    .name(request.username)\n                    .displayName(request.displayName)\n                    .id(userHandle)\n                    .build()\n            }\n\n        val startRegistrationOptions =\n            openTelemetryTracer.traceOperation(\"relyingParty.startRegistration\") {\n                relyingParty.startRegistration(\n                    StartRegistrationOptions.builder()\n                        .user(user)\n                        .build(),\n                )\n            }\n\n        registrationStorage.storeRegistrationRequest(requestId, startRegistrationOptions)\n\n        val credentialsJson =\n            openTelemetryTracer.traceOperation(\"toCredentialsCreateJson\") {\n                startRegistrationOptions.toCredentialsCreateJson()\n            }\n        val credentialsObject = openTelemetryTracer.readTree(credentialsJson)\n\n        return RegistrationResponse(\n            requestId = requestId,\n            publicKeyCredentialCreationOptions = credentialsObject,\n        )\n    }",
      "function_start_line": 23,
      "function_end_line": 66,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return RegistrationResponse(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return RegistrationResponse(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return RegistrationResponse(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return RegistrationResponse(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return RegistrationResponse(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "kotlin.lang.security.gcm-detection.gcm-detection",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 58,
      "col": 29,
      "offset": 2394
    },
    "end": {
      "line": 58,
      "col": 81,
      "offset": 2446
    },
    "message": "GCM detected, please check that IV/nonce is not reused, an Initialization Vector (IV) is a nonce used to randomize the encryption, so that even if multiple messages with identical plaintext are encrypted, the generated corresponding ciphertexts are different.Unlike the Key, the IV usually does not need to be secret, rather it is important that it is random and unique. Certain encryption schemes the IV is exchanged in public as part of the ciphertext. Reusing same Initialization Vector with the same Key to encrypt multiple plaintext blocks allows an attacker to compare the ciphertexts and then, with some assumptions on the content of the messages, to gain important information about the data being encrypted.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 58,
      "vulnerability_column": 29,
      "vulnerable_code": "        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
      "before_lines": [
        "     */",
        "    fun encrypt(data: String): EncryptedData {",
        "        // Generate AES key for data encryption",
        "        val aesKey = generateAESKey()",
        "",
        "        // Encrypt data with AES-256-GCM",
        "        val cipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val iv = ByteArray(GCM_IV_LENGTH)",
        "        SecureRandom().nextBytes(iv)",
        ""
      ],
      "after_lines": [
        "        cipher.init(Cipher.ENCRYPT_MODE, aesKey, parameterSpec)",
        "        val encryptedData = cipher.doFinal(data.toByteArray())",
        "",
        "        // Generate Kyber key pair for KEM",
        "        val kyberKeyPair = generateKyberKeyPair()",
        "",
        "        // Use BouncyCastle Kyber KEM to encapsulate a shared secret",
        "        val kyberPublicKeyBC = PublicKeyFactory.createKey(kyberKeyPair.public.encoded)",
        "        val kemGenerator = KyberKEMGenerator(SecureRandom())",
        "        val secretWithEncapsulation = kemGenerator.generateEncapsulated(kyberPublicKeyBC)"
      ],
      "function_name": "encrypt",
      "function_context": "    fun encrypt(data: String): EncryptedData {\n        // Generate AES key for data encryption\n        val aesKey = generateAESKey()\n\n        // Encrypt data with AES-256-GCM\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val iv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(iv)\n\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.ENCRYPT_MODE, aesKey, parameterSpec)\n        val encryptedData = cipher.doFinal(data.toByteArray())\n\n        // Generate Kyber key pair for KEM\n        val kyberKeyPair = generateKyberKeyPair()\n\n        // Use BouncyCastle Kyber KEM to encapsulate a shared secret\n        val kyberPublicKeyBC = PublicKeyFactory.createKey(kyberKeyPair.public.encoded)\n        val kemGenerator = KyberKEMGenerator(SecureRandom())\n        val secretWithEncapsulation = kemGenerator.generateEncapsulated(kyberPublicKeyBC)\n\n        val kemSharedSecret = secretWithEncapsulation.secret\n        val kemEncapsulation = secretWithEncapsulation.encapsulation\n\n        // Use the KEM shared secret to encrypt our AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemIv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(kemIv)\n\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.ENCRYPT_MODE, kemAesKey, kemParamSpec)\n        val encryptedAESKey = kemCipher.doFinal(aesKey.encoded)\n\n        // Combine all components\n        val payload = iv + encryptedData\n        val keyMaterial = kemIv + encryptedAESKey + kemEncapsulation + kyberKeyPair.private.encoded\n\n        return EncryptedData(\n            method = \"KYBER768-AES256-GCM\",\n            data = Base64.getEncoder().encodeToString(payload),\n            keyMaterial = Base64.getEncoder().encodeToString(keyMaterial),\n            metadata =\n                mapOf(\n                    \"aes_algorithm\" to AES_ALGORITHM,\n                    \"kem_algorithm\" to PQ_KEM_SPEC,\n                    \"security_level\" to \"post-quantum\",\n                    \"nist_level\" to \"3\",\n                    \"created\" to System.currentTimeMillis().toString(),\n                ),\n        )\n    }",
      "function_start_line": 49,
      "function_end_line": 100,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Use Kotlin null safety and validation for secure input handling",
      "fixed_code": "require(!        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv).isNullOrBlank()) { \"Input cannot be null or blank\" }",
      "explanation": "Leverage Kotlin's type system and validation libraries for input security.",
      "alternatives": [
        {
          "description": "Implement proper error handling without information disclosure",
          "fixed_code": "// TODO: Implement secure error handling\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Replace error messages that could leak sensitive information with generic messages."
        },
        {
          "description": "Apply defensive programming security measures",
          "fixed_code": "// TODO: Implement defensive programming fix\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Implement security fixes using defensive programming approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": [
      "CWE-323: Reusing a Nonce, Key Pair in Encryption"
    ],
    "owasp": [
      "A02:2021 - Cryptographic Failures"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "LOW",
    "technology": [
      "kotlin"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/323.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "kotlin.lang.security.gcm-detection.gcm-detection",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 79,
      "col": 28,
      "offset": 3440
    },
    "end": {
      "line": 79,
      "col": 83,
      "offset": 3495
    },
    "message": "GCM detected, please check that IV/nonce is not reused, an Initialization Vector (IV) is a nonce used to randomize the encryption, so that even if multiple messages with identical plaintext are encrypted, the generated corresponding ciphertexts are different.Unlike the Key, the IV usually does not need to be secret, rather it is important that it is random and unique. Certain encryption schemes the IV is exchanged in public as part of the ciphertext. Reusing same Initialization Vector with the same Key to encrypt multiple plaintext blocks allows an attacker to compare the ciphertexts and then, with some assumptions on the content of the messages, to gain important information about the data being encrypted.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 79,
      "vulnerability_column": 28,
      "vulnerable_code": "        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
      "before_lines": [
        "",
        "        val kemSharedSecret = secretWithEncapsulation.secret",
        "        val kemEncapsulation = secretWithEncapsulation.encapsulation",
        "",
        "        // Use the KEM shared secret to encrypt our AES key",
        "        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")",
        "        val kemCipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val kemIv = ByteArray(GCM_IV_LENGTH)",
        "        SecureRandom().nextBytes(kemIv)",
        ""
      ],
      "after_lines": [
        "        kemCipher.init(Cipher.ENCRYPT_MODE, kemAesKey, kemParamSpec)",
        "        val encryptedAESKey = kemCipher.doFinal(aesKey.encoded)",
        "",
        "        // Combine all components",
        "        val payload = iv + encryptedData",
        "        val keyMaterial = kemIv + encryptedAESKey + kemEncapsulation + kyberKeyPair.private.encoded",
        "",
        "        return EncryptedData(",
        "            method = \"KYBER768-AES256-GCM\",",
        "            data = Base64.getEncoder().encodeToString(payload),"
      ],
      "function_name": "encrypt",
      "function_context": "    fun encrypt(data: String): EncryptedData {\n        // Generate AES key for data encryption\n        val aesKey = generateAESKey()\n\n        // Encrypt data with AES-256-GCM\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val iv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(iv)\n\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.ENCRYPT_MODE, aesKey, parameterSpec)\n        val encryptedData = cipher.doFinal(data.toByteArray())\n\n        // Generate Kyber key pair for KEM\n        val kyberKeyPair = generateKyberKeyPair()\n\n        // Use BouncyCastle Kyber KEM to encapsulate a shared secret\n        val kyberPublicKeyBC = PublicKeyFactory.createKey(kyberKeyPair.public.encoded)\n        val kemGenerator = KyberKEMGenerator(SecureRandom())\n        val secretWithEncapsulation = kemGenerator.generateEncapsulated(kyberPublicKeyBC)\n\n        val kemSharedSecret = secretWithEncapsulation.secret\n        val kemEncapsulation = secretWithEncapsulation.encapsulation\n\n        // Use the KEM shared secret to encrypt our AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemIv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(kemIv)\n\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.ENCRYPT_MODE, kemAesKey, kemParamSpec)\n        val encryptedAESKey = kemCipher.doFinal(aesKey.encoded)\n\n        // Combine all components\n        val payload = iv + encryptedData\n        val keyMaterial = kemIv + encryptedAESKey + kemEncapsulation + kyberKeyPair.private.encoded\n\n        return EncryptedData(\n            method = \"KYBER768-AES256-GCM\",\n            data = Base64.getEncoder().encodeToString(payload),\n            keyMaterial = Base64.getEncoder().encodeToString(keyMaterial),\n            metadata =\n                mapOf(\n                    \"aes_algorithm\" to AES_ALGORITHM,\n                    \"kem_algorithm\" to PQ_KEM_SPEC,\n                    \"security_level\" to \"post-quantum\",\n                    \"nist_level\" to \"3\",\n                    \"created\" to System.currentTimeMillis().toString(),\n                ),\n        )\n    }",
      "function_start_line": 49,
      "function_end_line": 100,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Use Kotlin null safety and validation for secure input handling",
      "fixed_code": "require(!        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv).isNullOrBlank()) { \"Input cannot be null or blank\" }",
      "explanation": "Leverage Kotlin's type system and validation libraries for input security.",
      "alternatives": [
        {
          "description": "Implement proper error handling without information disclosure",
          "fixed_code": "// TODO: Implement secure error handling\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Replace error messages that could leak sensitive information with generic messages."
        },
        {
          "description": "Apply defensive programming security measures",
          "fixed_code": "// TODO: Implement defensive programming fix\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Implement security fixes using defensive programming approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": [
      "CWE-323: Reusing a Nonce, Key Pair in Encryption"
    ],
    "owasp": [
      "A02:2021 - Cryptographic Failures"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "LOW",
    "technology": [
      "kotlin"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/323.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 87,
      "col": 9,
      "offset": 3814
    },
    "end": {
      "line": 99,
      "col": 10,
      "offset": 4368
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 87,
      "vulnerability_column": 9,
      "vulnerable_code": "        return EncryptedData(",
      "before_lines": [
        "        SecureRandom().nextBytes(kemIv)",
        "",
        "        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
        "        kemCipher.init(Cipher.ENCRYPT_MODE, kemAesKey, kemParamSpec)",
        "        val encryptedAESKey = kemCipher.doFinal(aesKey.encoded)",
        "",
        "        // Combine all components",
        "        val payload = iv + encryptedData",
        "        val keyMaterial = kemIv + encryptedAESKey + kemEncapsulation + kyberKeyPair.private.encoded",
        ""
      ],
      "after_lines": [
        "            method = \"KYBER768-AES256-GCM\",",
        "            data = Base64.getEncoder().encodeToString(payload),",
        "            keyMaterial = Base64.getEncoder().encodeToString(keyMaterial),",
        "            metadata =",
        "                mapOf(",
        "                    \"aes_algorithm\" to AES_ALGORITHM,",
        "                    \"kem_algorithm\" to PQ_KEM_SPEC,",
        "                    \"security_level\" to \"post-quantum\",",
        "                    \"nist_level\" to \"3\",",
        "                    \"created\" to System.currentTimeMillis().toString(),"
      ],
      "function_name": "encrypt",
      "function_context": "    fun encrypt(data: String): EncryptedData {\n        // Generate AES key for data encryption\n        val aesKey = generateAESKey()\n\n        // Encrypt data with AES-256-GCM\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val iv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(iv)\n\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.ENCRYPT_MODE, aesKey, parameterSpec)\n        val encryptedData = cipher.doFinal(data.toByteArray())\n\n        // Generate Kyber key pair for KEM\n        val kyberKeyPair = generateKyberKeyPair()\n\n        // Use BouncyCastle Kyber KEM to encapsulate a shared secret\n        val kyberPublicKeyBC = PublicKeyFactory.createKey(kyberKeyPair.public.encoded)\n        val kemGenerator = KyberKEMGenerator(SecureRandom())\n        val secretWithEncapsulation = kemGenerator.generateEncapsulated(kyberPublicKeyBC)\n\n        val kemSharedSecret = secretWithEncapsulation.secret\n        val kemEncapsulation = secretWithEncapsulation.encapsulation\n\n        // Use the KEM shared secret to encrypt our AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemIv = ByteArray(GCM_IV_LENGTH)\n        SecureRandom().nextBytes(kemIv)\n\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.ENCRYPT_MODE, kemAesKey, kemParamSpec)\n        val encryptedAESKey = kemCipher.doFinal(aesKey.encoded)\n\n        // Combine all components\n        val payload = iv + encryptedData\n        val keyMaterial = kemIv + encryptedAESKey + kemEncapsulation + kyberKeyPair.private.encoded\n\n        return EncryptedData(\n            method = \"KYBER768-AES256-GCM\",\n            data = Base64.getEncoder().encodeToString(payload),\n            keyMaterial = Base64.getEncoder().encodeToString(keyMaterial),\n            metadata =\n                mapOf(\n                    \"aes_algorithm\" to AES_ALGORITHM,\n                    \"kem_algorithm\" to PQ_KEM_SPEC,\n                    \"security_level\" to \"post-quantum\",\n                    \"nist_level\" to \"3\",\n                    \"created\" to System.currentTimeMillis().toString(),\n                ),\n        )\n    }",
      "function_start_line": 49,
      "function_end_line": 100,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return EncryptedData(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return EncryptedData(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return EncryptedData(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return EncryptedData(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return EncryptedData(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "kotlin.lang.security.gcm-detection.gcm-detection",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 148,
      "col": 28,
      "offset": 6385
    },
    "end": {
      "line": 148,
      "col": 83,
      "offset": 6440
    },
    "message": "GCM detected, please check that IV/nonce is not reused, an Initialization Vector (IV) is a nonce used to randomize the encryption, so that even if multiple messages with identical plaintext are encrypted, the generated corresponding ciphertexts are different.Unlike the Key, the IV usually does not need to be secret, rather it is important that it is random and unique. Certain encryption schemes the IV is exchanged in public as part of the ciphertext. Reusing same Initialization Vector with the same Key to encrypt multiple plaintext blocks allows an attacker to compare the ciphertexts and then, with some assumptions on the content of the messages, to gain important information about the data being encrypted.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 148,
      "vulnerability_column": 28,
      "vulnerable_code": "        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
      "before_lines": [
        "        val kyberPrivateKeyBC =",
        "            PrivateKeyFactory.createKey(",
        "                kyberPrivateKeyBytes,",
        "            ) as KyberPrivateKeyParameters",
        "        val kemExtractor = KyberKEMExtractor(kyberPrivateKeyBC)",
        "        val kemSharedSecret = kemExtractor.extractSecret(kemEncapsulation)",
        "",
        "        // Use KEM shared secret to decrypt the AES key",
        "        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")",
        "        val kemCipher = Cipher.getInstance(AES_ALGORITHM)"
      ],
      "after_lines": [
        "        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)",
        "        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)",
        "",
        "        // Decrypt the actual data",
        "        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")",
        "        val cipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
        "        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)",
        "",
        "        return String(cipher.doFinal(encrypted))"
      ],
      "function_name": "decrypt",
      "function_context": "    fun decrypt(encryptedData: EncryptedData): String {\n        require(encryptedData.method == \"KYBER768-AES256-GCM\") {\n            \"Unsupported encryption method: ${encryptedData.method}\"\n        }\n\n        val payload = Base64.getDecoder().decode(encryptedData.data)\n        val keyMaterial = Base64.getDecoder().decode(encryptedData.keyMaterial)\n\n        // Extract components from payload\n        val iv = payload.sliceArray(0 until GCM_IV_LENGTH)\n        val encrypted = payload.sliceArray(GCM_IV_LENGTH until payload.size)\n\n        // Extract components from keyMaterial\n        val kemIv = keyMaterial.sliceArray(0 until GCM_IV_LENGTH)\n        val encryptedAESKeySize = AES_KEY_SIZE_BYTES + GCM_TAG_LENGTH\n        val encryptedAESKey =\n            keyMaterial.sliceArray(\n                GCM_IV_LENGTH until GCM_IV_LENGTH + encryptedAESKeySize,\n            )\n\n        val kemEncapsulationStart = GCM_IV_LENGTH + encryptedAESKeySize\n        val kemEncapsulationSize = KYBER768_ENCAPSULATION_SIZE\n        val kemEncapsulation =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart until kemEncapsulationStart + kemEncapsulationSize,\n            )\n\n        val kyberPrivateKeyBytes =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart + kemEncapsulationSize until keyMaterial.size,\n            )\n\n        // Use BouncyCastle Kyber KEM to extract the shared secret\n        val kyberPrivateKeyBC =\n            PrivateKeyFactory.createKey(\n                kyberPrivateKeyBytes,\n            ) as KyberPrivateKeyParameters\n        val kemExtractor = KyberKEMExtractor(kyberPrivateKeyBC)\n        val kemSharedSecret = kemExtractor.extractSecret(kemEncapsulation)\n\n        // Use KEM shared secret to decrypt the AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)\n        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)\n\n        // Decrypt the actual data\n        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)\n\n        return String(cipher.doFinal(encrypted))\n    }",
      "function_start_line": 105,
      "function_end_line": 159,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Use Kotlin null safety and validation for secure input handling",
      "fixed_code": "require(!        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv).isNullOrBlank()) { \"Input cannot be null or blank\" }",
      "explanation": "Leverage Kotlin's type system and validation libraries for input security.",
      "alternatives": [
        {
          "description": "Implement proper error handling without information disclosure",
          "fixed_code": "// TODO: Implement secure error handling\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Replace error messages that could leak sensitive information with generic messages."
        },
        {
          "description": "Apply defensive programming security measures",
          "fixed_code": "// TODO: Implement defensive programming fix\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Implement security fixes using defensive programming approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": [
      "CWE-323: Reusing a Nonce, Key Pair in Encryption"
    ],
    "owasp": [
      "A02:2021 - Cryptographic Failures"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "LOW",
    "technology": [
      "kotlin"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/323.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "kotlin.lang.security.gcm-detection.gcm-detection",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 155,
      "col": 29,
      "offset": 6745
    },
    "end": {
      "line": 155,
      "col": 81,
      "offset": 6797
    },
    "message": "GCM detected, please check that IV/nonce is not reused, an Initialization Vector (IV) is a nonce used to randomize the encryption, so that even if multiple messages with identical plaintext are encrypted, the generated corresponding ciphertexts are different.Unlike the Key, the IV usually does not need to be secret, rather it is important that it is random and unique. Certain encryption schemes the IV is exchanged in public as part of the ciphertext. Reusing same Initialization Vector with the same Key to encrypt multiple plaintext blocks allows an attacker to compare the ciphertexts and then, with some assumptions on the content of the messages, to gain important information about the data being encrypted.",
    "severity": "INFO",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 155,
      "vulnerability_column": 29,
      "vulnerable_code": "        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
      "before_lines": [
        "        // Use KEM shared secret to decrypt the AES key",
        "        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")",
        "        val kemCipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
        "        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)",
        "        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)",
        "",
        "        // Decrypt the actual data",
        "        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")",
        "        val cipher = Cipher.getInstance(AES_ALGORITHM)"
      ],
      "after_lines": [
        "        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)",
        "",
        "        return String(cipher.doFinal(encrypted))",
        "    }",
        "",
        "    private fun generateAESKey(): SecretKey {",
        "        val keyGen = KeyGenerator.getInstance(\"AES\")",
        "        keyGen.init(AES_KEY_SIZE_BITS)",
        "        return keyGen.generateKey()",
        "    }"
      ],
      "function_name": "decrypt",
      "function_context": "    fun decrypt(encryptedData: EncryptedData): String {\n        require(encryptedData.method == \"KYBER768-AES256-GCM\") {\n            \"Unsupported encryption method: ${encryptedData.method}\"\n        }\n\n        val payload = Base64.getDecoder().decode(encryptedData.data)\n        val keyMaterial = Base64.getDecoder().decode(encryptedData.keyMaterial)\n\n        // Extract components from payload\n        val iv = payload.sliceArray(0 until GCM_IV_LENGTH)\n        val encrypted = payload.sliceArray(GCM_IV_LENGTH until payload.size)\n\n        // Extract components from keyMaterial\n        val kemIv = keyMaterial.sliceArray(0 until GCM_IV_LENGTH)\n        val encryptedAESKeySize = AES_KEY_SIZE_BYTES + GCM_TAG_LENGTH\n        val encryptedAESKey =\n            keyMaterial.sliceArray(\n                GCM_IV_LENGTH until GCM_IV_LENGTH + encryptedAESKeySize,\n            )\n\n        val kemEncapsulationStart = GCM_IV_LENGTH + encryptedAESKeySize\n        val kemEncapsulationSize = KYBER768_ENCAPSULATION_SIZE\n        val kemEncapsulation =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart until kemEncapsulationStart + kemEncapsulationSize,\n            )\n\n        val kyberPrivateKeyBytes =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart + kemEncapsulationSize until keyMaterial.size,\n            )\n\n        // Use BouncyCastle Kyber KEM to extract the shared secret\n        val kyberPrivateKeyBC =\n            PrivateKeyFactory.createKey(\n                kyberPrivateKeyBytes,\n            ) as KyberPrivateKeyParameters\n        val kemExtractor = KyberKEMExtractor(kyberPrivateKeyBC)\n        val kemSharedSecret = kemExtractor.extractSecret(kemEncapsulation)\n\n        // Use KEM shared secret to decrypt the AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)\n        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)\n\n        // Decrypt the actual data\n        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)\n\n        return String(cipher.doFinal(encrypted))\n    }",
      "function_start_line": 105,
      "function_end_line": 159,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Use Kotlin null safety and validation for secure input handling",
      "fixed_code": "require(!        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv).isNullOrBlank()) { \"Input cannot be null or blank\" }",
      "explanation": "Leverage Kotlin's type system and validation libraries for input security.",
      "alternatives": [
        {
          "description": "Implement proper error handling without information disclosure",
          "fixed_code": "// TODO: Implement secure error handling\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Replace error messages that could leak sensitive information with generic messages."
        },
        {
          "description": "Apply defensive programming security measures",
          "fixed_code": "// TODO: Implement defensive programming fix\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Implement security fixes using defensive programming approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": [
      "CWE-323: Reusing a Nonce, Key Pair in Encryption"
    ],
    "owasp": [
      "A02:2021 - Cryptographic Failures"
    ],
    "confidence": "LOW",
    "likelihood": "LOW",
    "impact": "LOW",
    "technology": [
      "kotlin"
    ],
    "references": [
      "https://cwe.mitre.org/data/definitions/323.html"
    ],
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 158,
      "col": 9,
      "offset": 6871
    },
    "end": {
      "line": 158,
      "col": 49,
      "offset": 6911
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 158,
      "vulnerability_column": 9,
      "vulnerable_code": "        return String(cipher.doFinal(encrypted))",
      "before_lines": [
        "        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)",
        "        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)",
        "        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)",
        "",
        "        // Decrypt the actual data",
        "        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")",
        "        val cipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
        "        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)",
        ""
      ],
      "after_lines": [
        "    }",
        "",
        "    private fun generateAESKey(): SecretKey {",
        "        val keyGen = KeyGenerator.getInstance(\"AES\")",
        "        keyGen.init(AES_KEY_SIZE_BITS)",
        "        return keyGen.generateKey()",
        "    }",
        "",
        "    private fun generateKyberKeyPair(): KeyPair {",
        "        val keyPairGen = KeyPairGenerator.getInstance(PQ_KEM_ALGORITHM, \"BCPQC\")"
      ],
      "function_name": "decrypt",
      "function_context": "    fun decrypt(encryptedData: EncryptedData): String {\n        require(encryptedData.method == \"KYBER768-AES256-GCM\") {\n            \"Unsupported encryption method: ${encryptedData.method}\"\n        }\n\n        val payload = Base64.getDecoder().decode(encryptedData.data)\n        val keyMaterial = Base64.getDecoder().decode(encryptedData.keyMaterial)\n\n        // Extract components from payload\n        val iv = payload.sliceArray(0 until GCM_IV_LENGTH)\n        val encrypted = payload.sliceArray(GCM_IV_LENGTH until payload.size)\n\n        // Extract components from keyMaterial\n        val kemIv = keyMaterial.sliceArray(0 until GCM_IV_LENGTH)\n        val encryptedAESKeySize = AES_KEY_SIZE_BYTES + GCM_TAG_LENGTH\n        val encryptedAESKey =\n            keyMaterial.sliceArray(\n                GCM_IV_LENGTH until GCM_IV_LENGTH + encryptedAESKeySize,\n            )\n\n        val kemEncapsulationStart = GCM_IV_LENGTH + encryptedAESKeySize\n        val kemEncapsulationSize = KYBER768_ENCAPSULATION_SIZE\n        val kemEncapsulation =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart until kemEncapsulationStart + kemEncapsulationSize,\n            )\n\n        val kyberPrivateKeyBytes =\n            keyMaterial.sliceArray(\n                kemEncapsulationStart + kemEncapsulationSize until keyMaterial.size,\n            )\n\n        // Use BouncyCastle Kyber KEM to extract the shared secret\n        val kyberPrivateKeyBC =\n            PrivateKeyFactory.createKey(\n                kyberPrivateKeyBytes,\n            ) as KyberPrivateKeyParameters\n        val kemExtractor = KyberKEMExtractor(kyberPrivateKeyBC)\n        val kemSharedSecret = kemExtractor.extractSecret(kemEncapsulation)\n\n        // Use KEM shared secret to decrypt the AES key\n        val kemAesKey = SecretKeySpec(kemSharedSecret.sliceArray(0 until AES_KEY_SIZE_BYTES), \"AES\")\n        val kemCipher = Cipher.getInstance(AES_ALGORITHM)\n        val kemParamSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, kemIv)\n        kemCipher.init(Cipher.DECRYPT_MODE, kemAesKey, kemParamSpec)\n        val aesKeyBytes = kemCipher.doFinal(encryptedAESKey)\n\n        // Decrypt the actual data\n        val aesKey = SecretKeySpec(aesKeyBytes, \"AES\")\n        val cipher = Cipher.getInstance(AES_ALGORITHM)\n        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)\n        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)\n\n        return String(cipher.doFinal(encrypted))\n    }",
      "function_start_line": 105,
      "function_end_line": 159,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return String(cipher.doFinal(encrypted))",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return String(cipher.doFinal(encrypted))",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return String(cipher.doFinal(encrypted))",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return String(cipher.doFinal(encrypted))",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return String(cipher.doFinal(encrypted))",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 164,
      "col": 9,
      "offset": 7065
    },
    "end": {
      "line": 164,
      "col": 36,
      "offset": 7092
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 164,
      "vulnerability_column": 9,
      "vulnerable_code": "        return keyGen.generateKey()",
      "before_lines": [
        "        val cipher = Cipher.getInstance(AES_ALGORITHM)",
        "        val parameterSpec = GCMParameterSpec(GCM_TAG_LENGTH * BITS_PER_BYTE, iv)",
        "        cipher.init(Cipher.DECRYPT_MODE, aesKey, parameterSpec)",
        "",
        "        return String(cipher.doFinal(encrypted))",
        "    }",
        "",
        "    private fun generateAESKey(): SecretKey {",
        "        val keyGen = KeyGenerator.getInstance(\"AES\")",
        "        keyGen.init(AES_KEY_SIZE_BITS)"
      ],
      "after_lines": [
        "    }",
        "",
        "    private fun generateKyberKeyPair(): KeyPair {",
        "        val keyPairGen = KeyPairGenerator.getInstance(PQ_KEM_ALGORITHM, \"BCPQC\")",
        "        keyPairGen.initialize(KyberParameterSpec.kyber768, SecureRandom())",
        "        return keyPairGen.generateKeyPair()",
        "    }",
        "}",
        "",
        "/**"
      ],
      "function_name": "generateAESKey",
      "function_context": "    private fun generateAESKey(): SecretKey {\n        val keyGen = KeyGenerator.getInstance(\"AES\")\n        keyGen.init(AES_KEY_SIZE_BITS)\n        return keyGen.generateKey()\n    }",
      "function_start_line": 161,
      "function_end_line": 165,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return keyGen.generateKey()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return keyGen.generateKey()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return keyGen.generateKey()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return keyGen.generateKey()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return keyGen.generateKey()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
    "start": {
      "line": 170,
      "col": 9,
      "offset": 7314
    },
    "end": {
      "line": 170,
      "col": 44,
      "offset": 7349
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/security/PostQuantumCryptographyService.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 170,
      "vulnerability_column": 9,
      "vulnerable_code": "        return keyPairGen.generateKeyPair()",
      "before_lines": [
        "",
        "    private fun generateAESKey(): SecretKey {",
        "        val keyGen = KeyGenerator.getInstance(\"AES\")",
        "        keyGen.init(AES_KEY_SIZE_BITS)",
        "        return keyGen.generateKey()",
        "    }",
        "",
        "    private fun generateKyberKeyPair(): KeyPair {",
        "        val keyPairGen = KeyPairGenerator.getInstance(PQ_KEM_ALGORITHM, \"BCPQC\")",
        "        keyPairGen.initialize(KyberParameterSpec.kyber768, SecureRandom())"
      ],
      "after_lines": [
        "    }",
        "}",
        "",
        "/**",
        " * Data class representing encrypted data with metadata",
        " */",
        "data class EncryptedData(",
        "    // Encryption method used",
        "    val method: String,",
        "    // Base64 encoded encrypted data"
      ],
      "function_name": "generateKyberKeyPair",
      "function_context": "    private fun generateKyberKeyPair(): KeyPair {\n        val keyPairGen = KeyPairGenerator.getInstance(PQ_KEM_ALGORITHM, \"BCPQC\")\n        keyPairGen.initialize(KyberParameterSpec.kyber768, SecureRandom())\n        return keyPairGen.generateKeyPair()\n    }",
      "function_start_line": 167,
      "function_end_line": 171,
      "class_name": "PostQuantumCryptographyService",
      "class_context": "class PostQuantumCryptographyService {",
      "class_start_line": 26,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return keyPairGen.generateKeyPair()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return keyPairGen.generateKeyPair()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return keyPairGen.generateKeyPair()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return keyPairGen.generateKeyPair()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return keyPairGen.generateKeyPair()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 43,
      "col": 9,
      "offset": 1453
    },
    "end": {
      "line": 43,
      "col": 56,
      "offset": 1500
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 43,
      "vulnerability_column": 9,
      "vulnerable_code": "        return executeQueryForUser(sql, userHandleHash)",
      "before_lines": [
        "/**",
        " * Helper for user-related database operations",
        " */",
        "internal class UserDataManager(",
        "    private val dataSource: DataSource,",
        "    private val cryptoHelper: QuantumCryptoHelper,",
        ") {",
        "    fun getUserByHandle(userHandle: ByteArray): UserAccount? {",
        "        val userHandleHash = cryptoHelper.hash(userHandle.base64Url)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE user_handle_hash = ?\""
      ],
      "after_lines": [
        "    }",
        "",
        "    fun getUserByUsername(username: String): UserAccount? {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE username_hash = ?\"",
        "        return executeQueryForUser(sql, usernameHash)",
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)"
      ],
      "function_name": "getUserByHandle",
      "function_context": "    fun getUserByHandle(userHandle: ByteArray): UserAccount? {\n        val userHandleHash = cryptoHelper.hash(userHandle.base64Url)\n        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE user_handle_hash = ?\"\n        return executeQueryForUser(sql, userHandleHash)\n    }",
      "function_start_line": 40,
      "function_end_line": 44,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return executeQueryForUser(sql, userHandleHash)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return executeQueryForUser(sql, userHandleHash)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return executeQueryForUser(sql, userHandleHash)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return executeQueryForUser(sql, userHandleHash)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return executeQueryForUser(sql, userHandleHash)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 49,
      "col": 9,
      "offset": 1729
    },
    "end": {
      "line": 49,
      "col": 54,
      "offset": 1774
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 49,
      "vulnerability_column": 9,
      "vulnerable_code": "        return executeQueryForUser(sql, usernameHash)",
      "before_lines": [
        ") {",
        "    fun getUserByHandle(userHandle: ByteArray): UserAccount? {",
        "        val userHandleHash = cryptoHelper.hash(userHandle.base64Url)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE user_handle_hash = ?\"",
        "        return executeQueryForUser(sql, userHandleHash)",
        "    }",
        "",
        "    fun getUserByUsername(username: String): UserAccount? {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE username_hash = ?\""
      ],
      "after_lines": [
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->"
      ],
      "function_name": "getUserByUsername",
      "function_context": "    fun getUserByUsername(username: String): UserAccount? {\n        val usernameHash = cryptoHelper.hash(username)\n        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE username_hash = ?\"\n        return executeQueryForUser(sql, usernameHash)\n    }",
      "function_start_line": 46,
      "function_end_line": 50,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return executeQueryForUser(sql, usernameHash)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return executeQueryForUser(sql, usernameHash)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return executeQueryForUser(sql, usernameHash)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return executeQueryForUser(sql, usernameHash)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return executeQueryForUser(sql, usernameHash)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 56,
      "col": 9,
      "offset": 1982
    },
    "end": {
      "line": 63,
      "col": 10,
      "offset": 2286
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 56,
      "vulnerability_column": 9,
      "vulnerable_code": "        return dataSource.connection.use { connection ->",
      "before_lines": [
        "    fun getUserByUsername(username: String): UserAccount? {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE username_hash = ?\"",
        "        return executeQueryForUser(sql, usernameHash)",
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"",
        ""
      ],
      "after_lines": [
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    resultSet.next()",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser("
      ],
      "function_name": "userExists",
      "function_context": "    fun userExists(username: String): Boolean {\n        val usernameHash = cryptoHelper.hash(username)\n        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"\n\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, usernameHash)\n                statement.executeQuery().use { resultSet ->\n                    resultSet.next()\n                }\n            }\n        }\n    }",
      "function_start_line": 52,
      "function_end_line": 64,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return dataSource.connection.use { connection ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return dataSource.connection.use { connection ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return dataSource.connection.use { connection ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 57,
      "col": 13,
      "offset": 2043
    },
    "end": {
      "line": 62,
      "col": 14,
      "offset": 2276
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 57,
      "vulnerability_column": 13,
      "vulnerable_code": "            connection.prepareStatement(sql).use { statement ->",
      "before_lines": [
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT encrypted_user_data FROM webauthn_users_secure WHERE username_hash = ?\"",
        "        return executeQueryForUser(sql, usernameHash)",
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"",
        "",
        "        return dataSource.connection.use { connection ->"
      ],
      "after_lines": [
        "                statement.setString(1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    resultSet.next()",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,"
      ],
      "function_name": "userExists",
      "function_context": "    fun userExists(username: String): Boolean {\n        val usernameHash = cryptoHelper.hash(username)\n        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"\n\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, usernameHash)\n                statement.executeQuery().use { resultSet ->\n                    resultSet.next()\n                }\n            }\n        }\n    }",
      "function_start_line": 52,
      "function_end_line": 64,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            connection.prepareStatement(sql).use { statement ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 59,
      "col": 17,
      "offset": 2164
    },
    "end": {
      "line": 61,
      "col": 18,
      "offset": 2262
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 59,
      "vulnerability_column": 17,
      "vulnerable_code": "                statement.executeQuery().use { resultSet ->",
      "before_lines": [
        "        return executeQueryForUser(sql, usernameHash)",
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, usernameHash)"
      ],
      "after_lines": [
        "                    resultSet.next()",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {"
      ],
      "function_name": "userExists",
      "function_context": "    fun userExists(username: String): Boolean {\n        val usernameHash = cryptoHelper.hash(username)\n        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"\n\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, usernameHash)\n                statement.executeQuery().use { resultSet ->\n                    resultSet.next()\n                }\n            }\n        }\n    }",
      "function_start_line": 52,
      "function_end_line": 64,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                statement.executeQuery().use { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 60,
      "col": 21,
      "offset": 2228
    },
    "end": {
      "line": 60,
      "col": 37,
      "offset": 2244
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 60,
      "vulnerability_column": 21,
      "vulnerable_code": "                    resultSet.next()",
      "before_lines": [
        "    }",
        "",
        "    fun userExists(username: String): Boolean {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->"
      ],
      "after_lines": [
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {",
        "        return dataSource.connection.use { connection ->"
      ],
      "function_name": "userExists",
      "function_context": "    fun userExists(username: String): Boolean {\n        val usernameHash = cryptoHelper.hash(username)\n        val sql = \"SELECT 1 FROM webauthn_users_secure WHERE username_hash = ? LIMIT 1\"\n\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, usernameHash)\n                statement.executeQuery().use { resultSet ->\n                    resultSet.next()\n                }\n            }\n        }\n    }",
      "function_start_line": 52,
      "function_end_line": 64,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                    resultSet.next()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                    resultSet.next()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                    resultSet.next()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                    resultSet.next()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                    resultSet.next()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 70,
      "col": 9,
      "offset": 2409
    },
    "end": {
      "line": 77,
      "col": 10,
      "offset": 2743
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 70,
      "vulnerability_column": 9,
      "vulnerable_code": "        return dataSource.connection.use { connection ->",
      "before_lines": [
        "                    resultSet.next()",
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {"
      ],
      "after_lines": [
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, parameter)",
        "                statement.executeQuery().use { resultSet ->",
        "                    extractUserFromResultSet(resultSet, cryptoHelper)",
        "                }",
        "            }",
        "        }",
        "    }",
        "}",
        ""
      ],
      "function_name": "executeQueryForUser",
      "function_context": "    private fun executeQueryForUser(\n        sql: String,\n        parameter: String,\n    ): UserAccount? {\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, parameter)\n                statement.executeQuery().use { resultSet ->\n                    extractUserFromResultSet(resultSet, cryptoHelper)\n                }\n            }\n        }\n    }",
      "function_start_line": 66,
      "function_end_line": 78,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return dataSource.connection.use { connection ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return dataSource.connection.use { connection ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return dataSource.connection.use { connection ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 71,
      "col": 13,
      "offset": 2470
    },
    "end": {
      "line": 76,
      "col": 14,
      "offset": 2733
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 71,
      "vulnerability_column": 13,
      "vulnerable_code": "            connection.prepareStatement(sql).use { statement ->",
      "before_lines": [
        "                }",
        "            }",
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {",
        "        return dataSource.connection.use { connection ->"
      ],
      "after_lines": [
        "                statement.setString(1, parameter)",
        "                statement.executeQuery().use { resultSet ->",
        "                    extractUserFromResultSet(resultSet, cryptoHelper)",
        "                }",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "/**"
      ],
      "function_name": "executeQueryForUser",
      "function_context": "    private fun executeQueryForUser(\n        sql: String,\n        parameter: String,\n    ): UserAccount? {\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, parameter)\n                statement.executeQuery().use { resultSet ->\n                    extractUserFromResultSet(resultSet, cryptoHelper)\n                }\n            }\n        }\n    }",
      "function_start_line": 66,
      "function_end_line": 78,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            connection.prepareStatement(sql).use { statement ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 73,
      "col": 17,
      "offset": 2588
    },
    "end": {
      "line": 75,
      "col": 18,
      "offset": 2719
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 73,
      "vulnerability_column": 17,
      "vulnerable_code": "                statement.executeQuery().use { resultSet ->",
      "before_lines": [
        "        }",
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, parameter)"
      ],
      "after_lines": [
        "                    extractUserFromResultSet(resultSet, cryptoHelper)",
        "                }",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "/**",
        " * Helper for encryption/decryption operations",
        " */"
      ],
      "function_name": "executeQueryForUser",
      "function_context": "    private fun executeQueryForUser(\n        sql: String,\n        parameter: String,\n    ): UserAccount? {\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, parameter)\n                statement.executeQuery().use { resultSet ->\n                    extractUserFromResultSet(resultSet, cryptoHelper)\n                }\n            }\n        }\n    }",
      "function_start_line": 66,
      "function_end_line": 78,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                statement.executeQuery().use { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 74,
      "col": 21,
      "offset": 2652
    },
    "end": {
      "line": 74,
      "col": 70,
      "offset": 2701
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 74,
      "vulnerability_column": 21,
      "vulnerable_code": "                    extractUserFromResultSet(resultSet, cryptoHelper)",
      "before_lines": [
        "    }",
        "",
        "    private fun executeQueryForUser(",
        "        sql: String,",
        "        parameter: String,",
        "    ): UserAccount? {",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(1, parameter)",
        "                statement.executeQuery().use { resultSet ->"
      ],
      "after_lines": [
        "                }",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "/**",
        " * Helper for encryption/decryption operations",
        " */",
        "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {"
      ],
      "function_name": "executeQueryForUser",
      "function_context": "    private fun executeQueryForUser(\n        sql: String,\n        parameter: String,\n    ): UserAccount? {\n        return dataSource.connection.use { connection ->\n            connection.prepareStatement(sql).use { statement ->\n                statement.setString(1, parameter)\n                statement.executeQuery().use { resultSet ->\n                    extractUserFromResultSet(resultSet, cryptoHelper)\n                }\n            }\n        }\n    }",
      "function_start_line": 66,
      "function_end_line": 78,
      "class_name": "UserDataManager",
      "class_context": "internal class UserDataManager(",
      "class_start_line": 36,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                    extractUserFromResultSet(resultSet, cryptoHelper)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                    extractUserFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                    extractUserFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                    extractUserFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                    extractUserFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 89,
      "col": 58,
      "offset": 3128
    },
    "end": {
      "line": 89,
      "col": 89,
      "offset": 3159
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 89,
      "vulnerability_column": 58,
      "vulnerable_code": "        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
      "before_lines": [
        "}",
        "",
        "/**",
        " * Helper for encryption/decryption operations",
        " */",
        "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
        "    fun encrypt(data: String) = cryptoService.encrypt(data)",
        "",
        "    fun decrypt(encryptedDataString: String): String {",
        "        val parts = encryptedDataString.split(\"|\")"
      ],
      "after_lines": [
        "",
        "        val method = parts[0]",
        "        val data = parts[1]",
        "        val keyMaterial = parts[2]",
        "        val metadata =",
        "            if (parts.size > METADATA_PART_THRESHOLD) {",
        "                parts[METADATA_PART_INDEX].split(\",\").associate {",
        "                    val kv = it.split(\"=\", limit = KEY_VALUE_SPLIT_LIMIT)",
        "                    if (kv.size == EXPECTED_KV_PARTS) kv[0] to kv[1] else kv[0] to \"\"",
        "                }"
      ],
      "function_name": "decrypt",
      "function_context": "    fun decrypt(encryptedDataString: String): String {\n        val parts = encryptedDataString.split(\"|\")\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }\n\n        val method = parts[0]\n        val data = parts[1]\n        val keyMaterial = parts[2]\n        val metadata =\n            if (parts.size > METADATA_PART_THRESHOLD) {\n                parts[METADATA_PART_INDEX].split(\",\").associate {\n                    val kv = it.split(\"=\", limit = KEY_VALUE_SPLIT_LIMIT)\n                    if (kv.size == EXPECTED_KV_PARTS) kv[0] to kv[1] else kv[0] to \"\"\n                }\n            } else {\n                emptyMap()\n            }\n\n        return cryptoService.decrypt(\n            EncryptedData(\n                method,\n                data,\n                keyMaterial,\n                metadata,\n            ),\n        )\n    }",
      "function_start_line": 87,
      "function_end_line": 112,
      "class_name": "QuantumCryptoHelper",
      "class_context": "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
      "class_start_line": 84,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 104,
      "col": 9,
      "offset": 3650
    },
    "end": {
      "line": 111,
      "col": 10,
      "offset": 3832
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 104,
      "vulnerability_column": 9,
      "vulnerable_code": "        return cryptoService.decrypt(",
      "before_lines": [
        "        val metadata =",
        "            if (parts.size > METADATA_PART_THRESHOLD) {",
        "                parts[METADATA_PART_INDEX].split(\",\").associate {",
        "                    val kv = it.split(\"=\", limit = KEY_VALUE_SPLIT_LIMIT)",
        "                    if (kv.size == EXPECTED_KV_PARTS) kv[0] to kv[1] else kv[0] to \"\"",
        "                }",
        "            } else {",
        "                emptyMap()",
        "            }",
        ""
      ],
      "after_lines": [
        "            EncryptedData(",
        "                method,",
        "                data,",
        "                keyMaterial,",
        "                metadata,",
        "            ),",
        "        )",
        "    }",
        "",
        "    fun encryptedDataToString(encrypted: EncryptedData): String {"
      ],
      "function_name": "decrypt",
      "function_context": "    fun decrypt(encryptedDataString: String): String {\n        val parts = encryptedDataString.split(\"|\")\n        require(parts.size >= MINIMUM_ENCRYPTED_PARTS) { \"Invalid encrypted data format\" }\n\n        val method = parts[0]\n        val data = parts[1]\n        val keyMaterial = parts[2]\n        val metadata =\n            if (parts.size > METADATA_PART_THRESHOLD) {\n                parts[METADATA_PART_INDEX].split(\",\").associate {\n                    val kv = it.split(\"=\", limit = KEY_VALUE_SPLIT_LIMIT)\n                    if (kv.size == EXPECTED_KV_PARTS) kv[0] to kv[1] else kv[0] to \"\"\n                }\n            } else {\n                emptyMap()\n            }\n\n        return cryptoService.decrypt(\n            EncryptedData(\n                method,\n                data,\n                keyMaterial,\n                metadata,\n            ),\n        )\n    }",
      "function_start_line": 87,
      "function_end_line": 112,
      "class_name": "QuantumCryptoHelper",
      "class_context": "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
      "class_start_line": 84,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return cryptoService.decrypt(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return cryptoService.decrypt(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return cryptoService.decrypt(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return cryptoService.decrypt(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return cryptoService.decrypt(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 116,
      "col": 9,
      "offset": 4013
    },
    "end": {
      "line": 116,
      "col": 93,
      "offset": 4097
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 116,
      "vulnerability_column": 9,
      "vulnerable_code": "        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
      "before_lines": [
        "                method,",
        "                data,",
        "                keyMaterial,",
        "                metadata,",
        "            ),",
        "        )",
        "    }",
        "",
        "    fun encryptedDataToString(encrypted: EncryptedData): String {",
        "        val metadataStr = encrypted.metadata.entries.joinToString(\",\") { \"${it.key}=${it.value}\" }"
      ],
      "after_lines": [
        "    }",
        "",
        "    fun hash(data: String): String {",
        "        val digest = MessageDigest.getInstance(\"SHA-256\")",
        "        val hashBytes = digest.digest(data.toByteArray())",
        "        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
        "    }",
        "",
        "    companion object {",
        "        // Data parsing constants"
      ],
      "function_name": "encryptedDataToString",
      "function_context": "    fun encryptedDataToString(encrypted: EncryptedData): String {\n        val metadataStr = encrypted.metadata.entries.joinToString(\",\") { \"${it.key}=${it.value}\" }\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"\n    }",
      "function_start_line": 114,
      "function_end_line": 117,
      "class_name": "QuantumCryptoHelper",
      "class_context": "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
      "class_start_line": 84,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 122,
      "col": 9,
      "offset": 4266
    },
    "end": {
      "line": 122,
      "col": 64,
      "offset": 4321
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 122,
      "vulnerability_column": 9,
      "vulnerable_code": "        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
      "before_lines": [
        "    }",
        "",
        "    fun encryptedDataToString(encrypted: EncryptedData): String {",
        "        val metadataStr = encrypted.metadata.entries.joinToString(\",\") { \"${it.key}=${it.value}\" }",
        "        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
        "    }",
        "",
        "    fun hash(data: String): String {",
        "        val digest = MessageDigest.getInstance(\"SHA-256\")",
        "        val hashBytes = digest.digest(data.toByteArray())"
      ],
      "after_lines": [
        "    }",
        "",
        "    companion object {",
        "        // Data parsing constants",
        "        const val MINIMUM_ENCRYPTED_PARTS = 4",
        "        const val METADATA_PART_THRESHOLD = 3",
        "        const val METADATA_PART_INDEX = 3",
        "        const val KEY_VALUE_SPLIT_LIMIT = 2",
        "        const val EXPECTED_KV_PARTS = 2",
        "    }"
      ],
      "function_name": "hash",
      "function_context": "    fun hash(data: String): String {\n        val digest = MessageDigest.getInstance(\"SHA-256\")\n        val hashBytes = digest.digest(data.toByteArray())\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }\n    }",
      "function_start_line": 119,
      "function_end_line": 123,
      "class_name": "QuantumCryptoHelper",
      "class_context": "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
      "class_start_line": 84,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 122,
      "col": 45,
      "offset": 4302
    },
    "end": {
      "line": 122,
      "col": 62,
      "offset": 4319
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 122,
      "vulnerability_column": 45,
      "vulnerable_code": "        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
      "before_lines": [
        "    }",
        "",
        "    fun encryptedDataToString(encrypted: EncryptedData): String {",
        "        val metadataStr = encrypted.metadata.entries.joinToString(\",\") { \"${it.key}=${it.value}\" }",
        "        return \"${encrypted.method}|${encrypted.data}|${encrypted.keyMaterial}|$metadataStr\"",
        "    }",
        "",
        "    fun hash(data: String): String {",
        "        val digest = MessageDigest.getInstance(\"SHA-256\")",
        "        val hashBytes = digest.digest(data.toByteArray())"
      ],
      "after_lines": [
        "    }",
        "",
        "    companion object {",
        "        // Data parsing constants",
        "        const val MINIMUM_ENCRYPTED_PARTS = 4",
        "        const val METADATA_PART_THRESHOLD = 3",
        "        const val METADATA_PART_INDEX = 3",
        "        const val KEY_VALUE_SPLIT_LIMIT = 2",
        "        const val EXPECTED_KV_PARTS = 2",
        "    }"
      ],
      "function_name": "hash",
      "function_context": "    fun hash(data: String): String {\n        val digest = MessageDigest.getInstance(\"SHA-256\")\n        val hashBytes = digest.digest(data.toByteArray())\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }\n    }",
      "function_start_line": 119,
      "function_end_line": 123,
      "class_name": "QuantumCryptoHelper",
      "class_context": "internal class QuantumCryptoHelper(private val cryptoService: PostQuantumCryptographyService) {",
      "class_start_line": 84,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return hashBytes.joinToString(\"\") { \"%02x\".format(it) }",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 230,
      "col": 9,
      "offset": 8669
    },
    "end": {
      "line": 248,
      "col": 10,
      "offset": 9532
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 230,
      "vulnerability_column": 9,
      "vulnerable_code": "        return dataSource.connection.use { connection ->",
      "before_lines": [
        "    override fun getRegistrationsByUsername(username: String): Set<CredentialRegistration> {",
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql =",
        "            \"\"\"",
        "            SELECT c.encrypted_credential_data",
        "            FROM webauthn_credentials_secure c",
        "            JOIN webauthn_users_secure u ON c.user_handle_hash = u.user_handle_hash",
        "            WHERE u.username_hash = ?",
        "            \"\"\".trimIndent()",
        ""
      ],
      "after_lines": [
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            add(",
        "                                objectMapper.readValue(",
        "                                    credentialJson,"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return dataSource.connection.use { connection ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return dataSource.connection.use { connection ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 231,
      "col": 13,
      "offset": 8730
    },
    "end": {
      "line": 247,
      "col": 14,
      "offset": 9522
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 231,
      "vulnerability_column": 13,
      "vulnerable_code": "            connection.prepareStatement(sql).use { statement ->",
      "before_lines": [
        "        val usernameHash = cryptoHelper.hash(username)",
        "        val sql =",
        "            \"\"\"",
        "            SELECT c.encrypted_credential_data",
        "            FROM webauthn_credentials_secure c",
        "            JOIN webauthn_users_secure u ON c.user_handle_hash = u.user_handle_hash",
        "            WHERE u.username_hash = ?",
        "            \"\"\".trimIndent()",
        "",
        "        return dataSource.connection.use { connection ->"
      ],
      "after_lines": [
        "                statement.setString(PARAM_1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            add(",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            connection.prepareStatement(sql).use { statement ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 233,
      "col": 17,
      "offset": 8857
    },
    "end": {
      "line": 246,
      "col": 18,
      "offset": 9508
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 233,
      "vulnerability_column": 17,
      "vulnerable_code": "                statement.executeQuery().use { resultSet ->",
      "before_lines": [
        "            \"\"\"",
        "            SELECT c.encrypted_credential_data",
        "            FROM webauthn_credentials_secure c",
        "            JOIN webauthn_users_secure u ON c.user_handle_hash = u.user_handle_hash",
        "            WHERE u.username_hash = ?",
        "            \"\"\".trimIndent()",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, usernameHash)"
      ],
      "after_lines": [
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            add(",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,",
        "                                ),",
        "                            )"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                statement.executeQuery().use { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 234,
      "col": 21,
      "offset": 8921
    },
    "end": {
      "line": 245,
      "col": 22,
      "offset": 9490
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 234,
      "vulnerability_column": 21,
      "vulnerable_code": "                    buildSet {",
      "before_lines": [
        "            SELECT c.encrypted_credential_data",
        "            FROM webauthn_credentials_secure c",
        "            JOIN webauthn_users_secure u ON c.user_handle_hash = u.user_handle_hash",
        "            WHERE u.username_hash = ?",
        "            \"\"\".trimIndent()",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, usernameHash)",
        "                statement.executeQuery().use { resultSet ->"
      ],
      "after_lines": [
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            add(",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,",
        "                                ),",
        "                            )",
        "                        }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                    buildSet {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                    buildSet {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                    buildSet {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                    buildSet {",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                    buildSet {",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 277,
      "col": 9,
      "offset": 10460
    },
    "end": {
      "line": 277,
      "col": 80,
      "offset": 10531
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 277,
      "vulnerability_column": 9,
      "vulnerable_code": "        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
      "before_lines": [
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val userHandleHash = cryptoHelper.hash(userHandle.base64Url)",
        "",
        "        val sql =",
        "            \"\"\"",
        "            SELECT encrypted_credential_data",
        "            FROM webauthn_credentials_secure",
        "            WHERE credential_id_hash = ? AND user_handle_hash = ?",
        "            \"\"\".trimIndent()",
        ""
      ],
      "after_lines": [
        "    }",
        "",
        "    private fun executeQueryForCredential(",
        "        sql: String,",
        "        param1: String,",
        "        param2: String,",
        "    ): Optional<RegisteredCredential> {",
        "        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
        "            extractCredentialFromResultSet(resultSet, cryptoHelper)",
        "        }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 285,
      "col": 9,
      "offset": 10699
    },
    "end": {
      "line": 287,
      "col": 10,
      "offset": 10854
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 285,
      "vulnerability_column": 9,
      "vulnerable_code": "        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
      "before_lines": [
        "            \"\"\".trimIndent()",
        "",
        "        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
        "    }",
        "",
        "    private fun executeQueryForCredential(",
        "        sql: String,",
        "        param1: String,",
        "        param2: String,",
        "    ): Optional<RegisteredCredential> {"
      ],
      "after_lines": [
        "            extractCredentialFromResultSet(resultSet, cryptoHelper)",
        "        }",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->"
      ],
      "function_name": "executeQueryForCredential",
      "function_context": "    private fun executeQueryForCredential(\n        sql: String,\n        param1: String,\n        param2: String,\n    ): Optional<RegisteredCredential> {\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->\n            extractCredentialFromResultSet(resultSet, cryptoHelper)\n        }\n    }",
      "function_start_line": 280,
      "function_end_line": 288,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 286,
      "col": 13,
      "offset": 10789
    },
    "end": {
      "line": 286,
      "col": 68,
      "offset": 10844
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 286,
      "vulnerability_column": 13,
      "vulnerable_code": "            extractCredentialFromResultSet(resultSet, cryptoHelper)",
      "before_lines": [
        "",
        "        return executeQueryForCredential(sql, credentialIdHash, userHandleHash)",
        "    }",
        "",
        "    private fun executeQueryForCredential(",
        "        sql: String,",
        "        param1: String,",
        "        param2: String,",
        "    ): Optional<RegisteredCredential> {",
        "        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->"
      ],
      "after_lines": [
        "        }",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, credentialIdHash)"
      ],
      "function_name": "executeQueryForCredential",
      "function_context": "    private fun executeQueryForCredential(\n        sql: String,\n        param1: String,\n        param2: String,\n    ): Optional<RegisteredCredential> {\n        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->\n            extractCredentialFromResultSet(resultSet, cryptoHelper)\n        }\n    }",
      "function_start_line": 280,
      "function_end_line": 288,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            extractCredentialFromResultSet(resultSet, cryptoHelper)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            extractCredentialFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            extractCredentialFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n            extractCredentialFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n            extractCredentialFromResultSet(resultSet, cryptoHelper)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 294,
      "col": 9,
      "offset": 11140
    },
    "end": {
      "line": 312,
      "col": 10,
      "offset": 12047
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 294,
      "vulnerability_column": 9,
      "vulnerable_code": "        return dataSource.connection.use { connection ->",
      "before_lines": [
        "    ): Optional<RegisteredCredential> {",
        "        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
        "            extractCredentialFromResultSet(resultSet, cryptoHelper)",
        "        }",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        ""
      ],
      "after_lines": [
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, credentialIdHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            val registration =",
        "                                objectMapper.readValue(",
        "                                    credentialJson,"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return dataSource.connection.use { connection ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return dataSource.connection.use { connection ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return dataSource.connection.use { connection ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 295,
      "col": 13,
      "offset": 11201
    },
    "end": {
      "line": 311,
      "col": 14,
      "offset": 12037
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 295,
      "vulnerability_column": 13,
      "vulnerable_code": "            connection.prepareStatement(sql).use { statement ->",
      "before_lines": [
        "        return executeCredentialQuery(dataSource, sql, param1, param2) { resultSet ->",
        "            extractCredentialFromResultSet(resultSet, cryptoHelper)",
        "        }",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        "",
        "        return dataSource.connection.use { connection ->"
      ],
      "after_lines": [
        "                statement.setString(PARAM_1, credentialIdHash)",
        "                statement.executeQuery().use { resultSet ->",
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            val registration =",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            connection.prepareStatement(sql).use { statement ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            connection.prepareStatement(sql).use { statement ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 297,
      "col": 17,
      "offset": 11332
    },
    "end": {
      "line": 310,
      "col": 18,
      "offset": 12023
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 297,
      "vulnerability_column": 17,
      "vulnerable_code": "                statement.executeQuery().use { resultSet ->",
      "before_lines": [
        "        }",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, credentialIdHash)"
      ],
      "after_lines": [
        "                    buildSet {",
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            val registration =",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,",
        "                                )",
        "                            add(registration.credential)"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                statement.executeQuery().use { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                statement.executeQuery().use { resultSet ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 298,
      "col": 21,
      "offset": 11396
    },
    "end": {
      "line": 309,
      "col": 22,
      "offset": 12005
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 298,
      "vulnerability_column": 21,
      "vulnerable_code": "                    buildSet {",
      "before_lines": [
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        val credentialIdHash = cryptoHelper.hash(credentialId.base64Url)",
        "        val sql = \"SELECT encrypted_credential_data FROM webauthn_credentials_secure WHERE credential_id_hash = ?\"",
        "",
        "        return dataSource.connection.use { connection ->",
        "            connection.prepareStatement(sql).use { statement ->",
        "                statement.setString(PARAM_1, credentialIdHash)",
        "                statement.executeQuery().use { resultSet ->"
      ],
      "after_lines": [
        "                        while (resultSet.next()) {",
        "                            val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "                            val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "                            val registration =",
        "                                objectMapper.readValue(",
        "                                    credentialJson,",
        "                                    CredentialRegistration::class.java,",
        "                                )",
        "                            add(registration.credential)",
        "                        }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                    buildSet {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                    buildSet {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                    buildSet {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                    buildSet {",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                    buildSet {",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 349,
      "col": 5,
      "offset": 13398
    },
    "end": {
      "line": 349,
      "col": 52,
      "offset": 13445
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 349,
      "vulnerability_column": 5,
      "vulnerable_code": "    return QuantumSafeCredentialStorage(dataSource)",
      "before_lines": [
        "            this.password = config.password",
        "            maximumPoolSize = config.maxPoolSize",
        "            minimumIdle = MINIMUM_IDLE_CONNECTIONS",
        "            connectionTimeout = CONNECTION_TIMEOUT_MS",
        "            idleTimeout = IDLE_TIMEOUT_MS",
        "            maxLifetime = MAX_LIFETIME_MS",
        "            leakDetectionThreshold = LEAK_DETECTION_THRESHOLD_MS",
        "        }",
        "",
        "    val dataSource = HikariDataSource(hikariConfig)"
      ],
      "after_lines": [
        "}",
        "",
        "/**",
        " * Helper functions for JSON processing - moved outside class to reduce function count",
        " */",
        "private fun extractUserFromJson(userJson: String): UserAccount {",
        "    return JacksonUtils.objectMapper.readValue(",
        "        userJson,",
        "        UserAccount::class.java,",
        "    )"
      ],
      "function_name": "createQuantumSafeCredentialStorage",
      "function_context": "fun createQuantumSafeCredentialStorage(config: DatabaseConfig): QuantumSafeCredentialStorage {\n    val hikariConfig =\n        HikariConfig().apply {\n            jdbcUrl = \"jdbc:postgresql://${config.host}:${config.port}/${config.database}?sslmode=disable\"\n            this.username = config.username\n            this.password = config.password\n            maximumPoolSize = config.maxPoolSize\n            minimumIdle = MINIMUM_IDLE_CONNECTIONS\n            connectionTimeout = CONNECTION_TIMEOUT_MS\n            idleTimeout = IDLE_TIMEOUT_MS\n            maxLifetime = MAX_LIFETIME_MS\n            leakDetectionThreshold = LEAK_DETECTION_THRESHOLD_MS\n        }\n\n    val dataSource = HikariDataSource(hikariConfig)\n    return QuantumSafeCredentialStorage(dataSource)\n}",
      "function_start_line": 334,
      "function_end_line": 350,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return QuantumSafeCredentialStorage(dataSource)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return QuantumSafeCredentialStorage(dataSource)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return QuantumSafeCredentialStorage(dataSource)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return QuantumSafeCredentialStorage(dataSource)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return QuantumSafeCredentialStorage(dataSource)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 356,
      "col": 5,
      "offset": 13613
    },
    "end": {
      "line": 359,
      "col": 6,
      "offset": 13713
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 356,
      "vulnerability_column": 5,
      "vulnerable_code": "    return JacksonUtils.objectMapper.readValue(",
      "before_lines": [
        "        }",
        "",
        "    val dataSource = HikariDataSource(hikariConfig)",
        "    return QuantumSafeCredentialStorage(dataSource)",
        "}",
        "",
        "/**",
        " * Helper functions for JSON processing - moved outside class to reduce function count",
        " */",
        "private fun extractUserFromJson(userJson: String): UserAccount {"
      ],
      "after_lines": [
        "        userJson,",
        "        UserAccount::class.java,",
        "    )",
        "}",
        "",
        "private fun extractCredentialFromJson(credentialJson: String): Optional<RegisteredCredential> {",
        "    val registration =",
        "        JacksonUtils.objectMapper.readValue(",
        "            credentialJson,",
        "            CredentialRegistration::class.java,"
      ],
      "function_name": "extractUserFromJson",
      "function_context": "private fun extractUserFromJson(userJson: String): UserAccount {\n    return JacksonUtils.objectMapper.readValue(\n        userJson,\n        UserAccount::class.java,\n    )\n}",
      "function_start_line": 355,
      "function_end_line": 360,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return JacksonUtils.objectMapper.readValue(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return JacksonUtils.objectMapper.readValue(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return JacksonUtils.objectMapper.readValue(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return JacksonUtils.objectMapper.readValue(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return JacksonUtils.objectMapper.readValue(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 368,
      "col": 5,
      "offset": 13971
    },
    "end": {
      "line": 368,
      "col": 48,
      "offset": 14014
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 368,
      "vulnerability_column": 5,
      "vulnerable_code": "    return Optional.of(registration.credential)",
      "before_lines": [
        "        UserAccount::class.java,",
        "    )",
        "}",
        "",
        "private fun extractCredentialFromJson(credentialJson: String): Optional<RegisteredCredential> {",
        "    val registration =",
        "        JacksonUtils.objectMapper.readValue(",
        "            credentialJson,",
        "            CredentialRegistration::class.java,",
        "        )"
      ],
      "after_lines": [
        "}",
        "",
        "private fun <T> executeCredentialQuery(",
        "    dataSource: DataSource,",
        "    sql: String,",
        "    param1: String,",
        "    param2: String,",
        "    resultExtractor: (ResultSet) -> T,",
        "): T {",
        "    return dataSource.connection.use { connection ->"
      ],
      "function_name": "extractCredentialFromJson",
      "function_context": "private fun extractCredentialFromJson(credentialJson: String): Optional<RegisteredCredential> {\n    val registration =\n        JacksonUtils.objectMapper.readValue(\n            credentialJson,\n            CredentialRegistration::class.java,\n        )\n    return Optional.of(registration.credential)\n}",
      "function_start_line": 362,
      "function_end_line": 369,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return Optional.of(registration.credential)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return Optional.of(registration.credential)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return Optional.of(registration.credential)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return Optional.of(registration.credential)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return Optional.of(registration.credential)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 378,
      "col": 5,
      "offset": 14193
    },
    "end": {
      "line": 386,
      "col": 6,
      "offset": 14516
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 378,
      "vulnerability_column": 5,
      "vulnerable_code": "    return dataSource.connection.use { connection ->",
      "before_lines": [
        "    return Optional.of(registration.credential)",
        "}",
        "",
        "private fun <T> executeCredentialQuery(",
        "    dataSource: DataSource,",
        "    sql: String,",
        "    param1: String,",
        "    param2: String,",
        "    resultExtractor: (ResultSet) -> T,",
        "): T {"
      ],
      "after_lines": [
        "        connection.prepareStatement(sql).use { statement ->",
        "            statement.setString(1, param1)",
        "            statement.setString(2, param2)",
        "            statement.executeQuery().use { resultSet ->",
        "                resultExtractor(resultSet)",
        "            }",
        "        }",
        "    }",
        "}",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return dataSource.connection.use { connection ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return dataSource.connection.use { connection ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n    return dataSource.connection.use { connection ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n    return dataSource.connection.use { connection ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 379,
      "col": 9,
      "offset": 14250
    },
    "end": {
      "line": 385,
      "col": 10,
      "offset": 14510
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 379,
      "vulnerability_column": 9,
      "vulnerable_code": "        connection.prepareStatement(sql).use { statement ->",
      "before_lines": [
        "}",
        "",
        "private fun <T> executeCredentialQuery(",
        "    dataSource: DataSource,",
        "    sql: String,",
        "    param1: String,",
        "    param2: String,",
        "    resultExtractor: (ResultSet) -> T,",
        "): T {",
        "    return dataSource.connection.use { connection ->"
      ],
      "after_lines": [
        "            statement.setString(1, param1)",
        "            statement.setString(2, param2)",
        "            statement.executeQuery().use { resultSet ->",
        "                resultExtractor(resultSet)",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "private fun extractUserFromResultSet("
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        connection.prepareStatement(sql).use { statement ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        connection.prepareStatement(sql).use { statement ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        connection.prepareStatement(sql).use { statement ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        connection.prepareStatement(sql).use { statement ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 382,
      "col": 13,
      "offset": 14400
    },
    "end": {
      "line": 384,
      "col": 14,
      "offset": 14500
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 382,
      "vulnerability_column": 13,
      "vulnerable_code": "            statement.executeQuery().use { resultSet ->",
      "before_lines": [
        "    dataSource: DataSource,",
        "    sql: String,",
        "    param1: String,",
        "    param2: String,",
        "    resultExtractor: (ResultSet) -> T,",
        "): T {",
        "    return dataSource.connection.use { connection ->",
        "        connection.prepareStatement(sql).use { statement ->",
        "            statement.setString(1, param1)",
        "            statement.setString(2, param2)"
      ],
      "after_lines": [
        "                resultExtractor(resultSet)",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "private fun extractUserFromResultSet(",
        "    resultSet: ResultSet,",
        "    cryptoHelper: QuantumCryptoHelper,",
        "): UserAccount? {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n            statement.executeQuery().use { resultSet ->",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n            statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n            statement.executeQuery().use { resultSet ->",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n            statement.executeQuery().use { resultSet ->",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n            statement.executeQuery().use { resultSet ->",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 383,
      "col": 17,
      "offset": 14460
    },
    "end": {
      "line": 383,
      "col": 43,
      "offset": 14486
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 383,
      "vulnerability_column": 17,
      "vulnerable_code": "                resultExtractor(resultSet)",
      "before_lines": [
        "    sql: String,",
        "    param1: String,",
        "    param2: String,",
        "    resultExtractor: (ResultSet) -> T,",
        "): T {",
        "    return dataSource.connection.use { connection ->",
        "        connection.prepareStatement(sql).use { statement ->",
        "            statement.setString(1, param1)",
        "            statement.setString(2, param2)",
        "            statement.executeQuery().use { resultSet ->"
      ],
      "after_lines": [
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "private fun extractUserFromResultSet(",
        "    resultSet: ResultSet,",
        "    cryptoHelper: QuantumCryptoHelper,",
        "): UserAccount? {",
        "    return if (resultSet.next()) {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                resultExtractor(resultSet)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                resultExtractor(resultSet)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                resultExtractor(resultSet)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                resultExtractor(resultSet)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                resultExtractor(resultSet)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 393,
      "col": 5,
      "offset": 14645
    },
    "end": {
      "line": 399,
      "col": 6,
      "offset": 14875
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 393,
      "vulnerability_column": 5,
      "vulnerable_code": "    return if (resultSet.next()) {",
      "before_lines": [
        "                resultExtractor(resultSet)",
        "            }",
        "        }",
        "    }",
        "}",
        "",
        "private fun extractUserFromResultSet(",
        "    resultSet: ResultSet,",
        "    cryptoHelper: QuantumCryptoHelper,",
        "): UserAccount? {"
      ],
      "after_lines": [
        "        val encryptedData = resultSet.getString(\"encrypted_user_data\")",
        "        val userJson = cryptoHelper.decrypt(encryptedData)",
        "        extractUserFromJson(userJson)",
        "    } else {",
        "        null",
        "    }",
        "}",
        "",
        "private fun extractCredentialFromResultSet(",
        "    resultSet: ResultSet,"
      ],
      "function_name": "extractUserFromResultSet",
      "function_context": "private fun extractUserFromResultSet(\n    resultSet: ResultSet,\n    cryptoHelper: QuantumCryptoHelper,\n): UserAccount? {\n    return if (resultSet.next()) {\n        val encryptedData = resultSet.getString(\"encrypted_user_data\")\n        val userJson = cryptoHelper.decrypt(encryptedData)\n        extractUserFromJson(userJson)\n    } else {\n        null\n    }\n}",
      "function_start_line": 389,
      "function_end_line": 400,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return if (resultSet.next()) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return if (resultSet.next()) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return if (resultSet.next()) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return if (resultSet.next()) {",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return if (resultSet.next()) {",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
    "start": {
      "line": 406,
      "col": 5,
      "offset": 15028
    },
    "end": {
      "line": 412,
      "col": 6,
      "offset": 15294
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/postgresql/QuantumSafeCredentialStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 406,
      "vulnerability_column": 5,
      "vulnerable_code": "    return if (resultSet.next()) {",
      "before_lines": [
        "        extractUserFromJson(userJson)",
        "    } else {",
        "        null",
        "    }",
        "}",
        "",
        "private fun extractCredentialFromResultSet(",
        "    resultSet: ResultSet,",
        "    cryptoHelper: QuantumCryptoHelper,",
        "): Optional<RegisteredCredential> {"
      ],
      "after_lines": [
        "        val encryptedData = resultSet.getString(\"encrypted_credential_data\")",
        "        val credentialJson = cryptoHelper.decrypt(encryptedData)",
        "        extractCredentialFromJson(credentialJson)",
        "    } else {",
        "        Optional.empty()",
        "    }",
        "}"
      ],
      "function_name": "extractCredentialFromResultSet",
      "function_context": "private fun extractCredentialFromResultSet(\n    resultSet: ResultSet,\n    cryptoHelper: QuantumCryptoHelper,\n): Optional<RegisteredCredential> {\n    return if (resultSet.next()) {\n        val encryptedData = resultSet.getString(\"encrypted_credential_data\")\n        val credentialJson = cryptoHelper.decrypt(encryptedData)\n        extractCredentialFromJson(credentialJson)\n    } else {\n        Optional.empty()\n    }\n}",
      "function_start_line": 402,
      "function_end_line": 413,
      "class_name": "QuantumSafeCredentialStorage",
      "class_context": "class QuantumSafeCredentialStorage(",
      "class_start_line": 139,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n    return if (resultSet.next()) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n    return if (resultSet.next()) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n    return if (resultSet.next()) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n    return if (resultSet.next()) {",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n    return if (resultSet.next()) {",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
    "start": {
      "line": 29,
      "col": 9,
      "offset": 1095
    },
    "end": {
      "line": 40,
      "col": 10,
      "offset": 1601
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 29,
      "vulnerability_column": 9,
      "vulnerable_code": "        return openTelemetryTracer.traceOperation(",
      "before_lines": [
        "        ttlSeconds: Long,",
        "    ) {",
        "        openTelemetryTracer.traceOperation(\"RedisAssertionRequestStorage.storeAssertionRequest\") {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.writeValueAsString(request)",
        "            openTelemetryTracer.setex(jedisPool, key, ttlSeconds, value)",
        "        }",
        "    }",
        "",
        "    override suspend fun retrieveAndRemoveAssertionRequest(requestId: String): AssertionRequest? {"
      ],
      "after_lines": [
        "            \"RedisAssertionRequestStorage.retrieveAndRemoveAssertionRequest\",",
        "        ) {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.get(jedisPool, key)",
        "            if (value != null) {",
        "                openTelemetryTracer.del(jedisPool, key) // Remove after retrieving",
        "                openTelemetryTracer.readValue(value, AssertionRequest::class.java)",
        "            } else {",
        "                null",
        "            }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "RedisAssertionRequestStorage",
      "class_context": "class RedisAssertionRequestStorage(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return openTelemetryTracer.traceOperation(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
    "start": {
      "line": 38,
      "col": 17,
      "offset": 1573
    },
    "end": {
      "line": 38,
      "col": 21,
      "offset": 1577
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisAssertionRequestStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 38,
      "vulnerability_column": 17,
      "vulnerable_code": "                null",
      "before_lines": [
        "    override suspend fun retrieveAndRemoveAssertionRequest(requestId: String): AssertionRequest? {",
        "        return openTelemetryTracer.traceOperation(",
        "            \"RedisAssertionRequestStorage.retrieveAndRemoveAssertionRequest\",",
        "        ) {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.get(jedisPool, key)",
        "            if (value != null) {",
        "                openTelemetryTracer.del(jedisPool, key) // Remove after retrieving",
        "                openTelemetryTracer.readValue(value, AssertionRequest::class.java)",
        "            } else {"
      ],
      "after_lines": [
        "            }",
        "        }",
        "    }",
        "",
        "    override fun close() {",
        "        jedisPool.close()",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "RedisAssertionRequestStorage",
      "class_context": "class RedisAssertionRequestStorage(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                null",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                null",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                null",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                null",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                null",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
    "start": {
      "line": 33,
      "col": 9,
      "offset": 1215
    },
    "end": {
      "line": 44,
      "col": 10,
      "offset": 1745
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 33,
      "vulnerability_column": 9,
      "vulnerable_code": "        return openTelemetryTracer.traceOperation(",
      "before_lines": [
        "        ) {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.writeValueAsString(options)",
        "            openTelemetryTracer.setex(jedisPool, key, ttlSeconds, value)",
        "        }",
        "    }",
        "",
        "    override suspend fun retrieveAndRemoveRegistrationRequest(",
        "        requestId: String,",
        "    ): PublicKeyCredentialCreationOptions? {"
      ],
      "after_lines": [
        "            \"RedisRegistrationRequestStorage.retrieveAndRemoveRegistrationRequest\",",
        "        ) {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.get(jedisPool, key)",
        "            if (value != null) {",
        "                openTelemetryTracer.del(jedisPool, key) // Remove after retrieving",
        "                openTelemetryTracer.readValue(value, PublicKeyCredentialCreationOptions::class.java)",
        "            } else {",
        "                null",
        "            }"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "RedisRegistrationRequestStorage",
      "class_context": "class RedisRegistrationRequestStorage(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return openTelemetryTracer.traceOperation(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return openTelemetryTracer.traceOperation(",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
    "start": {
      "line": 42,
      "col": 17,
      "offset": 1717
    },
    "end": {
      "line": 42,
      "col": 21,
      "offset": 1721
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/storage/redis/RedisRegistrationRequestStorage.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 42,
      "vulnerability_column": 17,
      "vulnerable_code": "                null",
      "before_lines": [
        "    ): PublicKeyCredentialCreationOptions? {",
        "        return openTelemetryTracer.traceOperation(",
        "            \"RedisRegistrationRequestStorage.retrieveAndRemoveRegistrationRequest\",",
        "        ) {",
        "            val key = \"$keyPrefix$requestId\"",
        "            val value = openTelemetryTracer.get(jedisPool, key)",
        "            if (value != null) {",
        "                openTelemetryTracer.del(jedisPool, key) // Remove after retrieving",
        "                openTelemetryTracer.readValue(value, PublicKeyCredentialCreationOptions::class.java)",
        "            } else {"
      ],
      "after_lines": [
        "            }",
        "        }",
        "    }",
        "",
        "    override fun close() {",
        "        jedisPool.close()",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "RedisRegistrationRequestStorage",
      "class_context": "class RedisRegistrationRequestStorage(",
      "class_start_line": 11,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                null",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                null",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                null",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                null",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                null",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 14,
      "col": 9,
      "offset": 558
    },
    "end": {
      "line": 20,
      "col": 21,
      "offset": 836
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 14,
      "vulnerability_column": 9,
      "vulnerable_code": "        return credentialStorage.getRegistrationsByUsername(username)",
      "before_lines": [
        "import com.yubico.webauthn.CredentialRepository",
        "import com.yubico.webauthn.RegisteredCredential",
        "import com.yubico.webauthn.data.ByteArray",
        "import com.yubico.webauthn.data.PublicKeyCredentialDescriptor",
        "import java.util.Optional",
        "",
        "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
        "    override fun getCredentialIdsForUsername(",
        "        username: String,",
        "    ): Set<PublicKeyCredentialDescriptor?>? {"
      ],
      "after_lines": [
        "            .map { registration ->",
        "                PublicKeyCredentialDescriptor.builder()",
        "                    .id(registration.credential.credentialId)",
        "                    .build()",
        "            }",
        "            .toSet()",
        "    }",
        "",
        "    override fun getUserHandleForUsername(username: String): Optional<ByteArray> {",
        "        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return credentialStorage.getRegistrationsByUsername(username)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return credentialStorage.getRegistrationsByUsername(username)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return credentialStorage.getRegistrationsByUsername(username)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return credentialStorage.getRegistrationsByUsername(username)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return credentialStorage.getRegistrationsByUsername(username)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 16,
      "col": 17,
      "offset": 671
    },
    "end": {
      "line": 18,
      "col": 29,
      "offset": 801
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 16,
      "vulnerability_column": 17,
      "vulnerable_code": "                PublicKeyCredentialDescriptor.builder()",
      "before_lines": [
        "import com.yubico.webauthn.data.ByteArray",
        "import com.yubico.webauthn.data.PublicKeyCredentialDescriptor",
        "import java.util.Optional",
        "",
        "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
        "    override fun getCredentialIdsForUsername(",
        "        username: String,",
        "    ): Set<PublicKeyCredentialDescriptor?>? {",
        "        return credentialStorage.getRegistrationsByUsername(username)",
        "            .map { registration ->"
      ],
      "after_lines": [
        "                    .id(registration.credential.credentialId)",
        "                    .build()",
        "            }",
        "            .toSet()",
        "    }",
        "",
        "    override fun getUserHandleForUsername(username: String): Optional<ByteArray> {",
        "        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
        "    }",
        ""
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                PublicKeyCredentialDescriptor.builder()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                PublicKeyCredentialDescriptor.builder()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                PublicKeyCredentialDescriptor.builder()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n                PublicKeyCredentialDescriptor.builder()",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n                PublicKeyCredentialDescriptor.builder()",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 24,
      "col": 9,
      "offset": 935
    },
    "end": {
      "line": 24,
      "col": 94,
      "offset": 1020
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 24,
      "vulnerability_column": 9,
      "vulnerable_code": "        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
      "before_lines": [
        "        return credentialStorage.getRegistrationsByUsername(username)",
        "            .map { registration ->",
        "                PublicKeyCredentialDescriptor.builder()",
        "                    .id(registration.credential.credentialId)",
        "                    .build()",
        "            }",
        "            .toSet()",
        "    }",
        "",
        "    override fun getUserHandleForUsername(username: String): Optional<ByteArray> {"
      ],
      "after_lines": [
        "    }",
        "",
        "    override fun getUsernameForUserHandle(userHandle: ByteArray): Optional<String> {",
        "        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
        "    }",
        "",
        "    override fun lookup(",
        "        credentialId: ByteArray,",
        "        userHandle: ByteArray,",
        "    ): Optional<RegisteredCredential> {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 28,
      "col": 9,
      "offset": 1121
    },
    "end": {
      "line": 28,
      "col": 92,
      "offset": 1204
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 28,
      "vulnerability_column": 9,
      "vulnerable_code": "        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
      "before_lines": [
        "                    .build()",
        "            }",
        "            .toSet()",
        "    }",
        "",
        "    override fun getUserHandleForUsername(username: String): Optional<ByteArray> {",
        "        return Optional.ofNullable(credentialStorage.getUserByUsername(username)?.userHandle)",
        "    }",
        "",
        "    override fun getUsernameForUserHandle(userHandle: ByteArray): Optional<String> {"
      ],
      "after_lines": [
        "    }",
        "",
        "    override fun lookup(",
        "        credentialId: ByteArray,",
        "        userHandle: ByteArray,",
        "    ): Optional<RegisteredCredential> {",
        "        return credentialStorage.lookup(credentialId, userHandle)",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 35,
      "col": 9,
      "offset": 1349
    },
    "end": {
      "line": 35,
      "col": 66,
      "offset": 1406
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 35,
      "vulnerability_column": 9,
      "vulnerable_code": "        return credentialStorage.lookup(credentialId, userHandle)",
      "before_lines": [
        "    }",
        "",
        "    override fun getUsernameForUserHandle(userHandle: ByteArray): Optional<String> {",
        "        return Optional.ofNullable(credentialStorage.getUserByHandle(userHandle)?.username)",
        "    }",
        "",
        "    override fun lookup(",
        "        credentialId: ByteArray,",
        "        userHandle: ByteArray,",
        "    ): Optional<RegisteredCredential> {"
      ],
      "after_lines": [
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {",
        "        return credentialStorage.lookupAll(credentialId)",
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return credentialStorage.lookup(credentialId, userHandle)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return credentialStorage.lookup(credentialId, userHandle)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return credentialStorage.lookup(credentialId, userHandle)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return credentialStorage.lookup(credentialId, userHandle)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return credentialStorage.lookup(credentialId, userHandle)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "path": "webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
    "start": {
      "line": 39,
      "col": 9,
      "offset": 1503
    },
    "end": {
      "line": 39,
      "col": 57,
      "offset": 1551
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-server/src/main/kotlin/com/vmenon/mpo/api/authn/yubico/CredentialRepositoryImpl.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 39,
      "vulnerability_column": 9,
      "vulnerable_code": "        return credentialStorage.lookupAll(credentialId)",
      "before_lines": [
        "    }",
        "",
        "    override fun lookup(",
        "        credentialId: ByteArray,",
        "        userHandle: ByteArray,",
        "    ): Optional<RegisteredCredential> {",
        "        return credentialStorage.lookup(credentialId, userHandle)",
        "    }",
        "",
        "    override fun lookupAll(credentialId: ByteArray): Set<RegisteredCredential> {"
      ],
      "after_lines": [
        "    }",
        "}"
      ],
      "function_name": null,
      "function_context": null,
      "function_start_line": null,
      "function_end_line": null,
      "class_name": "CredentialRepositoryImpl",
      "class_context": "class CredentialRepositoryImpl(private val credentialStorage: CredentialStorage) : CredentialRepository {",
      "class_start_line": 10,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return credentialStorage.lookupAll(credentialId)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return credentialStorage.lookupAll(credentialId)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return credentialStorage.lookupAll(credentialId)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Implement security controls at the database layer",
          "fixed_code": "// TODO: Implement database-level security\n        return credentialStorage.lookupAll(credentialId)",
          "explanation": "Use parameterized queries and database-level security features."
        },
        {
          "description": "Isolate security concerns in dedicated microservices",
          "fixed_code": "// TODO: Implement microservice architecture fix\n        return credentialStorage.lookupAll(credentialId)",
          "explanation": "Separate security-sensitive operations into isolated services."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 60,
      "col": 9,
      "offset": 2179
    },
    "end": {
      "line": 60,
      "col": 50,
      "offset": 2220
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 60,
      "vulnerability_column": 9,
      "vulnerable_code": "        return keyPairGenerator.generateKeyPair()",
      "before_lines": [
        "    const val BITS_PER_BYTE = 8",
        "    const val BYTE_MASK = 0xFF",
        "",
        "    /**",
        "     * Generate a test EC key pair using P-256 curve",
        "     */",
        "    fun generateKeyPair(): KeyPair {",
        "        val keyPairGenerator = KeyPairGenerator.getInstance(\"EC\")",
        "        val ecSpec = ECGenParameterSpec(\"secp256r1\") // P-256",
        "        keyPairGenerator.initialize(ecSpec, secureRandom)"
      ],
      "after_lines": [
        "    }",
        "",
        "    /**",
        "     * Create a test registration credential",
        "     */",
        "    fun createRegistrationCredential(",
        "        challenge: ByteArray,",
        "        keyPair: KeyPair,",
        "        rpId: String = DEFAULT_RP_ID,",
        "        origin: String = DEFAULT_ORIGIN,"
      ],
      "function_name": "generateKeyPair",
      "function_context": "    fun generateKeyPair(): KeyPair {\n        val keyPairGenerator = KeyPairGenerator.getInstance(\"EC\")\n        val ecSpec = ECGenParameterSpec(\"secp256r1\") // P-256\n        keyPairGenerator.initialize(ecSpec, secureRandom)\n        return keyPairGenerator.generateKeyPair()\n    }",
      "function_start_line": 56,
      "function_end_line": 61,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return keyPairGenerator.generateKeyPair()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return keyPairGenerator.generateKeyPair()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return keyPairGenerator.generateKeyPair()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return keyPairGenerator.generateKeyPair()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return keyPairGenerator.generateKeyPair()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 106,
      "col": 9,
      "offset": 3872
    },
    "end": {
      "line": 110,
      "col": 21,
      "offset": 4151
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 106,
      "vulnerability_column": 9,
      "vulnerable_code": "        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
      "before_lines": [
        "            com.yubico.webauthn.data.ByteArray(",
        "                WebAuthnCryptoHelper.cborEncode(attestationObject),",
        "            )",
        "",
        "        val response =",
        "            AuthenticatorAttestationResponse.builder()",
        "                .attestationObject(attestationObjectBytes)",
        "                .clientDataJSON(clientDataJsonBytes)",
        "                .build()",
        ""
      ],
      "after_lines": [
        "            .id(credentialId)",
        "            .response(response)",
        "            .clientExtensionResults(ClientRegistrationExtensionOutputs.builder().build())",
        "            .build()",
        "    }",
        "",
        "    /**",
        "     * Create a test authentication credential",
        "     */",
        "    fun createAuthenticationCredential("
      ],
      "function_name": "createRegistrationCredential",
      "function_context": "    fun createRegistrationCredential(\n        challenge: ByteArray,\n        keyPair: KeyPair,\n        rpId: String = DEFAULT_RP_ID,\n        origin: String = DEFAULT_ORIGIN,\n    ): PublicKeyCredential<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs> {\n        val credentialId = generateCredentialId()\n\n        // Create client data JSON\n        val clientData =\n            mapOf(\n                \"type\" to \"webauthn.create\",\n                \"challenge\" to Base64.getUrlEncoder().withoutPadding().encodeToString(challenge),\n                \"origin\" to origin,\n            )\n        val clientDataJson = objectMapper.writeValueAsString(clientData)\n        val clientDataJsonBytes = com.yubico.webauthn.data.ByteArray(clientDataJson.toByteArray())\n\n        // Create authenticator data\n        val authenticatorData =\n            createAuthenticatorData(rpId, credentialId, keyPair.public as ECPublicKey)\n\n        // Create attestation object (using \"none\" format)\n        val attestationObject =\n            mapOf(\n                \"fmt\" to \"none\",\n                \"attStmt\" to emptyMap<String, Any>(),\n                \"authData\" to authenticatorData.bytes,\n            )\n        val attestationObjectBytes =\n            com.yubico.webauthn.data.ByteArray(\n                WebAuthnCryptoHelper.cborEncode(attestationObject),\n            )\n\n        val response =\n            AuthenticatorAttestationResponse.builder()\n                .attestationObject(attestationObjectBytes)\n                .clientDataJSON(clientDataJsonBytes)\n                .build()\n\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()\n            .id(credentialId)\n            .response(response)\n            .clientExtensionResults(ClientRegistrationExtensionOutputs.builder().build())\n            .build()\n    }",
      "function_start_line": 66,
      "function_end_line": 111,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return PublicKeyCredential.builder<AuthenticatorAttestationResponse, ClientRegistrationExtensionOutputs>()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 147,
      "col": 9,
      "offset": 5629
    },
    "end": {
      "line": 151,
      "col": 21,
      "offset": 5936
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 147,
      "vulnerability_column": 9,
      "vulnerable_code": "        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
      "before_lines": [
        "        val signatureData = authenticatorData.bytes + WebAuthnCryptoHelper.sha256(clientDataJsonBytes.bytes)",
        "        val signature = WebAuthnCryptoHelper.sign(signatureData, keyPair.private)",
        "",
        "        val response =",
        "            AuthenticatorAssertionResponse.builder()",
        "                .authenticatorData(authenticatorData)",
        "                .clientDataJSON(clientDataJsonBytes)",
        "                .signature(com.yubico.webauthn.data.ByteArray(signature))",
        "                .build()",
        ""
      ],
      "after_lines": [
        "            .id(com.yubico.webauthn.data.ByteArray(credentialId))",
        "            .response(response)",
        "            .clientExtensionResults(ClientAssertionExtensionOutputs.builder().build())",
        "            .build()",
        "    }",
        "",
        "    private fun generateCredentialId(): com.yubico.webauthn.data.ByteArray {",
        "        val id = kotlin.ByteArray(CREDENTIAL_ID_SIZE)",
        "        secureRandom.nextBytes(id)",
        "        return com.yubico.webauthn.data.ByteArray(id)"
      ],
      "function_name": "createAuthenticationCredential",
      "function_context": "    fun createAuthenticationCredential(\n        challenge: ByteArray,\n        credentialId: ByteArray,\n        keyPair: KeyPair,\n        rpId: String = DEFAULT_RP_ID,\n        origin: String = DEFAULT_ORIGIN,\n    ): PublicKeyCredential<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs> {\n        // Create client data JSON\n        val clientData =\n            mapOf(\n                \"type\" to \"webauthn.get\",\n                \"challenge\" to Base64.getUrlEncoder().withoutPadding().encodeToString(challenge),\n                \"origin\" to origin,\n            )\n        val clientDataJson = objectMapper.writeValueAsString(clientData)\n        val clientDataJsonBytes = com.yubico.webauthn.data.ByteArray(clientDataJson.toByteArray())\n\n        // Create authenticator data (without attestation data for authentication)\n        val authenticatorData = createSimpleAuthenticatorData(rpId)\n\n        // Create signature\n        val signatureData = authenticatorData.bytes + WebAuthnCryptoHelper.sha256(clientDataJsonBytes.bytes)\n        val signature = WebAuthnCryptoHelper.sign(signatureData, keyPair.private)\n\n        val response =\n            AuthenticatorAssertionResponse.builder()\n                .authenticatorData(authenticatorData)\n                .clientDataJSON(clientDataJsonBytes)\n                .signature(com.yubico.webauthn.data.ByteArray(signature))\n                .build()\n\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()\n            .id(com.yubico.webauthn.data.ByteArray(credentialId))\n            .response(response)\n            .clientExtensionResults(ClientAssertionExtensionOutputs.builder().build())\n            .build()\n    }",
      "function_start_line": 116,
      "function_end_line": 152,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 157,
      "col": 9,
      "offset": 6118
    },
    "end": {
      "line": 157,
      "col": 54,
      "offset": 6163
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 157,
      "vulnerability_column": 9,
      "vulnerable_code": "        return com.yubico.webauthn.data.ByteArray(id)",
      "before_lines": [
        "        return PublicKeyCredential.builder<AuthenticatorAssertionResponse, ClientAssertionExtensionOutputs>()",
        "            .id(com.yubico.webauthn.data.ByteArray(credentialId))",
        "            .response(response)",
        "            .clientExtensionResults(ClientAssertionExtensionOutputs.builder().build())",
        "            .build()",
        "    }",
        "",
        "    private fun generateCredentialId(): com.yubico.webauthn.data.ByteArray {",
        "        val id = kotlin.ByteArray(CREDENTIAL_ID_SIZE)",
        "        secureRandom.nextBytes(id)"
      ],
      "after_lines": [
        "    }",
        "",
        "    private fun createAuthenticatorData(",
        "        rpId: String,",
        "        credentialId: com.yubico.webauthn.data.ByteArray,",
        "        publicKey: ECPublicKey,",
        "    ): com.yubico.webauthn.data.ByteArray {",
        "        val rpIdHash = WebAuthnCryptoHelper.sha256(rpId.toByteArray())",
        "        val flags = USER_PRESENT_USER_VERIFIED_ATTESTED.toByte()",
        "        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x01)"
      ],
      "function_name": "generateCredentialId",
      "function_context": "    private fun generateCredentialId(): com.yubico.webauthn.data.ByteArray {\n        val id = kotlin.ByteArray(CREDENTIAL_ID_SIZE)\n        secureRandom.nextBytes(id)\n        return com.yubico.webauthn.data.ByteArray(id)\n    }",
      "function_start_line": 154,
      "function_end_line": 158,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return com.yubico.webauthn.data.ByteArray(id)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return com.yubico.webauthn.data.ByteArray(id)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return com.yubico.webauthn.data.ByteArray(id)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return com.yubico.webauthn.data.ByteArray(id)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return com.yubico.webauthn.data.ByteArray(id)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 176,
      "col": 9,
      "offset": 6898
    },
    "end": {
      "line": 178,
      "col": 10,
      "offset": 7051
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 176,
      "vulnerability_column": 9,
      "vulnerable_code": "        return com.yubico.webauthn.data.ByteArray(",
      "before_lines": [
        "        val flags = USER_PRESENT_USER_VERIFIED_ATTESTED.toByte()",
        "        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x01)",
        "        val aaguid = kotlin.ByteArray(AAGUID_SIZE)",
        "        val credIdLength =",
        "            byteArrayOf(",
        "                (credentialId.size() shr BITS_PER_BYTE).toByte(),",
        "                (credentialId.size() and BYTE_MASK).toByte(),",
        "            )",
        "        val publicKeyCose = WebAuthnCryptoHelper.encodePublicKeyToCose(publicKey)",
        ""
      ],
      "after_lines": [
        "            rpIdHash + flags + counter + aaguid + credIdLength + credentialId.bytes + publicKeyCose,",
        "        )",
        "    }",
        "",
        "    private fun createSimpleAuthenticatorData(rpId: String): com.yubico.webauthn.data.ByteArray {",
        "        val rpIdHash = WebAuthnCryptoHelper.sha256(rpId.toByteArray())",
        "        val flags = USER_PRESENT_USER_VERIFIED.toByte()",
        "        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x02)",
        "        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
        "    }"
      ],
      "function_name": "createAuthenticatorData",
      "function_context": "    private fun createAuthenticatorData(\n        rpId: String,\n        credentialId: com.yubico.webauthn.data.ByteArray,\n        publicKey: ECPublicKey,\n    ): com.yubico.webauthn.data.ByteArray {\n        val rpIdHash = WebAuthnCryptoHelper.sha256(rpId.toByteArray())\n        val flags = USER_PRESENT_USER_VERIFIED_ATTESTED.toByte()\n        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x01)\n        val aaguid = kotlin.ByteArray(AAGUID_SIZE)\n        val credIdLength =\n            byteArrayOf(\n                (credentialId.size() shr BITS_PER_BYTE).toByte(),\n                (credentialId.size() and BYTE_MASK).toByte(),\n            )\n        val publicKeyCose = WebAuthnCryptoHelper.encodePublicKeyToCose(publicKey)\n\n        return com.yubico.webauthn.data.ByteArray(\n            rpIdHash + flags + counter + aaguid + credIdLength + credentialId.bytes + publicKeyCose,\n        )\n    }",
      "function_start_line": 160,
      "function_end_line": 179,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return com.yubico.webauthn.data.ByteArray(",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return com.yubico.webauthn.data.ByteArray(",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return com.yubico.webauthn.data.ByteArray(",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return com.yubico.webauthn.data.ByteArray(",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return com.yubico.webauthn.data.ByteArray(",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 185,
      "col": 9,
      "offset": 7350
    },
    "end": {
      "line": 185,
      "col": 78,
      "offset": 7419
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 185,
      "vulnerability_column": 9,
      "vulnerable_code": "        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
      "before_lines": [
        "",
        "        return com.yubico.webauthn.data.ByteArray(",
        "            rpIdHash + flags + counter + aaguid + credIdLength + credentialId.bytes + publicKeyCose,",
        "        )",
        "    }",
        "",
        "    private fun createSimpleAuthenticatorData(rpId: String): com.yubico.webauthn.data.ByteArray {",
        "        val rpIdHash = WebAuthnCryptoHelper.sha256(rpId.toByteArray())",
        "        val flags = USER_PRESENT_USER_VERIFIED.toByte()",
        "        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x02)"
      ],
      "after_lines": [
        "    }",
        "}",
        "",
        "/**",
        " * Helper functions for COSE and cryptographic operations",
        " */",
        "object WebAuthnCryptoHelper {",
        "    fun encodePublicKeyToCose(publicKey: ECPublicKey): kotlin.ByteArray {",
        "        val point = publicKey.w",
        "        val x ="
      ],
      "function_name": "createSimpleAuthenticatorData",
      "function_context": "    private fun createSimpleAuthenticatorData(rpId: String): com.yubico.webauthn.data.ByteArray {\n        val rpIdHash = WebAuthnCryptoHelper.sha256(rpId.toByteArray())\n        val flags = USER_PRESENT_USER_VERIFIED.toByte()\n        val counter = byteArrayOf(0x00, 0x00, 0x00, 0x02)\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)\n    }",
      "function_start_line": 181,
      "function_end_line": 186,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return com.yubico.webauthn.data.ByteArray(rpIdHash + flags + counter)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 220,
      "col": 9,
      "offset": 8860
    },
    "end": {
      "line": 220,
      "col": 35,
      "offset": 8886
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 220,
      "vulnerability_column": 9,
      "vulnerable_code": "        return cborEncode(coseKey)",
      "before_lines": [
        "            }",
        "",
        "        val coseKey =",
        "            mapOf(",
        "                WebAuthnTestAuthenticator.COSE_KEY_TYPE to WebAuthnTestAuthenticator.COSE_KEY_TYPE_EC2,",
        "                WebAuthnTestAuthenticator.COSE_ALG to WebAuthnTestAuthenticator.COSE_ALG_ES256,",
        "                WebAuthnTestAuthenticator.COSE_EC2_CURVE to WebAuthnTestAuthenticator.COSE_EC2_CURVE_P256,",
        "                WebAuthnTestAuthenticator.COSE_EC2_X to x,",
        "                WebAuthnTestAuthenticator.COSE_EC2_Y to y,",
        "            )"
      ],
      "after_lines": [
        "    }",
        "",
        "    fun kotlin.ByteArray.padStart(length: Int): kotlin.ByteArray =",
        "        if (this.size >= length) this else kotlin.ByteArray(length - this.size) + this",
        "",
        "    fun sha256(data: kotlin.ByteArray): kotlin.ByteArray =",
        "        MessageDigest.getInstance(",
        "            \"SHA-256\",",
        "        ).digest(data)",
        ""
      ],
      "function_name": "encodePublicKeyToCose",
      "function_context": "    fun encodePublicKeyToCose(publicKey: ECPublicKey): kotlin.ByteArray {\n        val point = publicKey.w\n        val x =\n            point.affineX.toByteArray().let {\n                if (it.size > WebAuthnTestAuthenticator.COORDINATE_SIZE) {\n                    it.sliceArray(it.size - WebAuthnTestAuthenticator.COORDINATE_SIZE until it.size)\n                } else {\n                    it.padStart(WebAuthnTestAuthenticator.COORDINATE_SIZE)\n                }\n            }\n        val y =\n            point.affineY.toByteArray().let {\n                if (it.size > WebAuthnTestAuthenticator.COORDINATE_SIZE) {\n                    it.sliceArray(it.size - WebAuthnTestAuthenticator.COORDINATE_SIZE until it.size)\n                } else {\n                    it.padStart(WebAuthnTestAuthenticator.COORDINATE_SIZE)\n                }\n            }\n\n        val coseKey =\n            mapOf(\n                WebAuthnTestAuthenticator.COSE_KEY_TYPE to WebAuthnTestAuthenticator.COSE_KEY_TYPE_EC2,\n                WebAuthnTestAuthenticator.COSE_ALG to WebAuthnTestAuthenticator.COSE_ALG_ES256,\n                WebAuthnTestAuthenticator.COSE_EC2_CURVE to WebAuthnTestAuthenticator.COSE_EC2_CURVE_P256,\n                WebAuthnTestAuthenticator.COSE_EC2_X to x,\n                WebAuthnTestAuthenticator.COSE_EC2_Y to y,\n            )\n        return cborEncode(coseKey)\n    }",
      "function_start_line": 193,
      "function_end_line": 221,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return cborEncode(coseKey)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return cborEncode(coseKey)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return cborEncode(coseKey)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return cborEncode(coseKey)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return cborEncode(coseKey)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 238,
      "col": 9,
      "offset": 9437
    },
    "end": {
      "line": 238,
      "col": 32,
      "offset": 9460
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 238,
      "vulnerability_column": 9,
      "vulnerable_code": "        return signature.sign()",
      "before_lines": [
        "            \"SHA-256\",",
        "        ).digest(data)",
        "",
        "    fun sign(",
        "        data: kotlin.ByteArray,",
        "        privateKey: PrivateKey,",
        "    ): kotlin.ByteArray {",
        "        val signature = Signature.getInstance(\"SHA256withECDSA\")",
        "        signature.initSign(privateKey)",
        "        signature.update(data)"
      ],
      "after_lines": [
        "    }",
        "",
        "    fun cborEncode(obj: Any): kotlin.ByteArray {",
        "        val cborObj =",
        "            when (obj) {",
        "                is Map<*, *> -> {",
        "                    val cborMap = CBORObject.NewMap()",
        "                    obj.forEach {",
        "                            (key, value) ->",
        "                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)"
      ],
      "function_name": "sign",
      "function_context": "    fun sign(\n        data: kotlin.ByteArray,\n        privateKey: PrivateKey,\n    ): kotlin.ByteArray {\n        val signature = Signature.getInstance(\"SHA256withECDSA\")\n        signature.initSign(privateKey)\n        signature.update(data)\n        return signature.sign()\n    }",
      "function_start_line": 231,
      "function_end_line": 239,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return signature.sign()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return signature.sign()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return signature.sign()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return signature.sign()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return signature.sign()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 248,
      "col": 25,
      "offset": 9754
    },
    "end": {
      "line": 248,
      "col": 77,
      "offset": 9806
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 248,
      "vulnerability_column": 25,
      "vulnerable_code": "                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
      "before_lines": [
        "        return signature.sign()",
        "    }",
        "",
        "    fun cborEncode(obj: Any): kotlin.ByteArray {",
        "        val cborObj =",
        "            when (obj) {",
        "                is Map<*, *> -> {",
        "                    val cborMap = CBORObject.NewMap()",
        "                    obj.forEach {",
        "                            (key, value) ->"
      ],
      "after_lines": [
        "                    }",
        "                    cborMap",
        "                }",
        "                else -> toCBORObject(obj)",
        "            }",
        "        return cborObj.EncodeToBytes()",
        "    }",
        "",
        "    private fun toCBORObject(obj: Any): CBORObject {",
        "        return when (obj) {"
      ],
      "function_name": "cborEncode",
      "function_context": "    fun cborEncode(obj: Any): kotlin.ByteArray {\n        val cborObj =\n            when (obj) {\n                is Map<*, *> -> {\n                    val cborMap = CBORObject.NewMap()\n                    obj.forEach {\n                            (key, value) ->\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)\n                    }\n                    cborMap\n                }\n                else -> toCBORObject(obj)\n            }\n        return cborObj.EncodeToBytes()\n    }",
      "function_start_line": 241,
      "function_end_line": 255,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 254,
      "col": 9,
      "offset": 9939
    },
    "end": {
      "line": 254,
      "col": 39,
      "offset": 9969
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 254,
      "vulnerability_column": 9,
      "vulnerable_code": "        return cborObj.EncodeToBytes()",
      "before_lines": [
        "                is Map<*, *> -> {",
        "                    val cborMap = CBORObject.NewMap()",
        "                    obj.forEach {",
        "                            (key, value) ->",
        "                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
        "                    }",
        "                    cborMap",
        "                }",
        "                else -> toCBORObject(obj)",
        "            }"
      ],
      "after_lines": [
        "    }",
        "",
        "    private fun toCBORObject(obj: Any): CBORObject {",
        "        return when (obj) {",
        "            is String -> CBORObject.FromObject(obj)",
        "            is Int -> CBORObject.FromObject(obj)",
        "            is kotlin.ByteArray -> CBORObject.FromObject(obj)",
        "            is com.yubico.webauthn.data.ByteArray -> CBORObject.FromObject(obj.bytes)",
        "            is Map<*, *> -> {",
        "                val cborMap = CBORObject.NewMap()"
      ],
      "function_name": "cborEncode",
      "function_context": "    fun cborEncode(obj: Any): kotlin.ByteArray {\n        val cborObj =\n            when (obj) {\n                is Map<*, *> -> {\n                    val cborMap = CBORObject.NewMap()\n                    obj.forEach {\n                            (key, value) ->\n                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)\n                    }\n                    cborMap\n                }\n                else -> toCBORObject(obj)\n            }\n        return cborObj.EncodeToBytes()\n    }",
      "function_start_line": 241,
      "function_end_line": 255,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return cborObj.EncodeToBytes()",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return cborObj.EncodeToBytes()",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return cborObj.EncodeToBytes()",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return cborObj.EncodeToBytes()",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return cborObj.EncodeToBytes()",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-credential-validation-bypass",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 258,
      "col": 9,
      "offset": 10038
    },
    "end": {
      "line": 268,
      "col": 47,
      "offset": 10572
    },
    "message": "WebAuthn credential validation should not be bypassed or weakened.\nThis can lead to authentication bypass vulnerabilities.\n",
    "severity": "ERROR",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 258,
      "vulnerability_column": 9,
      "vulnerable_code": "        return when (obj) {",
      "before_lines": [
        "                        cborMap[toCBORObject(key!!)] = toCBORObject(value!!)",
        "                    }",
        "                    cborMap",
        "                }",
        "                else -> toCBORObject(obj)",
        "            }",
        "        return cborObj.EncodeToBytes()",
        "    }",
        "",
        "    private fun toCBORObject(obj: Any): CBORObject {"
      ],
      "after_lines": [
        "            is String -> CBORObject.FromObject(obj)",
        "            is Int -> CBORObject.FromObject(obj)",
        "            is kotlin.ByteArray -> CBORObject.FromObject(obj)",
        "            is com.yubico.webauthn.data.ByteArray -> CBORObject.FromObject(obj.bytes)",
        "            is Map<*, *> -> {",
        "                val cborMap = CBORObject.NewMap()",
        "                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
        "                cborMap",
        "            }",
        "            else -> CBORObject.FromObject(obj)"
      ],
      "function_name": "toCBORObject",
      "function_context": "    private fun toCBORObject(obj: Any): CBORObject {\n        return when (obj) {\n            is String -> CBORObject.FromObject(obj)\n            is Int -> CBORObject.FromObject(obj)\n            is kotlin.ByteArray -> CBORObject.FromObject(obj)\n            is com.yubico.webauthn.data.ByteArray -> CBORObject.FromObject(obj.bytes)\n            is Map<*, *> -> {\n                val cborMap = CBORObject.NewMap()\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }\n                cborMap\n            }\n            else -> CBORObject.FromObject(obj)\n        }\n    }",
      "function_start_line": 257,
      "function_end_line": 270,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n        return when (obj) {",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n        return when (obj) {",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n        return when (obj) {",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n        return when (obj) {",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n        return when (obj) {",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-285: Improper Authorization",
    "owasp": "A07:2021 \u2013 Identification and Authentication Failures",
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "semgrep",
    "id": "semgrep-rules.webauthn-challenge-storage-without-expiry",
    "file_path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "path": "webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
    "start": {
      "line": 265,
      "col": 47,
      "offset": 10433
    },
    "end": {
      "line": 265,
      "col": 99,
      "offset": 10485
    },
    "message": "WebAuthn challenges stored without expiration can lead to replay attacks.\nImplement proper challenge expiration and cleanup.\n",
    "severity": "WARNING",
    "code_context": {
      "file_path": "/Users/vinayakmenon/mpo-api-authn-server/webauthn-test-lib/src/main/kotlin/com/vmenon/webauthn/testlib/WebAuthnTestAuthenticator.kt",
      "language": "kotlin",
      "file_extension": ".kt",
      "vulnerability_line": 265,
      "vulnerability_column": 47,
      "vulnerable_code": "                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
      "before_lines": [
        "    }",
        "",
        "    private fun toCBORObject(obj: Any): CBORObject {",
        "        return when (obj) {",
        "            is String -> CBORObject.FromObject(obj)",
        "            is Int -> CBORObject.FromObject(obj)",
        "            is kotlin.ByteArray -> CBORObject.FromObject(obj)",
        "            is com.yubico.webauthn.data.ByteArray -> CBORObject.FromObject(obj.bytes)",
        "            is Map<*, *> -> {",
        "                val cborMap = CBORObject.NewMap()"
      ],
      "after_lines": [
        "                cborMap",
        "            }",
        "            else -> CBORObject.FromObject(obj)",
        "        }",
        "    }",
        "}"
      ],
      "function_name": "toCBORObject",
      "function_context": "    private fun toCBORObject(obj: Any): CBORObject {\n        return when (obj) {\n            is String -> CBORObject.FromObject(obj)\n            is Int -> CBORObject.FromObject(obj)\n            is kotlin.ByteArray -> CBORObject.FromObject(obj)\n            is com.yubico.webauthn.data.ByteArray -> CBORObject.FromObject(obj.bytes)\n            is Map<*, *> -> {\n                val cborMap = CBORObject.NewMap()\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }\n                cborMap\n            }\n            else -> CBORObject.FromObject(obj)\n        }\n    }",
      "function_start_line": 257,
      "function_end_line": 270,
      "class_name": null,
      "class_context": null,
      "class_start_line": null,
      "extraction_type": "code",
      "extraction_success": true
    },
    "fix": {
      "confidence": 0.7,
      "description": "Add proper authorization checks before sensitive operations",
      "fixed_code": "// TODO: Implement access control implementation\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
      "explanation": "Verify user permissions before allowing access to sensitive functionality.",
      "alternatives": [
        {
          "description": "Apply framework security security measures",
          "fixed_code": "// TODO: Implement framework security fix\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
          "explanation": "Implement security fixes using framework security approach."
        },
        {
          "description": "Apply principle of least privilege security measures",
          "fixed_code": "// TODO: Implement principle of least privilege fix\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
          "explanation": "Implement security fixes using principle of least privilege approach."
        },
        {
          "description": "Use in-memory data structures for secure temporary storage",
          "fixed_code": "// TODO: Implement in-memory security solution\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
          "explanation": "Leverage secure in-memory storage to avoid persistence vulnerabilities."
        },
        {
          "description": "Implement secure caching with proper expiration and validation",
          "fixed_code": "// TODO: Implement secure caching strategy\n                obj.forEach { (key, value) -> cborMap[toCBORObject(key!!)] = toCBORObject(value!!) }",
          "explanation": "Use secure caching mechanisms to prevent cache-based attacks."
        }
      ]
    },
    "cwe": "CWE-613: Insufficient Session Expiration",
    "owasp": null,
    "confidence": null,
    "likelihood": null,
    "impact": null,
    "technology": [
      "webauthn"
    ],
    "references": null,
    "tool_name": "Semgrep",
    "tool_version": "1.135.0",
    "security_category": "code_vulnerability",
    "category_confidence": 0.7,
    "fix_complexity": "high"
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-h46c-h94j-95f3",
    "summary": "jackson-core can throw a StackoverflowError when processing deeply nested data",
    "details": "### Impact\nWith older versions  of jackson-core, if you parse an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large.\n\n### Patches\njackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. Change is in https://github.com/FasterXML/jackson-core/pull/943. jackson-core will throw a StreamConstraintsException if the limit is reached.\njackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs.\n\n### Workarounds\nUsers should avoid parsing input files from untrusted sources.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
    "package_name": "com.fasterxml.jackson.core:jackson-core",
    "package_version": "2.14.0-rc2",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "com.fasterxml.jackson.core:jackson-core",
          "purl": "pkg:maven/com.fasterxml.jackson.core/jackson-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "2.15.0"
              }
            ]
          }
        ],
        "versions": [
          "2.0.0",
          "2.0.0-RC1",
          "2.0.0-RC2",
          "2.0.0-RC3",
          "2.0.1",
          "2.0.2",
          "2.0.4",
          "2.0.5",
          "2.0.6",
          "2.1.0",
          "2.1.1",
          "2.1.2",
          "2.1.3",
          "2.1.4",
          "2.1.5",
          "2.10.0",
          "2.10.0.pr1",
          "2.10.0.pr2",
          "2.10.0.pr3",
          "2.10.1",
          "2.10.2",
          "2.10.3",
          "2.10.4",
          "2.10.5",
          "2.11.0",
          "2.11.0.rc1",
          "2.11.1",
          "2.11.2",
          "2.11.3",
          "2.11.4",
          "2.12.0",
          "2.12.0-rc1",
          "2.12.0-rc2",
          "2.12.1",
          "2.12.2",
          "2.12.3",
          "2.12.4",
          "2.12.5",
          "2.12.6",
          "2.12.7",
          "2.13.0",
          "2.13.0-rc1",
          "2.13.0-rc2",
          "2.13.1",
          "2.13.2",
          "2.13.3",
          "2.13.4",
          "2.13.5",
          "2.14.0",
          "2.14.0-rc1",
          "2.14.0-rc2",
          "2.14.0-rc3",
          "2.14.1",
          "2.14.2",
          "2.14.3",
          "2.15.0-rc1",
          "2.15.0-rc2",
          "2.15.0-rc3",
          "2.2.0",
          "2.2.0-rc1",
          "2.2.1",
          "2.2.2",
          "2.2.3",
          "2.2.4",
          "2.3.0",
          "2.3.0-rc1",
          "2.3.1",
          "2.3.2",
          "2.3.3",
          "2.3.4",
          "2.3.5",
          "2.4.0",
          "2.4.0-rc1",
          "2.4.0-rc2",
          "2.4.0-rc3",
          "2.4.1",
          "2.4.1.1",
          "2.4.2",
          "2.4.3",
          "2.4.4",
          "2.4.5",
          "2.4.6",
          "2.5.0",
          "2.5.0-rc1",
          "2.5.1",
          "2.5.2",
          "2.5.3",
          "2.5.4",
          "2.5.5",
          "2.6.0",
          "2.6.0-rc1",
          "2.6.0-rc2",
          "2.6.0-rc3",
          "2.6.0-rc4",
          "2.6.1",
          "2.6.2",
          "2.6.3",
          "2.6.4",
          "2.6.5",
          "2.6.6",
          "2.6.7",
          "2.7.0",
          "2.7.0-rc1",
          "2.7.0-rc2",
          "2.7.0-rc3",
          "2.7.1",
          "2.7.2",
          "2.7.3",
          "2.7.4",
          "2.7.5",
          "2.7.6",
          "2.7.7",
          "2.7.8",
          "2.7.9",
          "2.8.0",
          "2.8.0.rc1",
          "2.8.0.rc2",
          "2.8.1",
          "2.8.10",
          "2.8.11",
          "2.8.2",
          "2.8.3",
          "2.8.4",
          "2.8.5",
          "2.8.6",
          "2.8.7",
          "2.8.8",
          "2.8.9",
          "2.9.0",
          "2.9.0.pr1",
          "2.9.0.pr2",
          "2.9.0.pr3",
          "2.9.0.pr4",
          "2.9.1",
          "2.9.10",
          "2.9.2",
          "2.9.3",
          "2.9.4",
          "2.9.5",
          "2.9.6",
          "2.9.7",
          "2.9.8",
          "2.9.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/06/GHSA-h46c-h94j-95f3/GHSA-h46c-h94j-95f3.json"
        }
      }
    ],
    "fixed_version": "2.15.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "com.fasterxml.jackson.core:jackson-core:2.14.0-rc2",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.fasterxml.jackson.core:jackson-core from 2.14.0-rc2 to 2.15.0",
      "fixed_code": "implementation(\"com.fasterxml.jackson.core:jackson-core:2.15.0\")",
      "explanation": "jackson-core can throw a StackoverflowError when processing deeply nested data",
      "alternatives": [],
      "package": "com.fasterxml.jackson.core:jackson-core",
      "from_version": "2.14.0-rc2",
      "to_version": "2.15.0",
      "ecosystem": "Maven",
      "available_versions": [
        "2.15.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-cm6r-892j-jv2g",
    "summary": "Google Play Services SDK leads to apps having incorrectly set mutability flag",
    "details": "Apps developed with Google Play Services SDK incorrectly had the mutability flag set to PendingIntents that were passed to the Notification service. As Google Play services SDK is so widely used, this bug affects many applications. For an application affected, this bug will let the attacker, gain the access to all non-exported providers and/or gain the access to other providers the victim has permissions. We recommend upgrading to version 18.0.2 of the Play Service SDK as well as rebuilding and redeploying apps.",
    "severity": "CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:L/A:N",
    "package_name": "com.google.android.gms:play-services-basement",
    "package_version": "18.0.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "com.google.android.gms:play-services-basement",
          "purl": "pkg:maven/com.google.android.gms/play-services-basement"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "18.0.2"
              }
            ]
          }
        ],
        "versions": [
          "10.0.0",
          "10.0.1",
          "10.2.0",
          "10.2.1",
          "10.2.4",
          "10.2.6",
          "11.0.0",
          "11.0.1",
          "11.0.2",
          "11.0.4",
          "11.2.0",
          "11.2.2",
          "11.4.0",
          "11.4.2",
          "11.6.0",
          "11.6.2",
          "11.8.0",
          "12.0.0",
          "12.0.1",
          "15.0.0",
          "15.0.1",
          "16.0.1",
          "16.1.0",
          "16.2.0",
          "17.0.0",
          "17.1.0",
          "17.1.1",
          "17.2.0",
          "17.2.1",
          "17.3.0",
          "17.4.0",
          "17.5.0",
          "17.6.0",
          "18.0.0",
          "18.0.1",
          "8.1.0",
          "8.3.0",
          "8.4.0",
          "9.0.0",
          "9.0.1",
          "9.0.2",
          "9.2.0",
          "9.2.1",
          "9.4.0",
          "9.6.0",
          "9.6.1",
          "9.8.0"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2022/08/GHSA-cm6r-892j-jv2g/GHSA-cm6r-892j-jv2g.json"
        }
      }
    ],
    "fixed_version": "18.0.2",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "com.google.android.gms:play-services-basement:18.0.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.android.gms:play-services-basement from 18.0.0 to 18.0.2",
      "fixed_code": "implementation(\"com.google.android.gms:play-services-basement:18.0.2\")",
      "explanation": "Google Play Services SDK leads to apps having incorrectly set mutability flag",
      "alternatives": [],
      "package": "com.google.android.gms:play-services-basement",
      "from_version": "18.0.0",
      "to_version": "18.0.2",
      "ecosystem": "Maven",
      "available_versions": [
        "18.0.2"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-j288-q9x7-2f5v",
    "summary": "Apache Commons Lang is vulnerable to Uncontrolled Recursion when processing long inputs",
    "details": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with\u00a0commons-lang:commons-lang\u00a02.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before\u00a03.18.0.\n\nThe methods ClassUtils.getClass(...) can throw\u00a0StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a StackOverflowError could\u00a0cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "package_name": "org.apache.commons:commons-lang3",
    "package_version": "3.17.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.apache.commons:commons-lang3",
          "purl": "pkg:maven/org.apache.commons/commons-lang3"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "3.0"
              },
              {
                "fixed": "3.18.0"
              }
            ]
          }
        ],
        "versions": [
          "3.0",
          "3.0.1",
          "3.1",
          "3.10",
          "3.11",
          "3.12.0",
          "3.13.0",
          "3.14.0",
          "3.15.0",
          "3.16.0",
          "3.17.0",
          "3.2",
          "3.2.1",
          "3.3",
          "3.3.1",
          "3.3.2",
          "3.4",
          "3.5",
          "3.6",
          "3.7",
          "3.8",
          "3.8.1",
          "3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/07/GHSA-j288-q9x7-2f5v/GHSA-j288-q9x7-2f5v.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "commons-lang:commons-lang",
          "purl": "pkg:maven/commons-lang/commons-lang"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0"
              },
              {
                "last_affected": "2.6"
              }
            ]
          }
        ],
        "versions": [
          "2.0",
          "2.1",
          "2.2",
          "2.3",
          "2.4",
          "2.5",
          "2.6"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/07/GHSA-j288-q9x7-2f5v/GHSA-j288-q9x7-2f5v.json"
        }
      }
    ],
    "fixed_version": "3.18.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/android-test-client/app/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.apache.commons:commons-lang3:3.17.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-lang3 from 3.17.0 to 3.18.0",
      "fixed_code": "implementation(\"org.apache.commons:commons-lang3:3.18.0\")",
      "explanation": "Apache Commons Lang is vulnerable to Uncontrolled Recursion when processing long inputs",
      "alternatives": [],
      "package": "org.apache.commons:commons-lang3",
      "from_version": "3.17.0",
      "to_version": "3.18.0",
      "ecosystem": "Maven",
      "available_versions": [
        "3.18.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-classic",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-classic:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-classic",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-6v67-2wr5-gvf4",
    "summary": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
    "details": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:N/VA:L/SC:H/SI:H/SA:H/V:D/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-pr98-23f8-jwxv",
    "summary": "QOS.CH logback-core Expression Language Injection vulnerability",
    "details": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:H/VA:L/SC:L/SI:H/SA:L/RE:L/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Expression Language Injection vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-6v67-2wr5-gvf4",
    "summary": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
    "details": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:N/VA:L/SC:H/SI:H/SA:H/V:D/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.4.14",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.4.14",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-pr98-23f8-jwxv",
    "summary": "QOS.CH logback-core Expression Language Injection vulnerability",
    "details": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:H/VA:L/SC:L/SI:H/SA:L/RE:L/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.4.14",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.4.14",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Expression Language Injection vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-5mg8-w23w-74h3",
    "summary": "Information Disclosure in Guava",
    "details": "A temp directory creation vulnerability exists in Guava prior to version 32.0.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. Maintainers recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method.\n",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N",
    "package_name": "com.google.guava:guava",
    "package_version": "31.1-jre",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "com.google.guava:guava",
          "purl": "pkg:maven/com.google.guava/guava"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "32.0.0-android"
              }
            ]
          }
        ],
        "versions": [
          "10.0",
          "10.0-rc1",
          "10.0-rc2",
          "10.0-rc3",
          "10.0.1",
          "11.0",
          "11.0-rc1",
          "11.0.1",
          "11.0.2",
          "12.0",
          "12.0-rc1",
          "12.0-rc2",
          "12.0.1",
          "13.0",
          "13.0-rc1",
          "13.0-rc2",
          "13.0.1",
          "14.0",
          "14.0-rc1",
          "14.0-rc2",
          "14.0-rc3",
          "14.0.1",
          "15.0",
          "15.0-rc1",
          "16.0",
          "16.0-rc1",
          "16.0.1",
          "17.0",
          "17.0-rc1",
          "17.0-rc2",
          "18.0",
          "18.0-rc1",
          "18.0-rc2",
          "19.0",
          "19.0-rc1",
          "19.0-rc2",
          "19.0-rc3",
          "20.0",
          "20.0-rc1",
          "21.0",
          "21.0-rc1",
          "21.0-rc2",
          "22.0",
          "22.0-android",
          "22.0-rc1",
          "22.0-rc1-android",
          "23.0",
          "23.0-android",
          "23.0-rc1",
          "23.0-rc1-android",
          "23.1-android",
          "23.1-jre",
          "23.2-android",
          "23.2-jre",
          "23.3-android",
          "23.3-jre",
          "23.4-android",
          "23.4-jre",
          "23.5-android",
          "23.5-jre",
          "23.6-android",
          "23.6-jre",
          "23.6.1-android",
          "23.6.1-jre",
          "24.0-android",
          "24.0-jre",
          "24.1-android",
          "24.1-jre",
          "24.1.1-android",
          "24.1.1-jre",
          "25.0-android",
          "25.0-jre",
          "25.1-android",
          "25.1-jre",
          "26.0-android",
          "26.0-jre",
          "27.0-android",
          "27.0-jre",
          "27.0.1-android",
          "27.0.1-jre",
          "27.1-android",
          "27.1-jre",
          "28.0-android",
          "28.0-jre",
          "28.1-android",
          "28.1-jre",
          "28.2-android",
          "28.2-jre",
          "29.0-android",
          "29.0-jre",
          "30.0-android",
          "30.0-jre",
          "30.1-android",
          "30.1-jre",
          "30.1.1-android",
          "30.1.1-jre",
          "31.0-android",
          "31.0-jre",
          "31.0.1-android",
          "31.0.1-jre",
          "31.1-android",
          "31.1-jre",
          "r03",
          "r05",
          "r06",
          "r07",
          "r08",
          "r09"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2021/03/GHSA-5mg8-w23w-74h3/GHSA-5mg8-w23w-74h3.json"
        }
      }
    ],
    "fixed_version": "32.0.0-android",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "com.google.guava:guava:31.1-jre",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "Information Disclosure in Guava",
      "alternatives": [],
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "Maven",
      "available_versions": [
        "32.0.0-android"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-7g45-4rm6-3mm3",
    "summary": "Guava vulnerable to insecure use of temporary directory",
    "details": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
    "package_name": "com.google.guava:guava",
    "package_version": "31.1-jre",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "com.google.guava:guava",
          "purl": "pkg:maven/com.google.guava/guava"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.0"
              },
              {
                "fixed": "32.0.0-android"
              }
            ]
          }
        ],
        "versions": [
          "10.0",
          "10.0-rc1",
          "10.0-rc2",
          "10.0-rc3",
          "10.0.1",
          "11.0",
          "11.0-rc1",
          "11.0.1",
          "11.0.2",
          "12.0",
          "12.0-rc1",
          "12.0-rc2",
          "12.0.1",
          "13.0",
          "13.0-rc1",
          "13.0-rc2",
          "13.0.1",
          "14.0",
          "14.0-rc1",
          "14.0-rc2",
          "14.0-rc3",
          "14.0.1",
          "15.0",
          "15.0-rc1",
          "16.0",
          "16.0-rc1",
          "16.0.1",
          "17.0",
          "17.0-rc1",
          "17.0-rc2",
          "18.0",
          "18.0-rc1",
          "18.0-rc2",
          "19.0",
          "19.0-rc1",
          "19.0-rc2",
          "19.0-rc3",
          "20.0",
          "20.0-rc1",
          "21.0",
          "21.0-rc1",
          "21.0-rc2",
          "22.0",
          "22.0-android",
          "22.0-rc1",
          "22.0-rc1-android",
          "23.0",
          "23.0-android",
          "23.0-rc1",
          "23.0-rc1-android",
          "23.1-android",
          "23.1-jre",
          "23.2-android",
          "23.2-jre",
          "23.3-android",
          "23.3-jre",
          "23.4-android",
          "23.4-jre",
          "23.5-android",
          "23.5-jre",
          "23.6-android",
          "23.6-jre",
          "23.6.1-android",
          "23.6.1-jre",
          "24.0-android",
          "24.0-jre",
          "24.1-android",
          "24.1-jre",
          "24.1.1-android",
          "24.1.1-jre",
          "25.0-android",
          "25.0-jre",
          "25.1-android",
          "25.1-jre",
          "26.0-android",
          "26.0-jre",
          "27.0-android",
          "27.0-jre",
          "27.0.1-android",
          "27.0.1-jre",
          "27.1-android",
          "27.1-jre",
          "28.0-android",
          "28.0-jre",
          "28.1-android",
          "28.1-jre",
          "28.2-android",
          "28.2-jre",
          "29.0-android",
          "29.0-jre",
          "30.0-android",
          "30.0-jre",
          "30.1-android",
          "30.1-jre",
          "30.1.1-android",
          "30.1.1-jre",
          "31.0-android",
          "31.0-jre",
          "31.0.1-android",
          "31.0.1-jre",
          "31.1-android",
          "31.1-jre"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/06/GHSA-7g45-4rm6-3mm3/GHSA-7g45-4rm6-3mm3.json"
        }
      }
    ],
    "fixed_version": "32.0.0-android",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "com.google.guava:guava:31.1-jre",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade com.google.guava:guava from 31.1-jre to 32.0.0-android",
      "fixed_code": "implementation(\"com.google.guava:guava:32.0.0-android\")",
      "explanation": "Guava vulnerable to insecure use of temporary directory",
      "alternatives": [],
      "package": "com.google.guava:guava",
      "from_version": "31.1-jre",
      "to_version": "32.0.0-android",
      "ecosystem": "Maven",
      "available_versions": [
        "32.0.0-android"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-78wr-2p64-hpwj",
    "summary": "Apache Commons IO: Possible denial of service attack on untrusted input to XmlStreamReader",
    "details": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe `org.apache.commons.io.input.XmlStreamReader` class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "commons-io:commons-io",
    "package_version": "2.11.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "commons-io:commons-io",
          "purl": "pkg:maven/commons-io/commons-io"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0"
              },
              {
                "fixed": "2.14.0"
              }
            ]
          }
        ],
        "versions": [
          "2.0",
          "2.0.1",
          "2.1",
          "2.10.0",
          "2.11.0",
          "2.12.0",
          "2.13.0",
          "2.2",
          "2.3",
          "2.4",
          "2.5",
          "2.6",
          "2.7",
          "2.8.0",
          "2.9.0"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-78wr-2p64-hpwj/GHSA-78wr-2p64-hpwj.json"
        }
      }
    ],
    "fixed_version": "2.14.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "commons-io:commons-io:2.11.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade commons-io:commons-io from 2.11.0 to 2.14.0",
      "fixed_code": "implementation(\"commons-io:commons-io:2.14.0\")",
      "explanation": "Apache Commons IO: Possible denial of service attack on untrusted input to XmlStreamReader",
      "alternatives": [],
      "package": "commons-io:commons-io",
      "from_version": "2.11.0",
      "to_version": "2.14.0",
      "ecosystem": "Maven",
      "available_versions": [
        "2.14.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-8qv4-773j-c979",
    "summary": "JetBrains Ktor information disclosure",
    "details": "Improper caching in JetBrains Ktor before 3.0.0 in the `HttpCache` Plugin could lead to response information disclosure.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "package_name": "io.ktor:ktor-client-core-jvm",
    "package_version": "2.3.7",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.ktor:ktor-client-core-jvm",
          "purl": "pkg:maven/io.ktor/ktor-client-core-jvm"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "2.3.13"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.0-rc",
          "1.0.1",
          "1.1.0",
          "1.1.1",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.2.0",
          "1.2.0-rc",
          "1.2.0-rc2",
          "1.2.1",
          "1.2.2",
          "1.2.3",
          "1.2.3-rc",
          "1.2.4",
          "1.2.5",
          "1.2.6",
          "1.3.0",
          "1.3.0-rc",
          "1.3.0-rc2",
          "1.3.1",
          "1.3.2-1.4.0-rc",
          "1.4.0",
          "1.4.1",
          "1.4.2",
          "1.4.3",
          "1.5.0",
          "1.5.1",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.6.0",
          "1.6.1",
          "1.6.2",
          "1.6.3",
          "1.6.4",
          "1.6.5",
          "1.6.6",
          "1.6.7",
          "1.6.8",
          "2.0.0",
          "2.0.0-beta-1",
          "2.0.0-rc-1",
          "2.0.1",
          "2.0.2",
          "2.0.3",
          "2.1.0",
          "2.1.1",
          "2.1.2",
          "2.1.3",
          "2.2.0",
          "2.2.1",
          "2.2.2",
          "2.2.3",
          "2.2.4",
          "2.3.0",
          "2.3.1",
          "2.3.10",
          "2.3.11",
          "2.3.12",
          "2.3.2",
          "2.3.3",
          "2.3.4",
          "2.3.5",
          "2.3.6",
          "2.3.7",
          "2.3.8",
          "2.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-8qv4-773j-c979/GHSA-8qv4-773j-c979.json"
        }
      }
    ],
    "fixed_version": "2.3.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.ktor:ktor-client-core-jvm:2.3.7",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.ktor:ktor-client-core-jvm from 2.3.7 to 2.3.13",
      "fixed_code": "implementation(\"io.ktor:ktor-client-core-jvm:2.3.13\")",
      "explanation": "JetBrains Ktor information disclosure",
      "alternatives": [],
      "package": "io.ktor:ktor-client-core-jvm",
      "from_version": "2.3.7",
      "to_version": "2.3.13",
      "ecosystem": "Maven",
      "available_versions": [
        "2.3.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-8qv4-773j-c979",
    "summary": "JetBrains Ktor information disclosure",
    "details": "Improper caching in JetBrains Ktor before 3.0.0 in the `HttpCache` Plugin could lead to response information disclosure.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "package_name": "io.ktor:ktor-client-core-jvm",
    "package_version": "2.3.8",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.ktor:ktor-client-core-jvm",
          "purl": "pkg:maven/io.ktor/ktor-client-core-jvm"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "2.3.13"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.0-rc",
          "1.0.1",
          "1.1.0",
          "1.1.1",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.2.0",
          "1.2.0-rc",
          "1.2.0-rc2",
          "1.2.1",
          "1.2.2",
          "1.2.3",
          "1.2.3-rc",
          "1.2.4",
          "1.2.5",
          "1.2.6",
          "1.3.0",
          "1.3.0-rc",
          "1.3.0-rc2",
          "1.3.1",
          "1.3.2-1.4.0-rc",
          "1.4.0",
          "1.4.1",
          "1.4.2",
          "1.4.3",
          "1.5.0",
          "1.5.1",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.6.0",
          "1.6.1",
          "1.6.2",
          "1.6.3",
          "1.6.4",
          "1.6.5",
          "1.6.6",
          "1.6.7",
          "1.6.8",
          "2.0.0",
          "2.0.0-beta-1",
          "2.0.0-rc-1",
          "2.0.1",
          "2.0.2",
          "2.0.3",
          "2.1.0",
          "2.1.1",
          "2.1.2",
          "2.1.3",
          "2.2.0",
          "2.2.1",
          "2.2.2",
          "2.2.3",
          "2.2.4",
          "2.3.0",
          "2.3.1",
          "2.3.10",
          "2.3.11",
          "2.3.12",
          "2.3.2",
          "2.3.3",
          "2.3.4",
          "2.3.5",
          "2.3.6",
          "2.3.7",
          "2.3.8",
          "2.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-8qv4-773j-c979/GHSA-8qv4-773j-c979.json"
        }
      }
    ],
    "fixed_version": "2.3.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.ktor:ktor-client-core-jvm:2.3.8",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.ktor:ktor-client-core-jvm from 2.3.8 to 2.3.13",
      "fixed_code": "implementation(\"io.ktor:ktor-client-core-jvm:2.3.13\")",
      "explanation": "JetBrains Ktor information disclosure",
      "alternatives": [],
      "package": "io.ktor:ktor-client-core-jvm",
      "from_version": "2.3.8",
      "to_version": "2.3.13",
      "ecosystem": "Maven",
      "available_versions": [
        "2.3.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-3p8m-j85q-pgmj",
    "summary": "Netty's decoders vulnerable to DoS via zip bomb style attack",
    "details": "### Summary\n\nWith specially crafted input, `BrotliDecoder` and some other decompressing decoders will allocate a large number of reachable byte buffers, which can lead to denial of service.\n\n### Details\n\n`BrotliDecoder.decompress` has no limit in how often it calls `pull`, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is basically a zip bomb.\n\nTested on 4.1.118, but there were no changes to the decoder since.\n\n### PoC\n\nRun this test case with `-Xmx1G`:\n\n```java\nimport io.netty.buffer.Unpooled;\nimport io.netty.channel.embedded.EmbeddedChannel;\n\nimport java.util.Base64;\n\npublic class T {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(new BrotliDecoder());\n        channel.writeInbound(Unpooled.wrappedBuffer(Base64.getDecoder().decode(\"aPpxD1tETigSAGj6cQ8vRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROMBIAEgIaHwBETlQQVFcXlgA=\")));\n    }\n}\n```\n\nError:\n\n```\nException in thread \"main\" java.lang.OutOfMemoryError: Cannot reserve 4194304 bytes of direct buffer memory (allocated: 1069580289, limit: 1073741824)\n\tat java.base/java.nio.Bits.reserveMemory(Bits.java:178)\n\tat java.base/java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:121)\n\tat java.base/java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:332)\n\tat io.netty.buffer.PoolArena$DirectArena.allocateDirect(PoolArena.java:718)\n\tat io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:693)\n\tat io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:213)\n\tat io.netty.buffer.PoolArena.tcacheAllocateNormal(PoolArena.java:195)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:127)\n\tat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:403)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)\n\tat io.netty.handler.codec.compression.BrotliDecoder.pull(BrotliDecoder.java:70)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decompress(BrotliDecoder.java:101)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:137)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)\n\tat io.netty.channel.embedded.EmbeddedChannel.writeInbound(EmbeddedChannel.java:348)\n\tat io.netty.handler.codec.compression.T.main(T.java:11)\n```\n\n### Impact\n\nDoS for anyone using `BrotliDecoder` on untrusted input.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N",
    "package_name": "io.netty:netty-codec",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-compression",
          "purl": "pkg:maven/io.netty/netty-codec-compression"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.5.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final",
          "4.2.4.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec",
          "purl": "pkg:maven/io.netty/netty-codec"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.125.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.124.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
        }
      }
    ],
    "fixed_version": "4.2.5.Final, 4.1.125.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.101.Final to 4.2.5.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.2.5.Final\")",
      "explanation": "Netty's decoders vulnerable to DoS via zip bomb style attack",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec from 4.1.101.Final to 4.1.125.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.125.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec",
      "from_version": "4.1.101.Final",
      "to_version": "4.2.5.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.5.Final",
        "4.1.125.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-5jpm-x58v-624v",
    "summary": "Netty's HttpPostRequestDecoder can OOM",
    "details": "### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "package_name": "io.netty:netty-codec-http",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.108.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.11.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/03/GHSA-5jpm-x58v-624v/GHSA-5jpm-x58v-624v.json"
        }
      }
    ],
    "fixed_version": "4.1.108.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.108.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "Netty's HttpPostRequestDecoder can OOM",
      "alternatives": [],
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.108.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-fghv-69vj-qj49",
    "summary": "Netty vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "details": "## Summary\nA flaw in netty's parsing of chunk extensions in HTTP/1.1 messages with chunked encoding can lead to request smuggling issues with some reverse proxies.\n\n## Details\nWhen encountering a newline character (LF) while parsing a chunk extension, netty interprets the newline as the end of the chunk-size line regardless of whether a preceding carriage return (CR) was found. This is in violation of the HTTP 1.1 standard which specifies that the chunk extension is terminated by a CRLF sequence (see the [RFC](https://datatracker.ietf.org/doc/html/rfc9112#name-chunked-transfer-coding)).\n\nThis is by itself harmless, but consider an intermediary with a similar parsing flaw: while parsing a chunk extension, the intermediary interprets an LF without a preceding CR as simply part of the chunk extension (this is also in violation of the RFC, because whitespace characters are not allowed in chunk extensions). We can use this discrepancy to construct an HTTP request that the intermediary will interpret as one request but netty will interpret as two (all lines ending with CRLF, notice the LFs in the chunk extension):\n\n```\nPOST /one HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n48;\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n0\n\nPOST /two HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n0\n\n```\n\nThe intermediary will interpret this as a single request. Once forwarded to netty, netty will interpret it as two separate requests. This is a problem, because attackers can then the intermediary, as well as perform standard request smuggling attacks against other live users (see [this Portswigger article](https://portswigger.net/web-security/request-smuggling/exploiting)).\n\n## Impact\nThis is a request smuggling issue which can be exploited for bypassing front-end access control rules as well as corrupting the responses served to other live clients.\n\nThe impact is high, but it only affects setups that use a front-end which:\n1. Interprets LF characters (without preceding CR) in chunk extensions as part of the chunk extension.\n2. Forwards chunk extensions without normalization.\n\n## Disclosure\n\n - This vulnerability was disclosed on June 18th, 2025 here: https://w4ke.info/2025/06/18/funky-chunks.html\n\n## Discussion\nDiscussion for this vulnerability can be found here:\n - https://github.com/netty/netty/issues/15522\n - https://github.com/JLLeitschuh/unCVEed/issues/1\n\n## Credit\n\n - Credit to @JeppW for uncovering this vulnerability.\n - Credit to @JLLeitschuh at [Socket](https://socket.dev/) for coordinating the vulnerability disclosure.",
    "severity": "Unknown",
    "package_name": "io.netty:netty-codec-http",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.125.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.124.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-fghv-69vj-qj49/GHSA-fghv-69vj-qj49.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.5.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha1",
          "4.2.0.Alpha2",
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final",
          "4.2.4.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-fghv-69vj-qj49/GHSA-fghv-69vj-qj49.json"
        }
      }
    ],
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.2.5.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
      "explanation": "Netty vulnerable to request smuggling due to incorrect parsing of chunk extensions",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec-http from 4.1.101.Final to 4.1.125.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.125.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.101.Final",
      "to_version": "4.2.5.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.5.Final",
        "4.1.125.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-prj3-ccx8-p6x4",
    "summary": "Netty affected by MadeYouReset HTTP/2 DDoS vulnerability",
    "details": "Below is a technical explanation of a newly discovered vulnerability in HTTP/2, which we refer to as \u201cMadeYouReset.\u201d\n\n### MadeYouReset Vulnerability Summary\nThe MadeYouReset DDoS vulnerability is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service.\n\n### Mechanism\nThe vulnerability uses malformed HTTP/2 control frames, or malformed flow, in order to make the server reset streams created by the client (using the RST_STREAM frame). \nThe vulnerability could be triggered by several primitives, defined by the RFC of HTTP/2 (RFC 9113). The Primitives are:\n1. WINDOW_UPDATE frame with an increment of 0 or an increment that makes the window exceed 2^31 - 1. (section 6.9 + 6.9.1)\n2. HEADERS or DATA frames sent on a half-closed (remote) stream (which was closed using the END_STREAM flag). (note that for some implementations it's possible a CONTINUATION frame to trigger that as well - but it's very rare). (Section 5.1)\n3. PRIORITY frame with a length other than 5. (section 6.3)\nFrom our experience, the primitives are likely to exist in the decreasing order listed above.\nNote that based on the implementation of the library, other primitives (which are not defined by the RFC) might exist - meaning scenarios in which RST_STREAM is not supposed to be sent, but in the implementation it does. On the other hand - some RFC-defined primitives might not work, even though they are defined by the RFC (as some implementations are not fully complying with RFC). For example, some implementations we\u2019ve seen discard the PRIORITY frame - and thus does not return RST_STREAM, and some implementations send GO_AWAY when receiving a WINDOW_UPDATE frame with increment of 0.\n\nThe vulnerability takes advantage of a design flaw in the HTTP/2 protocol - While HTTP/2 has a limit on the number of concurrently active streams per connection (which is usually 100, and is set by the parameter SETTINGS_MAX_CONCURRENT_STREAMS), the number of active streams is not counted correctly - when a stream is reset, it is immediately considered not active, and thus unaccounted for in the active streams counter. \nWhile the protocol does not count those streams as active, the server\u2019s backend logic still processes and handles the requests that were canceled.\n\nThus, the attacker can exploit this vulnerability to cause the server to handle an unbounded number of concurrent streams from a client on the same connection. The exploitation is very simple: the client issues a request in a stream, and then sends the control frame that causes the server to send a RST_STREAM.\n\n### Attack Flow\nFor example, a possible attack scenario can be: \n1. Attacker opens an HTTP/2 connection to the server.\n2. Attacker sends HEADERS frame with END_STREAM flag on a new stream X.  \n3. Attacker sends WINDOW_UPDATE for stream X with flow-control window of 0.\n4. The server receives the WINDOW_UPDATE and immediately sends RST_STREAM for stream X to the client (+ decreases the active streams counter by 1).\n\nThe attacker can repeat steps 2+3 as rapidly as it is capable, since the active streams counter never exceeds 1 and the attacker does not need to wait for the response from the server.\nThis leads to resource exhaustion and distributed denial of service vulnerabilities with an impact of: CPU overload and/or memory exhaustion (implementation dependent)\n\n### Comparison to Rapid Reset\nThe vulnerability takes advantage of a design flow in the HTTP/2 protocol that was also used in the Rapid Reset vulnerability (CVE-2023-44487) which was exploited as a zero-day in the wild in August 2023 to October 2023, against multiple services and vendors.\nThe Rapid Reset vulnerability uses RST_STREAM frames sent from the client, in order to create an unbounded amount of concurrent streams - it was given a CVSS score of 7.5.\nRapid Reset was mostly mitigated by limiting the number/rate of RST_STREAM sent from the client, which does not mitigate the MadeYouReset attack - since it triggers the server to send a RST_STREAM.\n\n### Suggested Mitigations for MadeYouReset\nA quick and easy mitigation will be to limit the number/rate of RST_STREAMs sent from the server.\nIt is also possible to limit the number/rate of control frames sent by the client (e.g. WINDOW_UPDATE and PRIORITY), and treat protocol flow errors as a connection error.\n\nAs mentioned in our previous message, this is a protocol-level vulnerability that affects multiple vendors and implementations. Given its broad impact, it is the shared responsibility of all parties involved to handle the disclosure process carefully and coordinate mitigations effectively.\n\n\nIf you have any questions, we will be happy to clarify or schedule a Zoom call.\n\nGal, Anat and Yaniv.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-codec-http2",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http2",
          "purl": "pkg:maven/io.netty/netty-codec-http2"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.4.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha1",
          "4.2.0.Alpha2",
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.2.3.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-prj3-ccx8-p6x4/GHSA-prj3-ccx8-p6x4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http2",
          "purl": "pkg:maven/io.netty/netty-codec-http2"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.124.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.123.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-prj3-ccx8-p6x4/GHSA-prj3-ccx8-p6x4.json"
        }
      }
    ],
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http2:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.101.Final to 4.2.4.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "Netty affected by MadeYouReset HTTP/2 DDoS vulnerability",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec-http2 from 4.1.101.Final to 4.1.124.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.124.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.101.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.4.Final",
        "4.1.124.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-389x-839f-4rhx",
    "summary": "Denial of Service attack on windows app using Netty",
    "details": "### Summary\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n### Details\nA similar issue was previously reported in https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv\nThis issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit.\n\n\n### PoC\nThe PoC is the same as for https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv with the detail that the file should only contain null-bytes; 0x00.\nWhen the null-bytes are encountered by the `InputStreamReader`, it will issue replacement characters in its charset decoding, which will fill up the line-buffer in the `BufferedReader.readLine()`, because the replacement character is not a line-break character.\n\n### Impact\nImpact is the same as https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-common",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-common",
          "purl": "pkg:maven/io.netty/netty-common"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.118.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-389x-839f-4rhx/GHSA-389x-839f-4rhx.json"
        }
      }
    ],
    "fixed_version": "4.1.118.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-common:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.118.Final",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "Denial of Service attack on windows app using Netty",
      "alternatives": [],
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.118.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-xq3w-v528-46rv",
    "summary": "Denial of Service attack on windows app using netty",
    "details": "### Summary\n\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n\n### Details\n\nWhen the library netty is loaded in a java windows application, the library tries to identify the system environnement in which it is executed.\n\nAt this stage, Netty tries to load both `/etc/os-release` and `/usr/lib/os-release` even though it is in a Windows environment. \n\n<img width=\"364\" alt=\"1\" src=\"https://github.com/user-attachments/assets/9466b181-9394-45a3-b0e3-1dcf105def59\">\n\nIf netty finds this files, it reads them and loads them into memory.\n\nBy default :\n\n- The JVM maximum memory size is set to 1 GB,\n- A non-privileged user can create a directory at `C:\\` and create files within it.\n\n<img width=\"340\" alt=\"2\" src=\"https://github.com/user-attachments/assets/43b359a2-5871-4592-ae2b-ffc40ac76831\">\n\n<img width=\"523\" alt=\"3\" src=\"https://github.com/user-attachments/assets/ad5c6eed-451c-4513-92d5-ba0eee7715c1\">\n\nthe source code identified :\nhttps://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java\n\nDespite the implementation of the function `normalizeOs()` the source code not verify the OS before reading `C:\\etc\\os-release` and `C:\\usr\\lib\\os-release`.\n\n### PoC\n\nCreate a file larger than 1 GB of data in `C:\\etc\\os-release` or `C:\\usr\\lib\\os-release` on a Windows environnement and start your Netty application.\n\nTo observe what the application does with the file, the security analyst used \"Process Monitor\" from the \"Windows SysInternals\" suite. (https://learn.microsoft.com/en-us/sysinternals/)\n\n```\ncd C:\\etc\nfsutil file createnew os-release 3000000000\n```\n\n<img width=\"519\" alt=\"4\" src=\"https://github.com/user-attachments/assets/39df22a3-462b-4fd0-af9a-aa30077ec08f\">\n\n<img width=\"517\" alt=\"5\" src=\"https://github.com/user-attachments/assets/129dbd50-fc36-4da5-8eb1-582123fb528f\">\n\nThe source code used is the Netty website code example : [Echo \u2010 the very basic client and server](https://netty.io/4.1/xref/io/netty/example/echo/package-summary.html).\n\nThe vulnerability was tested on the 4.1.112.Final version.\n\nThe security analyst tried the same technique for `C:\\proc\\sys\\net\\core\\somaxconn` with a lot of values to impact Netty but the only things that works is the \"larger than 1 GB file\" technique. https://github.com/netty/netty/blob/c0fdb8e9f8f256990e902fcfffbbe10754d0f3dd/common/src/main/java/io/netty/util/NetUtil.java#L186\n\n### Impact\n\nBy loading the \"file larger than 1 GB\" into the memory, the Netty library exceeds the JVM memory limit and causes a crash in the java Windows application.\n\nThis behaviour occurs 100% of the time in both Server mode and Client mode if the large file exists.\n\nClient mode :\n\n<img width=\"449\" alt=\"6\" src=\"https://github.com/user-attachments/assets/f8fe1ed0-1a42-4490-b9ed-dbc9af7804be\">\n\nServer mode :\n\n<img width=\"464\" alt=\"7\" src=\"https://github.com/user-attachments/assets/b34b42bd-4fbd-4170-b93a-d29ba87b88eb\">\n\nsomaxconn :\n\n<img width=\"532\" alt=\"8\" src=\"https://github.com/user-attachments/assets/0656b3bb-32c6-4ae2-bff7-d93babba08a3\">\n\n### Severity\n\n- Attack vector : \"Local\" because the attacker needs to be on the system where the Netty application is running.\n- Attack complexity : \"Low\" because the attacker only need to create a massive file (regardless of its contents).\n- Privileges required : \"Low\" because the attacker requires a user account to exploit the vulnerability.\n- User intercation : \"None\" because the administrator don't need to accidentally click anywhere to trigger the vulnerability. Furthermore, the exploitation works with defaults windows/AD settings.\n- Scope : \"Unchanged\" because only Netty is affected by the vulnerability.\n- Confidentiality : \"None\" because no data is exposed through exploiting the vulnerability.\n- Integrity : \"None\" because the explotation of the vulnerability does not allow editing, deleting or adding data elsewhere.\n- Availability : \"High\" because the exploitation of this vulnerability crashes the entire java application.",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-common",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-common",
          "purl": "pkg:maven/io.netty/netty-common"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.115.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.114.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/11/GHSA-xq3w-v528-46rv/GHSA-xq3w-v528-46rv.json"
        }
      }
    ],
    "fixed_version": "4.1.115.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-common:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.101.Final to 4.1.115.Final",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "Denial of Service attack on windows app using netty",
      "alternatives": [],
      "package": "io.netty:netty-common",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.115.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4g8c-wm8x-jfhw",
    "summary": "SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "details": "### Impact\nWhen a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash.\n\n### Workarounds\nAs workaround its possible to either disable the usage of the native SSLEngine or changing the code from:\n\n```\nSslContext context = ...;\nSslHandler handler = context.newHandler(....);\n```\n\nto:\n\n```\nSslContext context = ...;\nSSLEngine engine = context.newEngine(....);\nSslHandler handler = new SslHandler(engine, ....);\n```",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-handler",
    "package_version": "4.1.101.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-handler",
          "purl": "pkg:maven/io.netty/netty-handler"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.1.91.Final"
              },
              {
                "fixed": "4.1.118.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.117.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-4g8c-wm8x-jfhw/GHSA-4g8c-wm8x-jfhw.json"
        }
      }
    ],
    "fixed_version": "4.1.118.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-handler:4.1.101.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.101.Final to 4.1.118.Final",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
      "alternatives": [],
      "package": "io.netty:netty-handler",
      "from_version": "4.1.101.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.118.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4265-ccf5-phj5",
    "summary": "Apache Commons Compress: OutOfMemoryError unpacking broken Pack200 file",
    "details": "Allocation of Resources Without Limits or Throttling vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.21 before 1.26.\n\nUsers are recommended to upgrade to version 1.26, which fixes the issue.",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
    "package_name": "org.apache.commons:commons-compress",
    "package_version": "1.24.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.apache.commons:commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.21"
              },
              {
                "fixed": "1.26.0"
              }
            ]
          }
        ],
        "versions": [
          "1.21",
          "1.22",
          "1.23.0",
          "1.24.0",
          "1.25.0"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/02/GHSA-4265-ccf5-phj5/GHSA-4265-ccf5-phj5.json"
        }
      }
    ],
    "fixed_version": "1.26.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.apache.commons:commons-compress:1.24.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-compress from 1.24.0 to 1.26.0",
      "fixed_code": "implementation(\"org.apache.commons:commons-compress:1.26.0\")",
      "explanation": "Apache Commons Compress: OutOfMemoryError unpacking broken Pack200 file",
      "alternatives": [],
      "package": "org.apache.commons:commons-compress",
      "from_version": "1.24.0",
      "to_version": "1.26.0",
      "ecosystem": "Maven",
      "available_versions": [
        "1.26.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4g9r-vxhx-9pgx",
    "summary": "Apache Commons Compress: Denial of service caused by an infinite loop for a corrupted DUMP file",
    "details": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
    "severity": "CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "org.apache.commons:commons-compress",
    "package_version": "1.24.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.apache.commons:commons-compress",
          "purl": "pkg:maven/org.apache.commons/commons-compress"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3"
              },
              {
                "fixed": "1.26.0"
              }
            ]
          }
        ],
        "versions": [
          "1.10",
          "1.11",
          "1.12",
          "1.13",
          "1.14",
          "1.15",
          "1.16",
          "1.16.1",
          "1.17",
          "1.18",
          "1.19",
          "1.20",
          "1.21",
          "1.22",
          "1.23.0",
          "1.24.0",
          "1.25.0",
          "1.3",
          "1.4",
          "1.4.1",
          "1.5",
          "1.6",
          "1.7",
          "1.8",
          "1.8.1",
          "1.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/02/GHSA-4g9r-vxhx-9pgx/GHSA-4g9r-vxhx-9pgx.json"
        }
      }
    ],
    "fixed_version": "1.26.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.apache.commons:commons-compress:1.24.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-compress from 1.24.0 to 1.26.0",
      "fixed_code": "implementation(\"org.apache.commons:commons-compress:1.26.0\")",
      "explanation": "Apache Commons Compress: Denial of service caused by an infinite loop for a corrupted DUMP file",
      "alternatives": [],
      "package": "org.apache.commons:commons-compress",
      "from_version": "1.24.0",
      "to_version": "1.26.0",
      "ecosystem": "Maven",
      "available_versions": [
        "1.26.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-j288-q9x7-2f5v",
    "summary": "Apache Commons Lang is vulnerable to Uncontrolled Recursion when processing long inputs",
    "details": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with\u00a0commons-lang:commons-lang\u00a02.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before\u00a03.18.0.\n\nThe methods ClassUtils.getClass(...) can throw\u00a0StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a StackOverflowError could\u00a0cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
    "package_name": "org.apache.commons:commons-lang3",
    "package_version": "3.13.0",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.apache.commons:commons-lang3",
          "purl": "pkg:maven/org.apache.commons/commons-lang3"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "3.0"
              },
              {
                "fixed": "3.18.0"
              }
            ]
          }
        ],
        "versions": [
          "3.0",
          "3.0.1",
          "3.1",
          "3.10",
          "3.11",
          "3.12.0",
          "3.13.0",
          "3.14.0",
          "3.15.0",
          "3.16.0",
          "3.17.0",
          "3.2",
          "3.2.1",
          "3.3",
          "3.3.1",
          "3.3.2",
          "3.4",
          "3.5",
          "3.6",
          "3.7",
          "3.8",
          "3.8.1",
          "3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/07/GHSA-j288-q9x7-2f5v/GHSA-j288-q9x7-2f5v.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "commons-lang:commons-lang",
          "purl": "pkg:maven/commons-lang/commons-lang"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0"
              },
              {
                "last_affected": "2.6"
              }
            ]
          }
        ],
        "versions": [
          "2.0",
          "2.1",
          "2.2",
          "2.3",
          "2.4",
          "2.5",
          "2.6"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/07/GHSA-j288-q9x7-2f5v/GHSA-j288-q9x7-2f5v.json"
        }
      }
    ],
    "fixed_version": "3.18.0",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.apache.commons:commons-lang3:3.13.0",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.apache.commons:commons-lang3 from 3.13.0 to 3.18.0",
      "fixed_code": "implementation(\"org.apache.commons:commons-lang3:3.18.0\")",
      "explanation": "Apache Commons Lang is vulnerable to Uncontrolled Recursion when processing long inputs",
      "alternatives": [],
      "package": "org.apache.commons:commons-lang3",
      "from_version": "3.13.0",
      "to_version": "3.18.0",
      "ecosystem": "Maven",
      "available_versions": [
        "3.18.0"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4cx2-fc23-5wg6",
    "summary": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
    "details": "Allocation of Resources Without Limits or Throttling vulnerability in Legion of the Bouncy Castle Inc. Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation. This vulnerability is associated with program files  https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertP... https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertPathReviewer.java ,  https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathRevi... https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathReviewer.java .\n\nThis issue affects Bouncy Castle for Java: from BC 1.44 through 1.78, from BCPKIX FIPS 1.0.0 through 1.0.7, from BCPKIX FIPS 2.0.0 through 2.0.7.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/S:P/R:U/RE:M/U:Amber",
    "package_name": "org.bouncycastle:bcpkix-jdk18on",
    "package_version": "1.78",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.47",
          "1.48",
          "1.49",
          "1.50",
          "1.51",
          "1.52",
          "1.53",
          "1.54",
          "1.55",
          "1.56",
          "1.57",
          "1.58",
          "1.59",
          "1.60",
          "1.61",
          "1.62",
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15to18",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15to18"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70",
          "1.71",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk18on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk18on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.71",
          "1.71.1",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.0.0"
              },
              {
                "fixed": "1.0.8"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.1",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0.0"
              },
              {
                "fixed": "2.0.8"
              }
            ]
          }
        ],
        "versions": [
          "2.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 2.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      }
    ],
    "fixed_version": "1.79, 1.79, 1.79, 1.0.8, 2.0.8",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-server/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.bouncycastle:bcpkix-jdk18on:1.78",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 2.0.8",
      "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:2.0.8\")",
      "explanation": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
      "alternatives": [
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.79",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.79\")",
          "explanation": "Alternative fix for projects on different release branch (1.79 branch)"
        },
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.0.8",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.0.8\")",
          "explanation": "Alternative fix for projects on different release branch (1.0.8 branch)"
        }
      ],
      "package": "org.bouncycastle:bcpkix-jdk18on",
      "from_version": "1.78",
      "to_version": "2.0.8",
      "ecosystem": "Maven",
      "available_versions": [
        "2.0.8",
        "1.79",
        "1.0.8"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-classic",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-classic:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-classic",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-6v67-2wr5-gvf4",
    "summary": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
    "details": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:N/VA:L/SC:H/SI:H/SA:H/V:D/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-pr98-23f8-jwxv",
    "summary": "QOS.CH logback-core Expression Language Injection vulnerability",
    "details": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:H/VA:L/SC:L/SI:H/SA:L/RE:L/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Expression Language Injection vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-6v67-2wr5-gvf4",
    "summary": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
    "details": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:N/VA:L/SC:H/SI:H/SA:H/V:D/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.4.14",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.4.14",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-pr98-23f8-jwxv",
    "summary": "QOS.CH logback-core Expression Language Injection vulnerability",
    "details": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:H/VA:L/SC:L/SI:H/SA:L/RE:L/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.4.14",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.4.14",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Expression Language Injection vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.4.14 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.4.14",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-8qv4-773j-c979",
    "summary": "JetBrains Ktor information disclosure",
    "details": "Improper caching in JetBrains Ktor before 3.0.0 in the `HttpCache` Plugin could lead to response information disclosure.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "package_name": "io.ktor:ktor-client-core-jvm",
    "package_version": "2.3.8",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.ktor:ktor-client-core-jvm",
          "purl": "pkg:maven/io.ktor/ktor-client-core-jvm"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "2.3.13"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.0-rc",
          "1.0.1",
          "1.1.0",
          "1.1.1",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.2.0",
          "1.2.0-rc",
          "1.2.0-rc2",
          "1.2.1",
          "1.2.2",
          "1.2.3",
          "1.2.3-rc",
          "1.2.4",
          "1.2.5",
          "1.2.6",
          "1.3.0",
          "1.3.0-rc",
          "1.3.0-rc2",
          "1.3.1",
          "1.3.2-1.4.0-rc",
          "1.4.0",
          "1.4.1",
          "1.4.2",
          "1.4.3",
          "1.5.0",
          "1.5.1",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.6.0",
          "1.6.1",
          "1.6.2",
          "1.6.3",
          "1.6.4",
          "1.6.5",
          "1.6.6",
          "1.6.7",
          "1.6.8",
          "2.0.0",
          "2.0.0-beta-1",
          "2.0.0-rc-1",
          "2.0.1",
          "2.0.2",
          "2.0.3",
          "2.1.0",
          "2.1.1",
          "2.1.2",
          "2.1.3",
          "2.2.0",
          "2.2.1",
          "2.2.2",
          "2.2.3",
          "2.2.4",
          "2.3.0",
          "2.3.1",
          "2.3.10",
          "2.3.11",
          "2.3.12",
          "2.3.2",
          "2.3.3",
          "2.3.4",
          "2.3.5",
          "2.3.6",
          "2.3.7",
          "2.3.8",
          "2.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-8qv4-773j-c979/GHSA-8qv4-773j-c979.json"
        }
      }
    ],
    "fixed_version": "2.3.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.ktor:ktor-client-core-jvm:2.3.8",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.ktor:ktor-client-core-jvm from 2.3.8 to 2.3.13",
      "fixed_code": "implementation(\"io.ktor:ktor-client-core-jvm:2.3.13\")",
      "explanation": "JetBrains Ktor information disclosure",
      "alternatives": [],
      "package": "io.ktor:ktor-client-core-jvm",
      "from_version": "2.3.8",
      "to_version": "2.3.13",
      "ecosystem": "Maven",
      "available_versions": [
        "2.3.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-3p8m-j85q-pgmj",
    "summary": "Netty's decoders vulnerable to DoS via zip bomb style attack",
    "details": "### Summary\n\nWith specially crafted input, `BrotliDecoder` and some other decompressing decoders will allocate a large number of reachable byte buffers, which can lead to denial of service.\n\n### Details\n\n`BrotliDecoder.decompress` has no limit in how often it calls `pull`, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is basically a zip bomb.\n\nTested on 4.1.118, but there were no changes to the decoder since.\n\n### PoC\n\nRun this test case with `-Xmx1G`:\n\n```java\nimport io.netty.buffer.Unpooled;\nimport io.netty.channel.embedded.EmbeddedChannel;\n\nimport java.util.Base64;\n\npublic class T {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(new BrotliDecoder());\n        channel.writeInbound(Unpooled.wrappedBuffer(Base64.getDecoder().decode(\"aPpxD1tETigSAGj6cQ8vRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROMBIAEgIaHwBETlQQVFcXlgA=\")));\n    }\n}\n```\n\nError:\n\n```\nException in thread \"main\" java.lang.OutOfMemoryError: Cannot reserve 4194304 bytes of direct buffer memory (allocated: 1069580289, limit: 1073741824)\n\tat java.base/java.nio.Bits.reserveMemory(Bits.java:178)\n\tat java.base/java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:121)\n\tat java.base/java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:332)\n\tat io.netty.buffer.PoolArena$DirectArena.allocateDirect(PoolArena.java:718)\n\tat io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:693)\n\tat io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:213)\n\tat io.netty.buffer.PoolArena.tcacheAllocateNormal(PoolArena.java:195)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:127)\n\tat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:403)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)\n\tat io.netty.handler.codec.compression.BrotliDecoder.pull(BrotliDecoder.java:70)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decompress(BrotliDecoder.java:101)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:137)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)\n\tat io.netty.channel.embedded.EmbeddedChannel.writeInbound(EmbeddedChannel.java:348)\n\tat io.netty.handler.codec.compression.T.main(T.java:11)\n```\n\n### Impact\n\nDoS for anyone using `BrotliDecoder` on untrusted input.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N",
    "package_name": "io.netty:netty-codec",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-compression",
          "purl": "pkg:maven/io.netty/netty-codec-compression"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.5.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final",
          "4.2.4.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec",
          "purl": "pkg:maven/io.netty/netty-codec"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.125.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.124.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-3p8m-j85q-pgmj/GHSA-3p8m-j85q-pgmj.json"
        }
      }
    ],
    "fixed_version": "4.2.5.Final, 4.1.125.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec from 4.1.106.Final to 4.2.5.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec:4.2.5.Final\")",
      "explanation": "Netty's decoders vulnerable to DoS via zip bomb style attack",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec from 4.1.106.Final to 4.1.125.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec:4.1.125.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.125.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec",
      "from_version": "4.1.106.Final",
      "to_version": "4.2.5.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.5.Final",
        "4.1.125.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-5jpm-x58v-624v",
    "summary": "Netty's HttpPostRequestDecoder can OOM",
    "details": "### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
    "package_name": "io.netty:netty-codec-http",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.108.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.11.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/03/GHSA-5jpm-x58v-624v/GHSA-5jpm-x58v-624v.json"
        }
      }
    ],
    "fixed_version": "4.1.108.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.108.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.108.Final\")",
      "explanation": "Netty's HttpPostRequestDecoder can OOM",
      "alternatives": [],
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.108.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.108.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-fghv-69vj-qj49",
    "summary": "Netty vulnerable to request smuggling due to incorrect parsing of chunk extensions",
    "details": "## Summary\nA flaw in netty's parsing of chunk extensions in HTTP/1.1 messages with chunked encoding can lead to request smuggling issues with some reverse proxies.\n\n## Details\nWhen encountering a newline character (LF) while parsing a chunk extension, netty interprets the newline as the end of the chunk-size line regardless of whether a preceding carriage return (CR) was found. This is in violation of the HTTP 1.1 standard which specifies that the chunk extension is terminated by a CRLF sequence (see the [RFC](https://datatracker.ietf.org/doc/html/rfc9112#name-chunked-transfer-coding)).\n\nThis is by itself harmless, but consider an intermediary with a similar parsing flaw: while parsing a chunk extension, the intermediary interprets an LF without a preceding CR as simply part of the chunk extension (this is also in violation of the RFC, because whitespace characters are not allowed in chunk extensions). We can use this discrepancy to construct an HTTP request that the intermediary will interpret as one request but netty will interpret as two (all lines ending with CRLF, notice the LFs in the chunk extension):\n\n```\nPOST /one HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n48;\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n0\n\nPOST /two HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n0\n\n```\n\nThe intermediary will interpret this as a single request. Once forwarded to netty, netty will interpret it as two separate requests. This is a problem, because attackers can then the intermediary, as well as perform standard request smuggling attacks against other live users (see [this Portswigger article](https://portswigger.net/web-security/request-smuggling/exploiting)).\n\n## Impact\nThis is a request smuggling issue which can be exploited for bypassing front-end access control rules as well as corrupting the responses served to other live clients.\n\nThe impact is high, but it only affects setups that use a front-end which:\n1. Interprets LF characters (without preceding CR) in chunk extensions as part of the chunk extension.\n2. Forwards chunk extensions without normalization.\n\n## Disclosure\n\n - This vulnerability was disclosed on June 18th, 2025 here: https://w4ke.info/2025/06/18/funky-chunks.html\n\n## Discussion\nDiscussion for this vulnerability can be found here:\n - https://github.com/netty/netty/issues/15522\n - https://github.com/JLLeitschuh/unCVEed/issues/1\n\n## Credit\n\n - Credit to @JeppW for uncovering this vulnerability.\n - Credit to @JLLeitschuh at [Socket](https://socket.dev/) for coordinating the vulnerability disclosure.",
    "severity": "Unknown",
    "package_name": "io.netty:netty-codec-http",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.125.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.124.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-fghv-69vj-qj49/GHSA-fghv-69vj-qj49.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http",
          "purl": "pkg:maven/io.netty/netty-codec-http"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.5.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha1",
          "4.2.0.Alpha2",
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final",
          "4.2.4.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/09/GHSA-fghv-69vj-qj49/GHSA-fghv-69vj-qj49.json"
        }
      }
    ],
    "fixed_version": "4.1.125.Final, 4.2.5.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.2.5.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http:4.2.5.Final\")",
      "explanation": "Netty vulnerable to request smuggling due to incorrect parsing of chunk extensions",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec-http from 4.1.106.Final to 4.1.125.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec-http:4.1.125.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.125.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec-http",
      "from_version": "4.1.106.Final",
      "to_version": "4.2.5.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.5.Final",
        "4.1.125.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-prj3-ccx8-p6x4",
    "summary": "Netty affected by MadeYouReset HTTP/2 DDoS vulnerability",
    "details": "Below is a technical explanation of a newly discovered vulnerability in HTTP/2, which we refer to as \u201cMadeYouReset.\u201d\n\n### MadeYouReset Vulnerability Summary\nThe MadeYouReset DDoS vulnerability is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service.\n\n### Mechanism\nThe vulnerability uses malformed HTTP/2 control frames, or malformed flow, in order to make the server reset streams created by the client (using the RST_STREAM frame). \nThe vulnerability could be triggered by several primitives, defined by the RFC of HTTP/2 (RFC 9113). The Primitives are:\n1. WINDOW_UPDATE frame with an increment of 0 or an increment that makes the window exceed 2^31 - 1. (section 6.9 + 6.9.1)\n2. HEADERS or DATA frames sent on a half-closed (remote) stream (which was closed using the END_STREAM flag). (note that for some implementations it's possible a CONTINUATION frame to trigger that as well - but it's very rare). (Section 5.1)\n3. PRIORITY frame with a length other than 5. (section 6.3)\nFrom our experience, the primitives are likely to exist in the decreasing order listed above.\nNote that based on the implementation of the library, other primitives (which are not defined by the RFC) might exist - meaning scenarios in which RST_STREAM is not supposed to be sent, but in the implementation it does. On the other hand - some RFC-defined primitives might not work, even though they are defined by the RFC (as some implementations are not fully complying with RFC). For example, some implementations we\u2019ve seen discard the PRIORITY frame - and thus does not return RST_STREAM, and some implementations send GO_AWAY when receiving a WINDOW_UPDATE frame with increment of 0.\n\nThe vulnerability takes advantage of a design flaw in the HTTP/2 protocol - While HTTP/2 has a limit on the number of concurrently active streams per connection (which is usually 100, and is set by the parameter SETTINGS_MAX_CONCURRENT_STREAMS), the number of active streams is not counted correctly - when a stream is reset, it is immediately considered not active, and thus unaccounted for in the active streams counter. \nWhile the protocol does not count those streams as active, the server\u2019s backend logic still processes and handles the requests that were canceled.\n\nThus, the attacker can exploit this vulnerability to cause the server to handle an unbounded number of concurrent streams from a client on the same connection. The exploitation is very simple: the client issues a request in a stream, and then sends the control frame that causes the server to send a RST_STREAM.\n\n### Attack Flow\nFor example, a possible attack scenario can be: \n1. Attacker opens an HTTP/2 connection to the server.\n2. Attacker sends HEADERS frame with END_STREAM flag on a new stream X.  \n3. Attacker sends WINDOW_UPDATE for stream X with flow-control window of 0.\n4. The server receives the WINDOW_UPDATE and immediately sends RST_STREAM for stream X to the client (+ decreases the active streams counter by 1).\n\nThe attacker can repeat steps 2+3 as rapidly as it is capable, since the active streams counter never exceeds 1 and the attacker does not need to wait for the response from the server.\nThis leads to resource exhaustion and distributed denial of service vulnerabilities with an impact of: CPU overload and/or memory exhaustion (implementation dependent)\n\n### Comparison to Rapid Reset\nThe vulnerability takes advantage of a design flow in the HTTP/2 protocol that was also used in the Rapid Reset vulnerability (CVE-2023-44487) which was exploited as a zero-day in the wild in August 2023 to October 2023, against multiple services and vendors.\nThe Rapid Reset vulnerability uses RST_STREAM frames sent from the client, in order to create an unbounded amount of concurrent streams - it was given a CVSS score of 7.5.\nRapid Reset was mostly mitigated by limiting the number/rate of RST_STREAM sent from the client, which does not mitigate the MadeYouReset attack - since it triggers the server to send a RST_STREAM.\n\n### Suggested Mitigations for MadeYouReset\nA quick and easy mitigation will be to limit the number/rate of RST_STREAMs sent from the server.\nIt is also possible to limit the number/rate of control frames sent by the client (e.g. WINDOW_UPDATE and PRIORITY), and treat protocol flow errors as a connection error.\n\nAs mentioned in our previous message, this is a protocol-level vulnerability that affects multiple vendors and implementations. Given its broad impact, it is the shared responsibility of all parties involved to handle the disclosure process carefully and coordinate mitigations effectively.\n\n\nIf you have any questions, we will be happy to clarify or schedule a Zoom call.\n\nGal, Anat and Yaniv.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-codec-http2",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http2",
          "purl": "pkg:maven/io.netty/netty-codec-http2"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.2.0.Alpha1"
              },
              {
                "fixed": "4.2.4.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.2.0.Alpha1",
          "4.2.0.Alpha2",
          "4.2.0.Alpha3",
          "4.2.0.Alpha4",
          "4.2.0.Alpha5",
          "4.2.0.Beta1",
          "4.2.0.Final",
          "4.2.0.RC1",
          "4.2.0.RC2",
          "4.2.0.RC3",
          "4.2.0.RC4",
          "4.2.1.Final",
          "4.2.2.Final",
          "4.2.3.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.2.3.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-prj3-ccx8-p6x4/GHSA-prj3-ccx8-p6x4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-codec-http2",
          "purl": "pkg:maven/io.netty/netty-codec-http2"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.124.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.118.Final",
          "4.1.119.Final",
          "4.1.12.Final",
          "4.1.120.Final",
          "4.1.121.Final",
          "4.1.122.Final",
          "4.1.123.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.123.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-prj3-ccx8-p6x4/GHSA-prj3-ccx8-p6x4.json"
        }
      }
    ],
    "fixed_version": "4.2.4.Final, 4.1.124.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-codec-http2:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-codec-http2 from 4.1.106.Final to 4.2.4.Final",
      "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.2.4.Final\")",
      "explanation": "Netty affected by MadeYouReset HTTP/2 DDoS vulnerability",
      "alternatives": [
        {
          "description": "Upgrade io.netty:netty-codec-http2 from 4.1.106.Final to 4.1.124.Final",
          "fixed_code": "implementation(\"io.netty:netty-codec-http2:4.1.124.Final\")",
          "explanation": "Alternative fix for projects on different release branch (4.1.124.Final branch)"
        }
      ],
      "package": "io.netty:netty-codec-http2",
      "from_version": "4.1.106.Final",
      "to_version": "4.2.4.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.2.4.Final",
        "4.1.124.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-389x-839f-4rhx",
    "summary": "Denial of Service attack on windows app using Netty",
    "details": "### Summary\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n### Details\nA similar issue was previously reported in https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv\nThis issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit.\n\n\n### PoC\nThe PoC is the same as for https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv with the detail that the file should only contain null-bytes; 0x00.\nWhen the null-bytes are encountered by the `InputStreamReader`, it will issue replacement characters in its charset decoding, which will fill up the line-buffer in the `BufferedReader.readLine()`, because the replacement character is not a line-break character.\n\n### Impact\nImpact is the same as https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-common",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-common",
          "purl": "pkg:maven/io.netty/netty-common"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.118.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-389x-839f-4rhx/GHSA-389x-839f-4rhx.json"
        }
      }
    ],
    "fixed_version": "4.1.118.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-common:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.118.Final",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.118.Final\")",
      "explanation": "Denial of Service attack on windows app using Netty",
      "alternatives": [],
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.118.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-xq3w-v528-46rv",
    "summary": "Denial of Service attack on windows app using netty",
    "details": "### Summary\n\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n\n### Details\n\nWhen the library netty is loaded in a java windows application, the library tries to identify the system environnement in which it is executed.\n\nAt this stage, Netty tries to load both `/etc/os-release` and `/usr/lib/os-release` even though it is in a Windows environment. \n\n<img width=\"364\" alt=\"1\" src=\"https://github.com/user-attachments/assets/9466b181-9394-45a3-b0e3-1dcf105def59\">\n\nIf netty finds this files, it reads them and loads them into memory.\n\nBy default :\n\n- The JVM maximum memory size is set to 1 GB,\n- A non-privileged user can create a directory at `C:\\` and create files within it.\n\n<img width=\"340\" alt=\"2\" src=\"https://github.com/user-attachments/assets/43b359a2-5871-4592-ae2b-ffc40ac76831\">\n\n<img width=\"523\" alt=\"3\" src=\"https://github.com/user-attachments/assets/ad5c6eed-451c-4513-92d5-ba0eee7715c1\">\n\nthe source code identified :\nhttps://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java\n\nDespite the implementation of the function `normalizeOs()` the source code not verify the OS before reading `C:\\etc\\os-release` and `C:\\usr\\lib\\os-release`.\n\n### PoC\n\nCreate a file larger than 1 GB of data in `C:\\etc\\os-release` or `C:\\usr\\lib\\os-release` on a Windows environnement and start your Netty application.\n\nTo observe what the application does with the file, the security analyst used \"Process Monitor\" from the \"Windows SysInternals\" suite. (https://learn.microsoft.com/en-us/sysinternals/)\n\n```\ncd C:\\etc\nfsutil file createnew os-release 3000000000\n```\n\n<img width=\"519\" alt=\"4\" src=\"https://github.com/user-attachments/assets/39df22a3-462b-4fd0-af9a-aa30077ec08f\">\n\n<img width=\"517\" alt=\"5\" src=\"https://github.com/user-attachments/assets/129dbd50-fc36-4da5-8eb1-582123fb528f\">\n\nThe source code used is the Netty website code example : [Echo \u2010 the very basic client and server](https://netty.io/4.1/xref/io/netty/example/echo/package-summary.html).\n\nThe vulnerability was tested on the 4.1.112.Final version.\n\nThe security analyst tried the same technique for `C:\\proc\\sys\\net\\core\\somaxconn` with a lot of values to impact Netty but the only things that works is the \"larger than 1 GB file\" technique. https://github.com/netty/netty/blob/c0fdb8e9f8f256990e902fcfffbbe10754d0f3dd/common/src/main/java/io/netty/util/NetUtil.java#L186\n\n### Impact\n\nBy loading the \"file larger than 1 GB\" into the memory, the Netty library exceeds the JVM memory limit and causes a crash in the java Windows application.\n\nThis behaviour occurs 100% of the time in both Server mode and Client mode if the large file exists.\n\nClient mode :\n\n<img width=\"449\" alt=\"6\" src=\"https://github.com/user-attachments/assets/f8fe1ed0-1a42-4490-b9ed-dbc9af7804be\">\n\nServer mode :\n\n<img width=\"464\" alt=\"7\" src=\"https://github.com/user-attachments/assets/b34b42bd-4fbd-4170-b93a-d29ba87b88eb\">\n\nsomaxconn :\n\n<img width=\"532\" alt=\"8\" src=\"https://github.com/user-attachments/assets/0656b3bb-32c6-4ae2-bff7-d93babba08a3\">\n\n### Severity\n\n- Attack vector : \"Local\" because the attacker needs to be on the system where the Netty application is running.\n- Attack complexity : \"Low\" because the attacker only need to create a massive file (regardless of its contents).\n- Privileges required : \"Low\" because the attacker requires a user account to exploit the vulnerability.\n- User intercation : \"None\" because the administrator don't need to accidentally click anywhere to trigger the vulnerability. Furthermore, the exploitation works with defaults windows/AD settings.\n- Scope : \"Unchanged\" because only Netty is affected by the vulnerability.\n- Confidentiality : \"None\" because no data is exposed through exploiting the vulnerability.\n- Integrity : \"None\" because the explotation of the vulnerability does not allow editing, deleting or adding data elsewhere.\n- Availability : \"High\" because the exploitation of this vulnerability crashes the entire java application.",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-common",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-common",
          "purl": "pkg:maven/io.netty/netty-common"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "4.1.115.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.0.0.Alpha1",
          "4.0.0.Alpha2",
          "4.0.0.Alpha3",
          "4.0.0.Alpha4",
          "4.0.0.Alpha5",
          "4.0.0.Alpha6",
          "4.0.0.Alpha7",
          "4.0.0.Alpha8",
          "4.0.0.Beta1",
          "4.0.0.Beta2",
          "4.0.0.Beta3",
          "4.0.0.CR1",
          "4.0.0.CR2",
          "4.0.0.CR3",
          "4.0.0.CR4",
          "4.0.0.CR5",
          "4.0.0.CR6",
          "4.0.0.CR7",
          "4.0.0.CR8",
          "4.0.0.CR9",
          "4.0.0.Final",
          "4.0.1.Final",
          "4.0.10.Final",
          "4.0.11.Final",
          "4.0.12.Final",
          "4.0.13.Final",
          "4.0.14.Beta1",
          "4.0.14.Final",
          "4.0.15.Final",
          "4.0.16.Final",
          "4.0.17.Final",
          "4.0.18.Final",
          "4.0.19.Final",
          "4.0.2.Final",
          "4.0.20.Final",
          "4.0.21.Final",
          "4.0.22.Final",
          "4.0.23.Final",
          "4.0.24.Final",
          "4.0.25.Final",
          "4.0.26.Final",
          "4.0.27.Final",
          "4.0.28.Final",
          "4.0.29.Final",
          "4.0.3.Final",
          "4.0.30.Final",
          "4.0.31.Final",
          "4.0.32.Final",
          "4.0.33.Final",
          "4.0.34.Final",
          "4.0.35.Final",
          "4.0.36.Final",
          "4.0.37.Final",
          "4.0.38.Final",
          "4.0.39.Final",
          "4.0.4.Final",
          "4.0.40.Final",
          "4.0.41.Final",
          "4.0.42.Final",
          "4.0.43.Final",
          "4.0.44.Final",
          "4.0.45.Final",
          "4.0.46.Final",
          "4.0.47.Final",
          "4.0.48.Final",
          "4.0.49.Final",
          "4.0.5.Final",
          "4.0.50.Final",
          "4.0.51.Final",
          "4.0.52.Final",
          "4.0.53.Final",
          "4.0.54.Final",
          "4.0.55.Final",
          "4.0.56.Final",
          "4.0.6.Final",
          "4.0.7.Final",
          "4.0.8.Final",
          "4.0.9.Final",
          "4.1.0.Beta1",
          "4.1.0.Beta2",
          "4.1.0.Beta3",
          "4.1.0.Beta4",
          "4.1.0.Beta5",
          "4.1.0.Beta6",
          "4.1.0.Beta7",
          "4.1.0.Beta8",
          "4.1.0.CR1",
          "4.1.0.CR2",
          "4.1.0.CR3",
          "4.1.0.CR4",
          "4.1.0.CR5",
          "4.1.0.CR6",
          "4.1.0.CR7",
          "4.1.0.Final",
          "4.1.1.Final",
          "4.1.10.Final",
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.11.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.12.Final",
          "4.1.13.Final",
          "4.1.14.Final",
          "4.1.15.Final",
          "4.1.16.Final",
          "4.1.17.Final",
          "4.1.18.Final",
          "4.1.19.Final",
          "4.1.2.Final",
          "4.1.20.Final",
          "4.1.21.Final",
          "4.1.22.Final",
          "4.1.23.Final",
          "4.1.24.Final",
          "4.1.25.Final",
          "4.1.26.Final",
          "4.1.27.Final",
          "4.1.28.Final",
          "4.1.29.Final",
          "4.1.3.Final",
          "4.1.30.Final",
          "4.1.31.Final",
          "4.1.32.Final",
          "4.1.33.Final",
          "4.1.34.Final",
          "4.1.35.Final",
          "4.1.36.Final",
          "4.1.37.Final",
          "4.1.38.Final",
          "4.1.39.Final",
          "4.1.4.Final",
          "4.1.40.Final",
          "4.1.41.Final",
          "4.1.42.Final",
          "4.1.43.Final",
          "4.1.44.Final",
          "4.1.45.Final",
          "4.1.46.Final",
          "4.1.47.Final",
          "4.1.48.Final",
          "4.1.49.Final",
          "4.1.5.Final",
          "4.1.50.Final",
          "4.1.51.Final",
          "4.1.52.Final",
          "4.1.53.Final",
          "4.1.54.Final",
          "4.1.55.Final",
          "4.1.56.Final",
          "4.1.57.Final",
          "4.1.58.Final",
          "4.1.59.Final",
          "4.1.6.Final",
          "4.1.60.Final",
          "4.1.61.Final",
          "4.1.62.Final",
          "4.1.63.Final",
          "4.1.64.Final",
          "4.1.65.Final",
          "4.1.66.Final",
          "4.1.67.Final",
          "4.1.68.Final",
          "4.1.69.Final",
          "4.1.7.Final",
          "4.1.70.Final",
          "4.1.71.Final",
          "4.1.72.Final",
          "4.1.73.Final",
          "4.1.74.Final",
          "4.1.75.Final",
          "4.1.76.Final",
          "4.1.77.Final",
          "4.1.78.Final",
          "4.1.79.Final",
          "4.1.8.Final",
          "4.1.80.Final",
          "4.1.81.Final",
          "4.1.82.Final",
          "4.1.83.Final",
          "4.1.84.Final",
          "4.1.85.Final",
          "4.1.86.Final",
          "4.1.87.Final",
          "4.1.88.Final",
          "4.1.89.Final",
          "4.1.9.Final",
          "4.1.90.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.114.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/11/GHSA-xq3w-v528-46rv/GHSA-xq3w-v528-46rv.json"
        }
      }
    ],
    "fixed_version": "4.1.115.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-common:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-common from 4.1.106.Final to 4.1.115.Final",
      "fixed_code": "implementation(\"io.netty:netty-common:4.1.115.Final\")",
      "explanation": "Denial of Service attack on windows app using netty",
      "alternatives": [],
      "package": "io.netty:netty-common",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.115.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.115.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4g8c-wm8x-jfhw",
    "summary": "SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
    "details": "### Impact\nWhen a special crafted packet is received via SslHandler it doesn't correctly handle validation of such a packet in all cases which can lead to a native crash.\n\n### Workarounds\nAs workaround its possible to either disable the usage of the native SSLEngine or changing the code from:\n\n```\nSslContext context = ...;\nSslHandler handler = context.newHandler(....);\n```\n\nto:\n\n```\nSslContext context = ...;\nSSLEngine engine = context.newEngine(....);\nSslHandler handler = new SslHandler(engine, ....);\n```",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "package_name": "io.netty:netty-handler",
    "package_version": "4.1.106.Final",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.netty:netty-handler",
          "purl": "pkg:maven/io.netty/netty-handler"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "4.1.91.Final"
              },
              {
                "fixed": "4.1.118.Final"
              }
            ]
          }
        ],
        "versions": [
          "4.1.100.Final",
          "4.1.101.Final",
          "4.1.102.Final",
          "4.1.103.Final",
          "4.1.104.Final",
          "4.1.105.Final",
          "4.1.106.Final",
          "4.1.107.Final",
          "4.1.108.Final",
          "4.1.109.Final",
          "4.1.110.Final",
          "4.1.111.Final",
          "4.1.112.Final",
          "4.1.113.Final",
          "4.1.114.Final",
          "4.1.115.Final",
          "4.1.116.Final",
          "4.1.117.Final",
          "4.1.91.Final",
          "4.1.92.Final",
          "4.1.93.Final",
          "4.1.94.Final",
          "4.1.95.Final",
          "4.1.96.Final",
          "4.1.97.Final",
          "4.1.98.Final",
          "4.1.99.Final"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 4.1.117.Final",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/02/GHSA-4g8c-wm8x-jfhw/GHSA-4g8c-wm8x-jfhw.json"
        }
      }
    ],
    "fixed_version": "4.1.118.Final",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.netty:netty-handler:4.1.106.Final",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.netty:netty-handler from 4.1.106.Final to 4.1.118.Final",
      "fixed_code": "implementation(\"io.netty:netty-handler:4.1.118.Final\")",
      "explanation": "SslHandler doesn't correctly validate packets which can lead to native crash when using native SSLEngine",
      "alternatives": [],
      "package": "io.netty:netty-handler",
      "from_version": "4.1.106.Final",
      "to_version": "4.1.118.Final",
      "ecosystem": "Maven",
      "available_versions": [
        "4.1.118.Final"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4cx2-fc23-5wg6",
    "summary": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
    "details": "Allocation of Resources Without Limits or Throttling vulnerability in Legion of the Bouncy Castle Inc. Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation. This vulnerability is associated with program files  https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertP... https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertPathReviewer.java ,  https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathRevi... https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathReviewer.java .\n\nThis issue affects Bouncy Castle for Java: from BC 1.44 through 1.78, from BCPKIX FIPS 1.0.0 through 1.0.7, from BCPKIX FIPS 2.0.0 through 2.0.7.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/S:P/R:U/RE:M/U:Amber",
    "package_name": "org.bouncycastle:bcpkix-jdk18on",
    "package_version": "1.78",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.47",
          "1.48",
          "1.49",
          "1.50",
          "1.51",
          "1.52",
          "1.53",
          "1.54",
          "1.55",
          "1.56",
          "1.57",
          "1.58",
          "1.59",
          "1.60",
          "1.61",
          "1.62",
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15to18",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15to18"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70",
          "1.71",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk18on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk18on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.71",
          "1.71.1",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.0.0"
              },
              {
                "fixed": "1.0.8"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.1",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0.0"
              },
              {
                "fixed": "2.0.8"
              }
            ]
          }
        ],
        "versions": [
          "2.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 2.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      }
    ],
    "fixed_version": "1.79, 1.79, 1.79, 1.0.8, 2.0.8",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-credentials-service/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.bouncycastle:bcpkix-jdk18on:1.78",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 2.0.8",
      "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:2.0.8\")",
      "explanation": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
      "alternatives": [
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.79",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.79\")",
          "explanation": "Alternative fix for projects on different release branch (1.79 branch)"
        },
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.0.8",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.0.8\")",
          "explanation": "Alternative fix for projects on different release branch (1.0.8 branch)"
        }
      ],
      "package": "org.bouncycastle:bcpkix-jdk18on",
      "from_version": "1.78",
      "to_version": "2.0.8",
      "ecosystem": "Maven",
      "available_versions": [
        "2.0.8",
        "1.79",
        "1.0.8"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-classic",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-classic:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-classic from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-classic:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-classic",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-6v67-2wr5-gvf4",
    "summary": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
    "details": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in\u00a0 XML configuration files.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:N/VA:L/SC:H/SI:H/SA:H/V:D/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-6v67-2wr5-gvf4/GHSA-6v67-2wr5-gvf4.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Server-Side Request Forgery vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-pr98-23f8-jwxv",
    "summary": "QOS.CH logback-core Expression Language Injection vulnerability",
    "details": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
    "severity": "CVSS:4.0/AV:L/AC:L/AT:P/PR:L/UI:P/VC:L/VI:H/VA:L/SC:L/SI:H/SA:L/RE:L/U:Clear",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.5.13"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.12",
          "1.4.13",
          "1.4.14",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9",
          "1.5.0",
          "1.5.1",
          "1.5.10",
          "1.5.11",
          "1.5.12",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.5.5",
          "1.5.6",
          "1.5.7",
          "1.5.8",
          "1.5.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.3.15"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.13",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9",
          "1.3.0",
          "1.3.0-alpha0",
          "1.3.0-alpha1",
          "1.3.0-alpha10",
          "1.3.0-alpha11",
          "1.3.0-alpha12",
          "1.3.0-alpha13",
          "1.3.0-alpha14",
          "1.3.0-alpha15",
          "1.3.0-alpha16",
          "1.3.0-alpha2",
          "1.3.0-alpha3",
          "1.3.0-alpha4",
          "1.3.0-alpha5",
          "1.3.0-alpha6",
          "1.3.0-alpha7",
          "1.3.0-alpha8",
          "1.3.0-alpha9",
          "1.3.0-beta0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.12",
          "1.3.13",
          "1.3.14",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/12/GHSA-pr98-23f8-jwxv/GHSA-pr98-23f8-jwxv.json"
        }
      }
    ],
    "fixed_version": "1.5.13, 1.3.15",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.5.13",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.5.13\")",
      "explanation": "QOS.CH logback-core Expression Language Injection vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.15",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.15\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.15 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.5.13",
      "ecosystem": "Maven",
      "available_versions": [
        "1.5.13",
        "1.3.15"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-vmq6-5m68-f53m",
    "summary": "logback serialization vulnerability",
    "details": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
    "severity": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:N/A:H",
    "package_name": "ch.qos.logback:logback-core",
    "package_version": "1.3.5",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.3.0"
              },
              {
                "fixed": "1.3.12"
              }
            ]
          }
        ],
        "versions": [
          "1.3.0",
          "1.3.1",
          "1.3.10",
          "1.3.11",
          "1.3.2",
          "1.3.3",
          "1.3.4",
          "1.3.5",
          "1.3.6",
          "1.3.7",
          "1.3.8",
          "1.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.4.0"
              },
              {
                "fixed": "1.4.12"
              }
            ]
          }
        ],
        "versions": [
          "1.4.0",
          "1.4.1",
          "1.4.10",
          "1.4.11",
          "1.4.2",
          "1.4.3",
          "1.4.4",
          "1.4.5",
          "1.4.6",
          "1.4.7",
          "1.4.8",
          "1.4.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-core",
          "purl": "pkg:maven/ch.qos.logback/logback-core"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "ch.qos.logback:logback-classic",
          "purl": "pkg:maven/ch.qos.logback/logback-classic"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "1.2.13"
              }
            ]
          }
        ],
        "versions": [
          "0.2.5",
          "0.3",
          "0.5",
          "0.6",
          "0.7",
          "0.7.1",
          "0.8",
          "0.8.1",
          "0.9",
          "0.9.1",
          "0.9.10",
          "0.9.11",
          "0.9.12",
          "0.9.13",
          "0.9.14",
          "0.9.15",
          "0.9.16",
          "0.9.17",
          "0.9.18",
          "0.9.19",
          "0.9.2",
          "0.9.20",
          "0.9.21",
          "0.9.22",
          "0.9.23",
          "0.9.24",
          "0.9.25",
          "0.9.26",
          "0.9.27",
          "0.9.28",
          "0.9.29",
          "0.9.3",
          "0.9.30",
          "0.9.4",
          "0.9.5",
          "0.9.6",
          "0.9.7",
          "0.9.8",
          "0.9.9",
          "1.0.0",
          "1.0.1",
          "1.0.10",
          "1.0.11",
          "1.0.12",
          "1.0.13",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7",
          "1.0.8",
          "1.0.9",
          "1.1.0",
          "1.1.1",
          "1.1.10",
          "1.1.11",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.1.6",
          "1.1.7",
          "1.1.8",
          "1.1.9",
          "1.2.0",
          "1.2.1",
          "1.2.10",
          "1.2.11",
          "1.2.12",
          "1.2.2",
          "1.2.3",
          "1.2.4",
          "1.2.4-groovyless",
          "1.2.5",
          "1.2.6",
          "1.2.7",
          "1.2.8",
          "1.2.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2023/11/GHSA-vmq6-5m68-f53m/GHSA-vmq6-5m68-f53m.json"
        }
      }
    ],
    "fixed_version": "1.3.12, 1.4.12, 1.3.12, 1.4.12, 1.2.13, 1.2.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "ch.qos.logback:logback-core:1.3.5",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.4.12",
      "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.4.12\")",
      "explanation": "logback serialization vulnerability",
      "alternatives": [
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.3.12",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.3.12\")",
          "explanation": "Alternative fix for projects on different release branch (1.3.12 branch)"
        },
        {
          "description": "Upgrade ch.qos.logback:logback-core from 1.3.5 to 1.2.13",
          "fixed_code": "implementation(\"ch.qos.logback:logback-core:1.2.13\")",
          "explanation": "Alternative fix for projects on different release branch (1.2.13 branch)"
        }
      ],
      "package": "ch.qos.logback:logback-core",
      "from_version": "1.3.5",
      "to_version": "1.4.12",
      "ecosystem": "Maven",
      "available_versions": [
        "1.4.12",
        "1.3.12",
        "1.2.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-8qv4-773j-c979",
    "summary": "JetBrains Ktor information disclosure",
    "details": "Improper caching in JetBrains Ktor before 3.0.0 in the `HttpCache` Plugin could lead to response information disclosure.",
    "severity": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
    "package_name": "io.ktor:ktor-client-core-jvm",
    "package_version": "2.3.8",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "io.ktor:ktor-client-core-jvm",
          "purl": "pkg:maven/io.ktor/ktor-client-core-jvm"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "0"
              },
              {
                "fixed": "2.3.13"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.0-rc",
          "1.0.1",
          "1.1.0",
          "1.1.1",
          "1.1.2",
          "1.1.3",
          "1.1.4",
          "1.1.5",
          "1.2.0",
          "1.2.0-rc",
          "1.2.0-rc2",
          "1.2.1",
          "1.2.2",
          "1.2.3",
          "1.2.3-rc",
          "1.2.4",
          "1.2.5",
          "1.2.6",
          "1.3.0",
          "1.3.0-rc",
          "1.3.0-rc2",
          "1.3.1",
          "1.3.2-1.4.0-rc",
          "1.4.0",
          "1.4.1",
          "1.4.2",
          "1.4.3",
          "1.5.0",
          "1.5.1",
          "1.5.2",
          "1.5.3",
          "1.5.4",
          "1.6.0",
          "1.6.1",
          "1.6.2",
          "1.6.3",
          "1.6.4",
          "1.6.5",
          "1.6.6",
          "1.6.7",
          "1.6.8",
          "2.0.0",
          "2.0.0-beta-1",
          "2.0.0-rc-1",
          "2.0.1",
          "2.0.2",
          "2.0.3",
          "2.1.0",
          "2.1.1",
          "2.1.2",
          "2.1.3",
          "2.2.0",
          "2.2.1",
          "2.2.2",
          "2.2.3",
          "2.2.4",
          "2.3.0",
          "2.3.1",
          "2.3.10",
          "2.3.11",
          "2.3.12",
          "2.3.2",
          "2.3.3",
          "2.3.4",
          "2.3.5",
          "2.3.6",
          "2.3.7",
          "2.3.8",
          "2.3.9"
        ],
        "database_specific": {
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/10/GHSA-8qv4-773j-c979/GHSA-8qv4-773j-c979.json"
        }
      }
    ],
    "fixed_version": "2.3.13",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "io.ktor:ktor-client-core-jvm:2.3.8",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade io.ktor:ktor-client-core-jvm from 2.3.8 to 2.3.13",
      "fixed_code": "implementation(\"io.ktor:ktor-client-core-jvm:2.3.13\")",
      "explanation": "JetBrains Ktor information disclosure",
      "alternatives": [],
      "package": "io.ktor:ktor-client-core-jvm",
      "from_version": "2.3.8",
      "to_version": "2.3.13",
      "ecosystem": "Maven",
      "available_versions": [
        "2.3.13"
      ]
    }
  },
  {
    "tool": "osv-scanner",
    "id": "GHSA-4cx2-fc23-5wg6",
    "summary": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
    "details": "Allocation of Resources Without Limits or Throttling vulnerability in Legion of the Bouncy Castle Inc. Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation. This vulnerability is associated with program files  https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertP... https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertPathReviewer.java ,  https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathRevi... https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathReviewer.java .\n\nThis issue affects Bouncy Castle for Java: from BC 1.44 through 1.78, from BCPKIX FIPS 1.0.0 through 1.0.7, from BCPKIX FIPS 2.0.0 through 2.0.7.",
    "severity": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:N/VI:N/VA:L/SC:N/SI:N/SA:N/S:P/R:U/RE:M/U:Amber",
    "package_name": "org.bouncycastle:bcpkix-jdk18on",
    "package_version": "1.78",
    "ecosystem": "Maven",
    "source_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "source_type": "lockfile",
    "path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
    "start": {
      "line": 1
    },
    "affected": [
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.47",
          "1.48",
          "1.49",
          "1.50",
          "1.51",
          "1.52",
          "1.53",
          "1.54",
          "1.55",
          "1.56",
          "1.57",
          "1.58",
          "1.59",
          "1.60",
          "1.61",
          "1.62",
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk15to18",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk15to18"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.63",
          "1.64",
          "1.65",
          "1.66",
          "1.67",
          "1.68",
          "1.69",
          "1.70",
          "1.71",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-jdk18on",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-jdk18on"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.44"
              },
              {
                "fixed": "1.79"
              }
            ]
          }
        ],
        "versions": [
          "1.71",
          "1.71.1",
          "1.72",
          "1.73",
          "1.74",
          "1.75",
          "1.76",
          "1.77",
          "1.78",
          "1.78.1"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.78",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "1.0.0"
              },
              {
                "fixed": "1.0.8"
              }
            ]
          }
        ],
        "versions": [
          "1.0.0",
          "1.0.1",
          "1.0.2",
          "1.0.3",
          "1.0.4",
          "1.0.5",
          "1.0.6",
          "1.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 1.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      },
      {
        "package": {
          "ecosystem": "Maven",
          "name": "org.bouncycastle:bcpkix-fips",
          "purl": "pkg:maven/org.bouncycastle/bcpkix-fips"
        },
        "ranges": [
          {
            "type": "ECOSYSTEM",
            "events": [
              {
                "introduced": "2.0.0"
              },
              {
                "fixed": "2.0.8"
              }
            ]
          }
        ],
        "versions": [
          "2.0.7"
        ],
        "database_specific": {
          "last_known_affected_version_range": "<= 2.0.7",
          "source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2025/08/GHSA-4cx2-fc23-5wg6/GHSA-4cx2-fc23-5wg6.json"
        }
      }
    ],
    "fixed_version": "1.79, 1.79, 1.79, 1.0.8, 2.0.8",
    "security_category": "dependency_vulnerabilities",
    "category_confidence": 0.9,
    "code_context": {
      "file_path": "/home/runner/work/mpo-api-authn-server/mpo-api-authn-server/webauthn-test-lib/gradle.lockfile",
      "language": "maven",
      "file_extension": ".gradle",
      "vulnerable_code": "org.bouncycastle:bcpkix-jdk18on:1.78",
      "extraction_type": "dependency_file",
      "extraction_success": false
    },
    "fix": {
      "confidence": 1.0,
      "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 2.0.8",
      "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:2.0.8\")",
      "explanation": "Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation",
      "alternatives": [
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.79",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.79\")",
          "explanation": "Alternative fix for projects on different release branch (1.79 branch)"
        },
        {
          "description": "Upgrade org.bouncycastle:bcpkix-jdk18on from 1.78 to 1.0.8",
          "fixed_code": "implementation(\"org.bouncycastle:bcpkix-jdk18on:1.0.8\")",
          "explanation": "Alternative fix for projects on different release branch (1.0.8 branch)"
        }
      ],
      "package": "org.bouncycastle:bcpkix-jdk18on",
      "from_version": "1.78",
      "to_version": "2.0.8",
      "ecosystem": "Maven",
      "available_versions": [
        "2.0.8",
        "1.79",
        "1.0.8"
      ]
    }
  },
  {
    "tool": "zap",
    "id": "10049",
    "alert_ref": "10049-3",
    "alert": "Storable and Cacheable Content",
    "name": "Storable and Cacheable Content",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "2",
    "risk_desc": "Informational (Medium)",
    "message": "The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
    "description": "The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
    "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
    "reference": "https://datatracker.ietf.org/doc/html/rfc7234https://datatracker.ietf.org/doc/html/rfc7231https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html",
    "cwe": "524",
    "wasc": "13",
    "site_host": "localhost",
    "site_port": "8081",
    "uri": "http://localhost:8081",
    "url": "http://localhost:8081",
    "method": "GET",
    "instances": [
      {
        "id": "2",
        "uri": "http://localhost:8081",
        "method": "GET",
        "param": "",
        "attack": "",
        "evidence": "",
        "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
      }
    ],
    "instance_count": 1,
    "path": "http://localhost:8081",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content bein...",
      "fixed_code": "// Ktor Cache Control\ninstall(CachingHeaders) {\n    options { call, _ ->\n        when {\n            call.request.path().startsWith(\"/api\") ->\n                CachingOptions(CacheControl.NoStore(CacheControl.Visibility.Private))\n            else -> null\n        }\n    }\n}",
      "explanation": "ZAP identified Storable and Cacheable Content in HTTP response. Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "40040",
    "alert_ref": "40040-2",
    "alert": "CORS Misconfiguration",
    "name": "CORS Misconfiguration",
    "severity": "MEDIUM",
    "risk_code": "2",
    "confidence": "3",
    "risk_desc": "Medium (High)",
    "message": "This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim's user agent.In order to perform authenticated AJAX queries, the server must specify the header \"Access-Control-Allow-Credentials: true\" and the \"Access-Control-Allow-Origin\" header must be set to null or the malicious page's domain. Even if this misconfiguration doesn't allow authenticated AJAX requests, unauthenticated sensitive content can still be accessed (e.g intranet websites).A malicious page can belong to a malicious website but also a trusted website with flaws (e.g XSS, support of HTTP without TLS allowing code injection through MITM, etc).",
    "description": "This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim's user agent.In order to perform authenticated AJAX queries, the server must specify the header \"Access-Control-Allow-Credentials: true\" and the \"Access-Control-Allow-Origin\" header must be set to null or the malicious page's domain. Even if this misconfiguration doesn't allow authenticated AJAX requests, unauthenticated sensitive content can still be accessed (e.g intranet websites).A malicious page can belong to a malicious website but also a trusted website with flaws (e.g XSS, support of HTTP without TLS allowing code injection through MITM, etc).",
    "solution": "If a web resource contains sensitive information, the origin should be properly specified in the Access-Control-Allow-Origin header. Only trusted websites needing this resource should be specified in this header, with the most secured protocol supported.",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORShttps://portswigger.net/web-security/cors",
    "cwe": "942",
    "wasc": "14",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "34",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "",
        "attack": "origin: http://1OJKbeTK.com",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "32",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "",
        "attack": "origin: http://1OJKbeTK.com",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "33",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "",
        "attack": "origin: http://1OJKbeTK.com",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "31",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "",
        "attack": "origin: http://1OJKbeTK.com",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "If a web resource contains sensitive information, the origin should be properly specified in the Access-Control-Allow-Origin header. Only trusted websites needing this resource should be specified in ...",
      "fixed_code": "// Ktor CORS Configuration\ninstall(CORS) {\n    allowHost(\"yourdomain.com\", schemes = listOf(\"https\"))\n    allowCredentials = true\n    allowMethod(HttpMethod.Get)\n    allowMethod(HttpMethod.Post)\n}",
      "explanation": "ZAP identified CORS Misconfiguration in HTTP response. If a web resource contains sensitive information, the origin should be properly specified in the Access-Control-Allow-Origin header. Only trusted websites needing this resource should be specified in this header, with the most secured protocol supported.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "90004",
    "alert_ref": "90004-1",
    "alert": "Insufficient Site Isolation Against Spectre Vulnerability",
    "name": "Insufficient Site Isolation Against Spectre Vulnerability",
    "severity": "LOW",
    "risk_code": "1",
    "confidence": "2",
    "risk_desc": "Low (Medium)",
    "message": "Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.",
    "description": "Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.",
    "solution": "Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.'same-site' is considered as less secured and should be avoided.If resources must be shared, set the header to 'cross-origin'.If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-resource-policy).",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy",
    "cwe": "693",
    "wasc": "14",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "14",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "Cross-Origin-Resource-Policy",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "2",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "Cross-Origin-Resource-Policy",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 2,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.'same-sit...",
      "fixed_code": "// Ktor Security Headers\ninstall(DefaultHeaders) {\n    header(\"Cross-Origin-Resource-Policy\", \"same-origin\")\n}",
      "explanation": "ZAP identified Insufficient Site Isolation Against Spectre Vulnerability in HTTP response. Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.'same-site' is considered as less secured and should be avoided.If resources must be shared, set the header to 'cross-origin'.If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-resource-policy).",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "10021",
    "alert_ref": "10021",
    "alert": "X-Content-Type-Options Header Missing",
    "name": "X-Content-Type-Options Header Missing",
    "severity": "LOW",
    "risk_code": "1",
    "confidence": "2",
    "risk_desc": "Low (Medium)",
    "message": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
    "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
    "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)https://owasp.org/www-community/Security_Headers",
    "cwe": "693",
    "wasc": "15",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "8",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "x-content-type-options",
        "attack": "",
        "evidence": "",
        "otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
      },
      {
        "id": "0",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "x-content-type-options",
        "attack": "",
        "evidence": "",
        "otherinfo": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses."
      }
    ],
    "instance_count": 2,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end us...",
      "fixed_code": "// Ktor Security Headers\ninstall(DefaultHeaders) {\n    header(\"X-Content-Type-Options\", \"nosniff\")\n}",
      "explanation": "ZAP identified X-Content-Type-Options Header Missing in HTTP response. Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "90005",
    "alert_ref": "90005-3",
    "alert": "Sec-Fetch-Dest Header is Missing",
    "name": "Sec-Fetch-Dest Header is Missing",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "3",
    "risk_desc": "Informational (High)",
    "message": "Specifies how and where the data would be used. For instance, if the value is audio, then the requested resource must be audio data and not any other type of resource.",
    "description": "Specifies how and where the data would be used. For instance, if the value is audio, then the requested resource must be audio data and not any other type of resource.",
    "solution": "Ensure that Sec-Fetch-Dest header is included in request headers.",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Dest",
    "cwe": "352",
    "wasc": "9",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "29",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "Sec-Fetch-Dest",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "5",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "Sec-Fetch-Dest",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "23",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "Sec-Fetch-Dest",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "20",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "Sec-Fetch-Dest",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that Sec-Fetch-Dest header is included in request headers.",
      "fixed_code": "// Server-side validation of Sec-Fetch headers\nintercept(ApplicationCallPipeline.Call) {\n    val fetchDest = call.request.headers[\"Sec-Fetch-Dest\"]\n    val fetchMode = call.request.headers[\"Sec-Fetch-Mode\"]\n    val fetchSite = call.request.headers[\"Sec-Fetch-Site\"]\n\n    // Validate Sec-Fetch headers for sensitive endpoints\n    if (call.request.path().startsWith(\"/api/\") && fetchSite == \"cross-site\") {\n        call.respond(HttpStatusCode.Forbidden)\n        finish()\n    }\n}",
      "explanation": "ZAP identified Sec-Fetch-Dest Header is Missing in HTTP response. Ensure that Sec-Fetch-Dest header is included in request headers.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "90005",
    "alert_ref": "90005-2",
    "alert": "Sec-Fetch-Mode Header is Missing",
    "name": "Sec-Fetch-Mode Header is Missing",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "3",
    "risk_desc": "Informational (High)",
    "message": "Allows to differentiate between requests for navigating between HTML pages and requests for loading resources like images, audio etc.",
    "description": "Allows to differentiate between requests for navigating between HTML pages and requests for loading resources like images, audio etc.",
    "solution": "Ensure that Sec-Fetch-Mode header is included in request headers.",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Mode",
    "cwe": "352",
    "wasc": "9",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "24",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "Sec-Fetch-Mode",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "4",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "Sec-Fetch-Mode",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "16",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "Sec-Fetch-Mode",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "18",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "Sec-Fetch-Mode",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that Sec-Fetch-Mode header is included in request headers.",
      "fixed_code": "// Server-side validation of Sec-Fetch headers\nintercept(ApplicationCallPipeline.Call) {\n    val fetchDest = call.request.headers[\"Sec-Fetch-Dest\"]\n    val fetchMode = call.request.headers[\"Sec-Fetch-Mode\"]\n    val fetchSite = call.request.headers[\"Sec-Fetch-Site\"]\n\n    // Validate Sec-Fetch headers for sensitive endpoints\n    if (call.request.path().startsWith(\"/api/\") && fetchSite == \"cross-site\") {\n        call.respond(HttpStatusCode.Forbidden)\n        finish()\n    }\n}",
      "explanation": "ZAP identified Sec-Fetch-Mode Header is Missing in HTTP response. Ensure that Sec-Fetch-Mode header is included in request headers.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "90005",
    "alert_ref": "90005-1",
    "alert": "Sec-Fetch-Site Header is Missing",
    "name": "Sec-Fetch-Site Header is Missing",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "3",
    "risk_desc": "Informational (High)",
    "message": "Specifies the relationship between request initiator's origin and target's origin.",
    "description": "Specifies the relationship between request initiator's origin and target's origin.",
    "solution": "Ensure that Sec-Fetch-Site header is included in request headers.",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-Site",
    "cwe": "352",
    "wasc": "9",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "21",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "Sec-Fetch-Site",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "3",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "Sec-Fetch-Site",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "10",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "Sec-Fetch-Site",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "15",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "Sec-Fetch-Site",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that Sec-Fetch-Site header is included in request headers.",
      "fixed_code": "// Server-side validation of Sec-Fetch headers\nintercept(ApplicationCallPipeline.Call) {\n    val fetchDest = call.request.headers[\"Sec-Fetch-Dest\"]\n    val fetchMode = call.request.headers[\"Sec-Fetch-Mode\"]\n    val fetchSite = call.request.headers[\"Sec-Fetch-Site\"]\n\n    // Validate Sec-Fetch headers for sensitive endpoints\n    if (call.request.path().startsWith(\"/api/\") && fetchSite == \"cross-site\") {\n        call.respond(HttpStatusCode.Forbidden)\n        finish()\n    }\n}",
      "explanation": "ZAP identified Sec-Fetch-Site Header is Missing in HTTP response. Ensure that Sec-Fetch-Site header is included in request headers.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "90005",
    "alert_ref": "90005-4",
    "alert": "Sec-Fetch-User Header is Missing",
    "name": "Sec-Fetch-User Header is Missing",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "3",
    "risk_desc": "Informational (High)",
    "message": "Specifies if a navigation request was initiated by a user.",
    "description": "Specifies if a navigation request was initiated by a user.",
    "solution": "Ensure that Sec-Fetch-User header is included in user initiated requests.",
    "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Sec-Fetch-User",
    "cwe": "352",
    "wasc": "9",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "30",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "Sec-Fetch-User",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "6",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "Sec-Fetch-User",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "27",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "Sec-Fetch-User",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      },
      {
        "id": "22",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "Sec-Fetch-User",
        "attack": "",
        "evidence": "",
        "otherinfo": ""
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Ensure that Sec-Fetch-User header is included in user initiated requests.",
      "fixed_code": "// Server-side validation of Sec-Fetch headers\nintercept(ApplicationCallPipeline.Call) {\n    val fetchDest = call.request.headers[\"Sec-Fetch-Dest\"]\n    val fetchMode = call.request.headers[\"Sec-Fetch-Mode\"]\n    val fetchSite = call.request.headers[\"Sec-Fetch-Site\"]\n\n    // Validate Sec-Fetch headers for sensitive endpoints\n    if (call.request.path().startsWith(\"/api/\") && fetchSite == \"cross-site\") {\n        call.respond(HttpStatusCode.Forbidden)\n        finish()\n    }\n}",
      "explanation": "ZAP identified Sec-Fetch-User Header is Missing in HTTP response. Ensure that Sec-Fetch-User header is included in user initiated requests.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  },
  {
    "tool": "zap",
    "id": "10049",
    "alert_ref": "10049-3",
    "alert": "Storable and Cacheable Content",
    "name": "Storable and Cacheable Content",
    "severity": "INFO",
    "risk_code": "0",
    "confidence": "2",
    "risk_desc": "Informational (Medium)",
    "message": "The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
    "description": "The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.",
    "solution": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
    "reference": "https://datatracker.ietf.org/doc/html/rfc7234https://datatracker.ietf.org/doc/html/rfc7231https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html",
    "cwe": "524",
    "wasc": "13",
    "site_host": "localhost",
    "site_port": "8080",
    "uri": "http://localhost:8080",
    "url": "http://localhost:8080",
    "method": "GET",
    "instances": [
      {
        "id": "12",
        "uri": "http://localhost:8080",
        "method": "GET",
        "param": "",
        "attack": "",
        "evidence": "",
        "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
      },
      {
        "id": "1",
        "uri": "http://localhost:8080/",
        "method": "GET",
        "param": "",
        "attack": "",
        "evidence": "",
        "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
      },
      {
        "id": "7",
        "uri": "http://localhost:8080/robots.txt",
        "method": "GET",
        "param": "",
        "attack": "",
        "evidence": "",
        "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
      },
      {
        "id": "9",
        "uri": "http://localhost:8080/sitemap.xml",
        "method": "GET",
        "param": "",
        "attack": "",
        "evidence": "",
        "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
      }
    ],
    "instance_count": 4,
    "path": "http://localhost:8080",
    "start": {
      "line": 1
    },
    "code_context": null,
    "fix": {
      "confidence": 0.9,
      "description": "Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content bein...",
      "fixed_code": "// Ktor Cache Control\ninstall(CachingHeaders) {\n    options { call, _ ->\n        when {\n            call.request.path().startsWith(\"/api\") ->\n                CachingOptions(CacheControl.NoStore(CacheControl.Visibility.Private))\n            else -> null\n        }\n    }\n}",
      "explanation": "ZAP identified Storable and Cacheable Content in HTTP response. Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:Cache-Control: no-cache, no-store, must-revalidate, privatePragma: no-cacheExpires: 0This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
      "alternatives": []
    },
    "tool_name": "ZAP",
    "tool_version": "2.16.1",
    "security_category": "web_security",
    "category_confidence": 0.9,
    "fix_complexity": "low"
  }
]